{"version":3,"sources":["app/services/localStorage.service.js","app/services/auth.service.js","app/services/http.service.js","app/services/user.service.js","app/utils/generateAuthError.js","app/utils/history.js","app/store/users.js","app/components/common/protectedRoute.jsx","app/services/profession.service.js","app/utils/isOutDated.js","app/store/professions.js","app/services/quality.service.js","app/store/qualities.js","app/components/ui/hoc/appLoader.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/components/common/form/checkBoxField.jsx","app/components/common/form/textField.jsx","app/components/ui/loginForm.jsx","app/utils/validator.js","app/components/common/form/multiSelectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/selectField.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/layouts/logOut.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/common/backButton.jsx","app/components/page/userEditPage/userEditPage.jsx","app/components/ui/cards/meetingsCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/cards/qualitiesCard.jsx","app/components/ui/cards/userCard.jsx","app/services/comment.service.js","app/store/comments.js","app/components/common/form/textAreaField.jsx","app/components/ui/comments/addCommentForm.jsx","app/utils/formatDate.js","app/utils/declOfNum.js","app/components/ui/comments/comment.jsx","app/components/ui/comments/commentsList.jsx","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/listGroup.jsx","app/components/common/pagination.jsx","app/components/common/searchBar.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/profession.jsx","app/components/ui/qualities/index.js","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/search.js","app/utils/paginate.js","app/components/ui/hoc/usersLoader.jsx","app/layouts/users.jsx","app/App.js","app/store/createStore.js","index.js"],"names":["TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USER_ID_KEY","setTokens","expiresIn","accessToken","userId","refreshToken","expiresDate","Date","getTime","localStorage","setItem","localStorageService","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","config","apiEndPoint","params","key","process","REACT_APP_FIREBASE_KEY","authService","signUp","payload","a","post","data","signIn","email","password","returnSecureToken","refresh","grant_type","refresh_token","http","configFile","interceptors","request","use","isExpired","now","isFireBase","containSlash","test","url","slice","idToken","id_token","expires_in","localId","user_id","auth","headers","Authorization","error","Promise","reject","response","res","content","_id","Object","keys","map","status","console","log","message","toast","httpService","get","put","patch","delete","userEndpoint","userService","getAll","getCurrentUser","updateUserData","generateAuthError","history","createBrowserHistory","initialState","entities","isLoading","isLoggedIn","dataLoaded","usersSlice","createSlice","name","reducers","usersRequested","state","usersReceived","action","usersRequestFailed","authRequested","authRequestSuccess","authRequestFailed","userCreated","push","userUpdated","userIndex","findIndex","user","userLoggedOut","actions","usersReducer","reducer","userUpdateRequested","createAction","userUpdateRequestedFailed","loadUsersList","dispatch","getState","getUserById","users","find","ProtectedRoute","Component","component","children","rest","useSelector","render","props","to","pathname","from","location","professionService","isOutDated","date","professionsSlice","lastFetch","professionsRequested","professionsReceived","professionsRequestFailed","professionsReducer","getProfessionById","profId","professions","prof","qualityService","qualitiesSlice","qualitiesRequested","qualitiesReceived","qualitiesRequestFailed","qualitiesReducer","loadQualitiesList","qualities","getQualitiesByIds","qualitiesIds","filter","q","includes","AppLoader","useDispatch","usersStatusLoading","useEffect","NavProfile","useState","isOpen","setOpen","currentUser","className","onClick","prevState","src","image","alt","height","NavBar","CheckBoxField","value","onChange","type","id","checked","htmlFor","TextField","label","placeholder","showPassword","setShowPassword","target","defaultProps","initialData","stayOn","LoginForm","useHistory","setData","errors","setErrors","loginError","validateScheme","yup","shape","required","validate","then","catch","err","path","length","isValid","handleChange","onSubmit","e","preventDefault","redirect","code","errorMessage","disabled","validator","validateMethod","statusValidate","trim","fieldName","MultiSelectField","options","defaultValue","optionsArray","Array","isArray","optionName","closeMenuOnSelect","isMulti","classNamePrefix","RadioField","option","SelectField","defaultOption","RegisterForm","profession","sex","license","qualitiesList","validatorConfig","isRequired","isEmail","min","isCapitalSymbol","isContainDigit","newData","href","Login","useParams","formType","setFormType","toggleFormType","role","LogOut","useMockData","statusConsts","setError","setStatus","progress","setProgress","count","setCount","summaryCount","reduce","acc","cur","incrementCount","quality","newProgress","Math","floor","updateProgress","initialize","Main","BackHistoryButton","goBack","UserEditPage","setIsLoading","professionsLoading","qualitiesLoading","userQualities","transformData","qual","values","MeetingsCard","Quality","color","QualitiesList","item","QualitiesCard","UserCard","currentUserId","style","zIndex","width","rate","commentEndpoint","commentService","createComment","getComments","pageId","orderBy","equalTo","removeComment","commentId","commentsSlice","commentsRequested","commentsReceived","commentsRequestFailed","commentCreated","commentRemoved","comment","commentsReducer","commentCreateRequested","commentCreateRequestedFailed","commentRemoveRequested","commentRemoveRequestedFailed","TextAreaField","rows","AddCommentForm","formatDate","Number","currentDateTime","postCreatedTime","diffTime","abs","year","getFullYear","month","getMonth","day","getDate","hours","getHours","getMinutes","months","getValidTime","oneMinutesAgo","thirtyMinutesAgo","lessOneDay","lessCurrentYear","checkLeapYear","minutes","n","words","n1","declOfNum","Comment","created","created_at","onRemove","CommentsList","comments","sortedComments","sort","b","Comments","UserPage","userProfession","completedMeetings","ListGroup","items","valueProperty","contentProperty","onItemSelect","selectedItem","Pagination","onPageChange","itemsCount","pageSize","currentPage","pageCount","ceil","pages","_","range","page","SearchBar","onSearch","searchStatus","text","BookMark","classes","TableHeader","onSort","selectedSort","columns","renderSortArrow","currentPath","order","column","undefined","scope","TableBody","renderContent","Table","Profession","Qualities","UserTable","onToggleBookMark","bookmark","UsersListPage","setCurrentPage","selectedProf","setSelectedProf","sortBy","setSortBy","searchQuery","setSearchQuery","filteredUsers","query","searchBy","el","toLowerCase","JSON","stringify","usersCrop","pageNumber","startIndex","take","paginate","event","onDelete","pageIndex","UsersLoader","dataStatus","propTypes","PropTypes","oneOfType","arrayOf","node","Users","edit","App","exact","require","combineReducers","configureStore","rootReducer","store","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cbaf938.chunk.js","sourcesContent":["const TOKEN_KEY = 'jwt-token';\r\nconst REFRESH_KEY = 'jwt-refresh-token';\r\nconst EXPIRES_KEY = 'jwt-expires';\r\nconst USER_ID_KEY = 'user-local-id';\r\n\r\nexport function setTokens({ expiresIn = 3600, accessToken, userId, refreshToken }) {\r\n  const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n\r\n  localStorage.setItem(TOKEN_KEY, accessToken);\r\n  localStorage.setItem(REFRESH_KEY, refreshToken);\r\n  localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n  localStorage.setItem(USER_ID_KEY, userId);\r\n}\r\n\r\nexport function getAccessToken() {\r\n  return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getRefreshToken() {\r\n  return localStorage.getItem(REFRESH_KEY);\r\n}\r\n\r\nexport function getTokenExpiresDate() {\r\n  return localStorage.getItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getUserId() {\r\n  return localStorage.getItem(USER_ID_KEY);\r\n}\r\n\r\nexport function removeAuthData() {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem(REFRESH_KEY);\r\n  localStorage.removeItem(EXPIRES_KEY);\r\n  localStorage.removeItem(USER_ID_KEY);\r\n}\r\n\r\nconst localStorageService = {\r\n  setTokens,\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  getTokenExpiresDate,\r\n  getUserId,\r\n  removeAuthData\r\n};\r\n\r\nexport default localStorageService;\r\n","import axios from 'axios';\r\nimport localStorageService from './localStorage.service';\r\nimport config from '../config.json';\r\n\r\nconst httpAuth = axios.create({\r\n  baseURL: config.apiEndPoint + '/auth/',\r\n  params: {\r\n    key: process.env.REACT_APP_FIREBASE_KEY\r\n  }\r\n});\r\n\r\nconst authService = {\r\n  signUp: async (payload) => {\r\n    const { data } = await httpAuth.post(`signUp`, payload);\r\n    return data;\r\n  },\r\n  signIn: async ({ email, password }) => {\r\n    const { data } = await httpAuth.post(`signInWithPassword`, {\r\n      email,\r\n      password,\r\n      returnSecureToken: true\r\n    });\r\n    return data;\r\n  },\r\n  refresh: async () => {\r\n    const { data } = await httpAuth.post('token', {\r\n      grant_type: 'refresh_token',\r\n      refresh_token: localStorageService.getRefreshToken()\r\n    });\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default authService;\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport configFile from '../config.json';\r\nimport authService from './auth.service';\r\nimport localStorageService from './localStorage.service';\r\n\r\nconst http = axios.create({\r\n  baseURL: configFile.apiEndPoint\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n  async function (config) {\r\n    const expiresDate = localStorageService.getTokenExpiresDate();\r\n    const refreshToken = localStorageService.getRefreshToken();\r\n\r\n    const isExpired = refreshToken && expiresDate < Date.now();\r\n\r\n    if (configFile.isFireBase) {\r\n      const containSlash = /\\/$/gi.test(config.url);\r\n      config.url = (containSlash ? config.url.slice(0, -1) : config.url) + '.json';\r\n\r\n      if (isExpired) {\r\n        const { data } = await authService.refresh();\r\n\r\n        localStorageService.setTokens({\r\n          refreshToken: data.refresh_token,\r\n          idToken: data.id_token,\r\n          expiresIn: data.expires_in,\r\n          localId: data.user_id\r\n        });\r\n      }\r\n      const accessToken = localStorageService.getAccessToken();\r\n      if (accessToken) {\r\n        config.params = { ...config.params, auth: accessToken };\r\n      }\r\n    } else {\r\n      if (isExpired) {\r\n        const { data } = await authService.refresh();\r\n\r\n        localStorageService.setTokens(data);\r\n      }\r\n      const accessToken = localStorageService.getAccessToken();\r\n      if (accessToken) {\r\n        config.headers = { ...config.headers, Authorization: `Bearer ${accessToken}` };\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nfunction TransformData(data) {\r\n  return data && !data._id\r\n    ? Object.keys(data).map((key) => ({\r\n        ...data[key]\r\n      }))\r\n    : data;\r\n}\r\n\r\nhttp.interceptors.response.use(\r\n  (res) => {\r\n    if (configFile.isFireBase) {\r\n      res.data = { content: TransformData(res.data) };\r\n    }\r\n    res.data = { content: res.data };\r\n    return res;\r\n  },\r\n  function (error) {\r\n    const expectedErrors = error.response && error.response.status >= 400 && error.response.status < 500;\r\n    if (!expectedErrors) {\r\n      console.log(error.message);\r\n      toast.error('Something was wrong. Try it later');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst httpService = {\r\n  get: http.get,\r\n  post: http.post,\r\n  put: http.put,\r\n  patch: http.patch,\r\n  delete: http.delete\r\n};\r\n\r\nexport default httpService;\r\n","import httpService from './http.service';\r\nimport localStorageService from './localStorage.service';\r\n\r\nconst userEndpoint = 'user/';\r\n\r\nconst userService = {\r\n  getAll: async () => {\r\n    const { data } = await httpService.get(userEndpoint);\r\n    return data;\r\n  },\r\n  create: async (payload) => {\r\n    const { data } = await httpService.put(userEndpoint + payload._id, payload);\r\n    return data;\r\n  },\r\n  getCurrentUser: async () => {\r\n    const { data } = await httpService.get(userEndpoint + localStorageService.getUserId());\r\n    return data;\r\n  },\r\n  updateUserData: async (payload) => {\r\n    const { data } = await httpService.patch(\r\n      userEndpoint + localStorageService.getUserId(),\r\n      payload\r\n    );\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default userService;\r\n","const generateAuthError = (message) => {\r\n  switch (message) {\r\n    case 'EMAIL_EXISTS':\r\n      return 'Пользователь с таким email уже существует';\r\n    case 'USER_DISABLED':\r\n      return 'Учетная запись пользователя отключена администратором.';\r\n    case 'EMAIL_NOT_FOUND':\r\n    case 'INVALID_PASSWORD':\r\n    case 'INVALID_EMAIL':\r\n      return 'Неверный email или пароль';\r\n    default:\r\n      return 'Слишком много попыток входа, попробуйте позже';\r\n  }\r\n};\r\n\r\nexport default generateAuthError;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","import { createAction, createSlice } from '@reduxjs/toolkit';\r\nimport authService from '../services/auth.service';\r\nimport localStorageService, { setTokens } from '../services/localStorage.service';\r\nimport userService from '../services/user.service';\r\nimport generateAuthError from '../utils/generateAuthError';\r\nimport history from '../utils/history';\r\n\r\nconst initialState = localStorageService.getAccessToken()\r\n  ? {\r\n      entities: null,\r\n      isLoading: true,\r\n      error: null,\r\n      auth: { userId: localStorageService.getUserId() },\r\n      isLoggedIn: true,\r\n      dataLoaded: false\r\n    }\r\n  : {\r\n      entities: null,\r\n      isLoading: false,\r\n      error: null,\r\n      auth: null,\r\n      isLoggedIn: false,\r\n      dataLoaded: false\r\n    };\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState: initialState,\r\n  reducers: {\r\n    usersRequested: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    usersReceived: (state, action) => {\r\n      state.entities = action.payload;\r\n      state.dataLoaded = true;\r\n      state.isLoading = false;\r\n    },\r\n    usersRequestFailed: (state, action) => {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    authRequested: (state) => {\r\n      state.error = null;\r\n    },\r\n    authRequestSuccess: (state, action) => {\r\n      state.auth = action.payload;\r\n      state.isLoggedIn = true;\r\n    },\r\n    authRequestFailed: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    userCreated: (state, action) => {\r\n      state.entities.push(action.payload);\r\n    },\r\n    userUpdated: (state, action) => {\r\n      const userIndex = state.entities.findIndex((user) => user._id === action.payload._id);\r\n      state.entities[userIndex] = action.payload;\r\n    },\r\n    userLoggedOut: (state) => {\r\n      state.entities = null;\r\n      state.isLoggedIn = false;\r\n      state.auth = null;\r\n    }\r\n  }\r\n});\r\n\r\nconst { actions, reducer: usersReducer } = usersSlice;\r\n\r\nconst {\r\n  usersRequested,\r\n  usersReceived,\r\n  usersRequestFailed,\r\n  authRequested,\r\n  authRequestSuccess,\r\n  authRequestFailed,\r\n  userUpdated,\r\n  userLoggedOut\r\n} = actions;\r\n\r\nconst userUpdateRequested = createAction('users/userUpdateRequested');\r\nconst userUpdateRequestedFailed = createAction('users/userUpdateRequestedFailed');\r\n\r\nexport const updateUserData = (payload) => async (dispatch) => {\r\n  dispatch(userUpdateRequested());\r\n  try {\r\n    const { content } = await userService.updateUserData(payload);\r\n    dispatch(userUpdated(content));\r\n    history.push(`/users/${payload._id}`);\r\n  } catch (error) {\r\n    dispatch(userUpdateRequestedFailed());\r\n  }\r\n};\r\n\r\nexport const signIn =\r\n  ({ payload, redirect }) =>\r\n  async (dispatch) => {\r\n    const { email, password } = payload;\r\n    dispatch(authRequested());\r\n    try {\r\n      const data = await authService.signIn({ email, password });\r\n      setTokens(data);\r\n      dispatch(authRequestSuccess({ userId: data.userId }));\r\n      history.push(redirect);\r\n    } catch (error) {\r\n      const { code, message } = error.response.data.error;\r\n      if (code === 400) {\r\n        const errorMessage = generateAuthError(message);\r\n        dispatch(authRequestFailed(errorMessage));\r\n      } else {\r\n        dispatch(authRequestFailed(error.message));\r\n      }\r\n    }\r\n  };\r\n\r\nexport const signUp = (payload) => async (dispatch) => {\r\n  dispatch(authRequested());\r\n  try {\r\n    const data = await authService.signUp(payload);\r\n    setTokens(data);\r\n    dispatch(authRequestSuccess({ userId: data.userId }));\r\n    history.push('/users');\r\n  } catch (error) {\r\n    dispatch(authRequestFailed(error.message));\r\n  }\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n  localStorageService.removeAuthData();\r\n  dispatch(userLoggedOut());\r\n  history.push('/');\r\n};\r\n\r\nexport const loadUsersList = () => async (dispatch, getState) => {\r\n  dispatch(usersRequested());\r\n  try {\r\n    const { content } = await userService.getAll();\r\n    dispatch(usersReceived(content));\r\n  } catch (error) {\r\n    dispatch(usersRequestFailed(error.message));\r\n  }\r\n};\r\n\r\nexport const getUsersList = () => (state) => state.users.entities;\r\nexport const getCurrentUserData = () => (state) => {\r\n  return state.users.entities ? state.users.entities.find((user) => user._id === state.users.auth.userId) : null;\r\n};\r\n\r\nexport const getUsersLoadingStatus = () => (state) => state.users.isLoading;\r\nexport const getUserById = (userId) => (state) => {\r\n  if (state.users.entities) {\r\n    return state.users.entities.find((user) => user._id === userId);\r\n  }\r\n};\r\nexport const getIsLoggedIn = () => (state) => state.users.isLoggedIn;\r\nexport const getDataStatus = () => (state) => state.users.dataLoaded;\r\nexport const getCurrentUserId = () => (state) => state.users.auth.userId;\r\nexport const getAuthErrors = () => (state) => state.users.error;\r\n\r\nexport default usersReducer;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../store/users';\r\n\r\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn());\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!isLoggedIn) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n        return Component ? <Component {...props} /> : children;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n  component: PropTypes.func,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n  location: PropTypes.object,\r\n  match: PropTypes.object,\r\n  params: PropTypes.object,\r\n  userId: PropTypes.string\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import httpService from './http.service';\r\n\r\nconst professionEndpoint = 'profession/';\r\n\r\nconst professionService = {\r\n  getAll: async () => {\r\n    const { data } = await httpService.get(professionEndpoint);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default professionService;\r\n","const TEN_MINUTES = 10 * 60 * 1000;\r\nconst isOutDated = (date) => Date.now() - date > TEN_MINUTES;\r\n\r\nexport default isOutDated;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport professionService from '../services/profession.service';\r\nimport isOutDated from '../utils/isOutDated';\r\n\r\nconst professionsSlice = createSlice({\r\n  name: 'professions',\r\n  initialState: {\r\n    entities: null,\r\n    isLoading: true,\r\n    error: null,\r\n    lastFetch: null\r\n  },\r\n  reducers: {\r\n    professionsRequested: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    professionsReceived: (state, action) => {\r\n      state.entities = action.payload;\r\n      state.lastFetch = Date.now();\r\n      state.isLoading = false;\r\n    },\r\n    professionsRequestFailed: (state, action) => {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    }\r\n  }\r\n});\r\n\r\nconst { actions, reducer: professionsReducer } = professionsSlice;\r\n\r\nconst { professionsRequested, professionsReceived, professionsRequestFailed } = actions;\r\n\r\nexport const loadProfessionsList = () => async (dispatch, getState) => {\r\n  const { lastFetch } = getState().professions;\r\n  if (isOutDated(lastFetch)) {\r\n    dispatch(professionsRequested());\r\n    try {\r\n      const { content } = await professionService.getAll();\r\n      dispatch(professionsReceived(content));\r\n    } catch (error) {\r\n      dispatch(professionsRequestFailed(error.message));\r\n    }\r\n  }\r\n};\r\n\r\nexport const getProfessions = () => (state) => state.professions.entities;\r\nexport const getProfessionsLoadingStatus = () => (state) => state.professions.isLoading;\r\nexport const getProfessionById = (profId) => (state) => {\r\n  if (state.professions.entities) {\r\n    return state.professions.entities.find((prof) => prof._id === profId);\r\n  }\r\n};\r\n\r\nexport default professionsReducer;\r\n","import httpService from './http.service';\r\n\r\nconst qualityEndpoint = 'quality/';\r\n\r\nconst qualityService = {\r\n  getAll: async () => {\r\n    const { data } = await httpService.get(qualityEndpoint);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default qualityService;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport qualityService from '../services/quality.service';\r\nimport isOutDated from '../utils/isOutDated';\r\n\r\nconst qualitiesSlice = createSlice({\r\n  name: 'qualities',\r\n  initialState: {\r\n    entities: null,\r\n    isLoading: true,\r\n    error: null,\r\n    lastFetch: null\r\n  },\r\n  reducers: {\r\n    qualitiesRequested: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    qualitiesReceived: (state, action) => {\r\n      state.entities = action.payload;\r\n      state.lastFetch = Date.now();\r\n      state.isLoading = false;\r\n    },\r\n    qualitiesRequestFailed: (state, action) => {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    }\r\n  }\r\n});\r\n\r\nconst { actions, reducer: qualitiesReducer } = qualitiesSlice;\r\nconst { qualitiesRequested, qualitiesReceived, qualitiesRequestFailed } = actions;\r\n\r\nexport const loadQualitiesList = () => async (dispatch, getState) => {\r\n  const { lastFetch } = getState().qualities;\r\n  if (isOutDated(lastFetch)) {\r\n    dispatch(qualitiesRequested());\r\n    try {\r\n      const { content } = await qualityService.getAll();\r\n      dispatch(qualitiesReceived(content));\r\n    } catch (error) {\r\n      dispatch(qualitiesRequestFailed(error.message));\r\n    }\r\n  }\r\n};\r\n\r\nexport const getQualities = () => (state) => state.qualities.entities;\r\nexport const getQualitiesLoadingStatus = () => (state) => state.qualities.isLoading;\r\nexport const getQualitiesByIds = (qualitiesIds) => (state) => {\r\n  // eslint-disable-next-line no-unused-expressions\r\n  return state.qualities.entities ? state.qualities.entities.filter((q) => qualitiesIds.includes(q._id)) : [];\r\n};\r\n\r\nexport default qualitiesReducer;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadProfessionsList } from '../../../store/professions';\r\nimport { loadQualitiesList } from '../../../store/qualities';\r\nimport { getIsLoggedIn, getUsersLoadingStatus, loadUsersList } from '../../../store/users';\r\n\r\nconst AppLoader = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(getIsLoggedIn());\r\n  const usersStatusLoading = useSelector(getUsersLoadingStatus());\r\n  useEffect(() => {\r\n    dispatch(loadQualitiesList());\r\n    dispatch(loadProfessionsList());\r\n    if (isLoggedIn) {\r\n      dispatch(loadUsersList());\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  if (usersStatusLoading) return <h1>Loading...</h1>;\r\n  return children;\r\n};\r\n\r\nAppLoader.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n\r\nexport default AppLoader;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCurrentUserData } from '../../store/users';\r\n\r\nconst NavProfile = () => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  const currentUser = useSelector(getCurrentUserData());\r\n\r\n  const toggleMenu = () => {\r\n    setOpen((prevState) => !prevState);\r\n  };\r\n  if (!currentUser) return 'Loading...';\r\n\r\n  return (\r\n    <div className=\"dropdown\" onClick={toggleMenu}>\r\n      <div className=\"btn dropdown-toggle d-flex align-items-center\">\r\n        <div className=\"me-2\">{currentUser?.name}</div>\r\n        <img\r\n          src={currentUser?.image}\r\n          alt=\"userAvatar\"\r\n          height=\"40\"\r\n          className=\"img-responsive rounded-circle\"\r\n        />\r\n      </div>\r\n      <div className={'w-100 dropdown-menu' + (isOpen ? ' show' : '')}>\r\n        <Link className=\"dropdown-item\" to={`/users/${currentUser?._id}`}>\r\n          Profile\r\n        </Link>\r\n        <Link to=\"/logout\" className=\"dropdown-item\">\r\n          Logout\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavProfile;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../../store/users';\r\nimport NavProfile from './navProfile';\r\n\r\nconst NavBar = () => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn());\r\n  return (\r\n    <nav className=\"navbar bg-light mb-3\">\r\n      <div className=\"container-fluid\">\r\n        <ul className=\"nav nav-tabs m-3\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              Main\r\n            </Link>\r\n          </li>\r\n          {isLoggedIn && (\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/users\" className=\"nav-link\">\r\n                Users\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className=\"d-flex\">\r\n          {isLoggedIn ? (\r\n            <NavProfile />\r\n          ) : (\r\n            <Link to=\"/login\" className=\"nav-link\">\r\n              Login\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n  const handleChange = () => {\r\n    onChange({ name: name, value: !value });\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-check-input' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-check mb-4\">\r\n      <input\r\n        className={getInputClasses()}\r\n        type=\"checkbox\"\r\n        value=\"\"\r\n        id={name}\r\n        onChange={handleChange}\r\n        checked={value}\r\n      />\r\n      <label className=\"form-check-label\" htmlFor={name}>\r\n        {children}\r\n      </label>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckBoxField.propTypes = {\r\n  name: PropTypes.string,\r\n  value: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextField = ({ label, type, placeholder, name, value, onChange, error }) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className=\"input-group has-validation\">\r\n        <input\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n          type={showPassword ? 'text' : type}\r\n          className={getInputClasses()}\r\n        />\r\n        {type === 'password' && (\r\n          <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={toggleShowPassword}>\r\n            <i className={`bi bi-eye${showPassword ? '-slash' : ''}`}></i>\r\n          </button>\r\n        )}\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport * as yup from 'yup';\r\nimport { getAuthErrors, signIn } from '../../store/users';\r\nimport CheckBoxField from '../common/form/checkBoxField';\r\n// import { validator } from '../../utils/validator';\r\nimport TextField from '../common/form/textField';\r\n\r\nconst initialData = { email: '', password: '', stayOn: false };\r\n\r\nconst LoginForm = () => {\r\n  const history = useHistory();\r\n  const [data, setData] = useState(initialData);\r\n  const [errors, setErrors] = useState({});\r\n  const loginError = useSelector(getAuthErrors());\r\n  const dispatch = useDispatch();\r\n\r\n  const validateScheme = yup.object().shape({\r\n    password: yup.string().required('пароль обязателен для заполнения'),\r\n    email: yup.string().required('Электронная почта обязательна для заполнения')\r\n  });\r\n\r\n  const validate = () => {\r\n    validateScheme\r\n      .validate(data)\r\n      .then(() => setErrors({}))\r\n      .catch((err) => setErrors({ [err.path]: err.message }));\r\n\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    const redirect = history.location.state ? history.location.state.from.pathname : '/';\r\n    dispatch(signIn({ payload: data, redirect }));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"Введите ваш e-mail\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Введите пароль\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n\r\n      <CheckBoxField name=\"stayOn\" value={data.stayOn} onChange={handleChange}>\r\n        Оставаться в системе\r\n      </CheckBoxField>\r\n      {loginError && <p className=\"text-danger text-center\">{loginError}</p>}\r\n\r\n      <button\r\n        className=\"btn btn-primary w-100 mx-auto\"\r\n        type=\"submit\"\r\n        disabled={!isValid || loginError}>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","export function validator(data, config) {\r\n  const errors = {};\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate;\r\n\r\n    switch (validateMethod) {\r\n      case 'isRequired': {\r\n        if (typeof data === 'boolean') {\r\n          statusValidate = !data;\r\n        } else {\r\n          statusValidate = data.trim() === '';\r\n        }\r\n        break;\r\n      }\r\n      case 'isEmail':\r\n        {\r\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n          statusValidate = !emailRegExp.test(data);\r\n        }\r\n        break;\r\n      case 'isCapitalSymbol': {\r\n        const capitalRegExp = /[A-Z]+/g;\r\n        statusValidate = !capitalRegExp.test(data);\r\n        break;\r\n      }\r\n      case 'isContainDigit': {\r\n        const digitRegExp = /\\d+/;\r\n        statusValidate = !digitRegExp.test(data);\r\n        break;\r\n      }\r\n      case 'min': {\r\n        statusValidate = data.length < config.value;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    if (statusValidate) return config.message;\r\n  }\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(validateMethod, data[fieldName], config[fieldName][validateMethod]);\r\n      if (error && !errors[fieldName]) {\r\n        errors[fieldName] = error;\r\n      }\r\n    }\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\n\r\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue, error }) => {\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          label: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options;\r\n\r\n  const handleChange = (value) => {\r\n    onChange({ name: name, value });\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label\">{label}</label>\r\n      <div className=\"input-group has-validation\">\r\n        <Select\r\n          closeMenuOnSelect={false}\r\n          isMulti\r\n          defaultValue={defaultValue}\r\n          options={optionsArray}\r\n          className={getInputClasses()}\r\n          classNamePrefix=\"select\"\r\n          onChange={handleChange}\r\n          name={name}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMultiSelectField.propTypes = {\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChange: PropTypes.func,\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  defaultValue: PropTypes.array,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default MultiSelectField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label\">{label}</label>\r\n      <div>\r\n        {options.map((option) => (\r\n          <div key={option.name + '_' + option.value} className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name={name}\r\n              id={option.name + '_' + option.value}\r\n              checked={option.value === value}\r\n              value={option.value}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={option.name + '_' + option.value}>\r\n              {option.name}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadioField.propTypes = {\r\n  options: PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string\r\n};\r\n\r\nexport default RadioField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SelectField = ({ label, value, name, onChange, defaultOption, options, error }) => {\r\n  const getInputClasses = () => {\r\n    return 'form-select' + (error ? ' is-invalid' : '');\r\n  };\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          name: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options;\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <select\r\n        className={getInputClasses()}\r\n        id=\"validationCustom04\"\r\n        value={value}\r\n        name={name}\r\n        onChange={handleChange}>\r\n        <option disabled value=\"\" key={defaultOption} defaultValue={defaultOption}>\r\n          {defaultOption}\r\n        </option>\r\n        {optionsArray &&\r\n          optionsArray.map((option) => (\r\n            <option\r\n              key={option.value || option._id}\r\n              value={option.value || option._id}\r\n              name={option.name}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  defaultOption: PropTypes.string,\r\n  value: PropTypes.string,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default SelectField;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProfessions } from '../../store/professions';\r\nimport { getQualities } from '../../store/qualities';\r\nimport { signUp } from '../../store/users';\r\nimport { validator } from '../../utils/validator';\r\nimport CheckBoxField from '../common/form/checkBoxField';\r\nimport MultiSelectField from '../common/form/multiSelectField';\r\nimport RadioField from '../common/form/radioField';\r\nimport SelectField from '../common/form/selectField';\r\nimport TextField from '../common/form/textField';\r\n\r\nconst RegisterForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    profession: '',\r\n    sex: 'male',\r\n    name: '',\r\n    qualities: [],\r\n    license: false\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const qualities = useSelector(getQualities());\r\n\r\n  const qualitiesList = qualities.map((q) => ({ label: q.name, value: q._id }));\r\n\r\n  const professions = useSelector(getProfessions());\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n      isEmail: {\r\n        message: 'email введен некорректно'\r\n      }\r\n    },\r\n    name: {\r\n      isRequired: { message: 'Имя обязательно для заполнения' },\r\n      min: {\r\n        message: 'Имя должно состоять минимум из 3 символов',\r\n        value: 3\r\n      }\r\n    },\r\n    password: {\r\n      isRequired: { message: 'пароль обязателен для заполнения' },\r\n      isCapitalSymbol: {\r\n        message: 'Пароль должен содержать хотя бы одну заглавную букву'\r\n      },\r\n      isContainDigit: {\r\n        message: 'Пароль должен содержать хотя бы одно число'\r\n      },\r\n      min: {\r\n        message: 'Пароль должен состоять минимум из 8 символов',\r\n        value: 8\r\n      }\r\n    },\r\n    profession: {\r\n      isRequired: { message: 'Обязательно выберите вашу профессию' }\r\n    },\r\n    license: {\r\n      isRequired: {\r\n        message: 'Вы не можете использовать наш сервис без подтверждения лицензионного соглашения'\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    const newData = { ...data, qualities: data.qualities.map((q) => q.value) };\r\n    dispatch(signUp(newData));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"Введите ваш e-mail\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Имя\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Введите ваше Имя\"\r\n        value={data.name}\r\n        onChange={handleChange}\r\n        error={errors.name}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Введите пароль\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n      <SelectField\r\n        label=\"Выберите вашу профессию\"\r\n        name=\"profession\"\r\n        value={data.profession}\r\n        error={errors.profession}\r\n        defaultOption=\"Choose...\"\r\n        options={professions}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <RadioField\r\n        options={[\r\n          { name: 'Male', value: 'male' },\r\n          { name: 'Female', value: 'female' },\r\n          { name: 'Other', value: 'other' }\r\n        ]}\r\n        value={data.sex}\r\n        name=\"sex\"\r\n        onChange={handleChange}\r\n        label=\"Выберите ваш пол\"\r\n      />\r\n      <MultiSelectField\r\n        options={qualitiesList}\r\n        onChange={handleChange}\r\n        name=\"qualities\"\r\n        label=\"Выберите ваши качества\"\r\n        defaultValue={data.qualities}\r\n      />\r\n      <CheckBoxField\r\n        name=\"license\"\r\n        value={data.license}\r\n        onChange={handleChange}\r\n        error={errors.license}>\r\n        Подтвердить <a href=\"#\">лицензионное соглашение</a>\r\n      </CheckBoxField>\r\n\r\n      <button className=\"btn btn-primary w-100 mx-auto\" type=\"submit\" disabled={!isValid}>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport LoginForm from '../components/ui/loginForm';\r\nimport RegisterForm from '../components/ui/registerForm';\r\n\r\nconst Login = () => {\r\n  const { type } = useParams();\r\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login');\r\n\r\n  const toggleFormType = () => {\r\n    setFormType((prevState) => (prevState === 'register' ? 'login' : 'register'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          {formType === 'register' ? (\r\n            <>\r\n              <h3 className=\"mb-4\">Register</h3>\r\n              <RegisterForm />\r\n              <p>\r\n                Already have account?\r\n                <a role=\"button\" onClick={toggleFormType}>\r\n                  Sign In\r\n                </a>\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h3 className=\"mb-4\">Login</h3>\r\n              <LoginForm />\r\n              <p>\r\n                Dont have account?\r\n                <a role=\"button\" onClick={toggleFormType}>\r\n                  Sign Up\r\n                </a>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logOut } from '../store/users';\r\n\r\nconst LogOut = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(logOut());\r\n  }, []);\r\n  return <h1>Loading...</h1>;\r\n};\r\n\r\nexport default LogOut;\r\n","import { useEffect, useState } from 'react';\r\nimport professions from '../mockData/professions.json';\r\nimport qualities from '../mockData/qualities.json';\r\nimport users from '../mockData/users.json';\r\nimport httpService from '../services/http.service';\r\n\r\nconst useMockData = () => {\r\n  const statusConsts = {\r\n    idle: 'Not Started',\r\n    pending: 'In Process',\r\n    success: 'Ready',\r\n    error: 'Error occurred'\r\n  };\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(statusConsts.idle);\r\n  const [progress, setProgress] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n  const summaryCount = [professions, qualities, users].reduce((acc, cur) => acc + cur.length, 0);\r\n\r\n  const incrementCount = () => {\r\n    setCount((prevState) => prevState + 1);\r\n  };\r\n\r\n  const updateProgress = () => {\r\n    if (count !== 0 && status === statusConsts.idle) {\r\n      setStatus(statusConsts.pending);\r\n    }\r\n    const newProgress = Math.floor((count / summaryCount) * 100);\r\n    if (progress < newProgress) {\r\n      setProgress(() => newProgress);\r\n    }\r\n    if (newProgress === 100) {\r\n      setStatus(statusConsts.success);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateProgress();\r\n  }, [count]);\r\n\r\n  async function initialize() {\r\n    try {\r\n      for (const prof of professions) {\r\n        await httpService.put('profession/' + prof._id, prof);\r\n        incrementCount();\r\n      }\r\n      for (const user of users) {\r\n        await httpService.put('user/' + user._id, user);\r\n        incrementCount();\r\n      }\r\n      for (const quality of qualities) {\r\n        await httpService.put('quality/' + quality._id, quality);\r\n        incrementCount();\r\n      }\r\n    } catch (error) {\r\n      setError(error);\r\n      setStatus(statusConsts.error);\r\n    }\r\n  }\r\n\r\n  return { error, initialize, progress, status };\r\n};\r\n\r\nexport default useMockData;\r\n","import React from 'react';\r\nimport useMockData from '../utils/mockData';\r\n\r\nconst Main = () => {\r\n  const { error, initialize, progress, status } = useMockData();\r\n\r\n  const handleClick = () => {\r\n    console.log('clicked');\r\n    initialize();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Main Page</h1>\r\n      <h3>Инициализация данных в FireBase</h3>\r\n      <ul>\r\n        <li>Status: {status}</li>\r\n        <li>Progress: {progress}%</li>\r\n        {error && <li>error: {error}</li>}\r\n      </ul>\r\n      <button className=\"btn btn-primary\" onClick={handleClick}>\r\n        Инициализировать\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nconst BackHistoryButton = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\r\n      <i className=\"bi bi-arrow-left-square\"></i> Назад\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BackHistoryButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getProfessions,\r\n  getProfessionsLoadingStatus\r\n} from '../../../store/professions';\r\nimport {\r\n  getQualities,\r\n  getQualitiesByIds,\r\n  getQualitiesLoadingStatus\r\n} from '../../../store/qualities';\r\nimport { getCurrentUserData, updateUserData } from '../../../store/users';\r\nimport { validator } from '../../../utils/validator';\r\nimport BackHistoryButton from '../../common/backButton';\r\nimport MultiSelectField from '../../common/form/multiSelectField';\r\nimport RadioField from '../../common/form/radioField';\r\nimport SelectField from '../../common/form/selectField';\r\nimport TextField from '../../common/form/textField';\r\n\r\nconst UserEditPage = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [data, setData] = useState();\r\n  const [errors, setErrors] = useState({});\r\n  const currentUser = useSelector(getCurrentUserData());\r\n  const professions = useSelector(getProfessions());\r\n  const professionsLoading = useSelector(getProfessionsLoadingStatus());\r\n  const qualities = useSelector(getQualities());\r\n  const qualitiesLoading = useSelector(getQualitiesLoadingStatus());\r\n  const userQualities = useSelector(getQualitiesByIds(currentUser.qualities));\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (target) => {\r\n    setErrors({});\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [target.name]: target.value\r\n    }));\r\n  };\r\n\r\n  const transformData = (data) => {\r\n    return data.map((qual) => ({\r\n      label: qual.name,\r\n      value: qual._id\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!qualitiesLoading && !professionsLoading) {\r\n      setData({\r\n        ...currentUser,\r\n        qualities: transformData(userQualities)\r\n      });\r\n    }\r\n  }, [qualitiesLoading, professionsLoading]);\r\n\r\n  useEffect(() => {\r\n    if (data && isLoading) {\r\n      setIsLoading(false);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n\r\n    const { qualities } = data;\r\n    dispatch(\r\n      updateUserData({ ...data, qualities: qualities.map((q) => q.value) })\r\n    );\r\n  };\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: {\r\n        message: 'Электронная почта обязательна для заполнения'\r\n      },\r\n      isEmail: {\r\n        message: 'Email введен некорректно'\r\n      }\r\n    },\r\n    name: {\r\n      isRequired: {\r\n        message: 'Введите ваше имя'\r\n      }\r\n    },\r\n    qualities: {\r\n      min: {\r\n        message: 'Выберите не меньше одного качества',\r\n        value: 1\r\n      }\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <BackHistoryButton />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          {!isLoading ? (\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"Имя\"\r\n                placeholder=\"Введите Имя\"\r\n                name=\"name\"\r\n                value={data.name}\r\n                onChange={handleChange}\r\n                error={errors.name}\r\n              />\r\n              <TextField\r\n                label=\"Электронная почта\"\r\n                placeholder=\"Введите электронную почту\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n              />\r\n              <SelectField\r\n                label=\"Выбери свою профессию\"\r\n                defaultOption=\"Choose...\"\r\n                name=\"profession\"\r\n                options={professions}\r\n                onChange={handleChange}\r\n                value={data.profession}\r\n                error={errors.profession}\r\n              />\r\n              <RadioField\r\n                options={[\r\n                  { name: 'Male', value: 'male' },\r\n                  { name: 'Female', value: 'female' },\r\n                  { name: 'Other', value: 'other' }\r\n                ]}\r\n                value={data.sex}\r\n                name=\"sex\"\r\n                onChange={handleChange}\r\n                label=\"Выберите ваш пол\"\r\n              />\r\n              <MultiSelectField\r\n                defaultValue={data.qualities}\r\n                options={transformData(qualities)}\r\n                onChange={handleChange}\r\n                values\r\n                name=\"qualities\"\r\n                label=\"Выберите ваши качества\"\r\n                error={errors.qualities}\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n                className=\"btn btn-primary w-100 mx-auto\">\r\n                Обновить\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            'Loading...'\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserEditPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MeetingsCard = ({ value }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Завершенных встреч</span>\r\n        </h5>\r\n\r\n        <h1 className=\"display-1\">{value}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMeetingsCard.propTypes = {\r\n  value: PropTypes.number\r\n};\r\n\r\nexport default MeetingsCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Quality = ({ name, color }) => {\r\n  const classes = 'badge m-1 bg-';\r\n  return <span className={classes + color}>{name}</span>;\r\n};\r\n\r\nQuality.propTypes = {\r\n  name: PropTypes.string,\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default Quality;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getQualitiesByIds,\r\n  getQualitiesLoadingStatus,\r\n  loadQualitiesList\r\n} from '../../../store/qualities';\r\nimport Quality from './quality';\r\n\r\nconst QualitiesList = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(getQualitiesLoadingStatus());\r\n  const qualitiesList = useSelector(getQualitiesByIds(data));\r\n\r\n  useEffect(() => {\r\n    dispatch(loadQualitiesList());\r\n  }, []);\r\n\r\n  return !isLoading ? (\r\n    <>\r\n      {qualitiesList.map((item) => (\r\n        <Quality key={item._id} {...item} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <h2>Loading...</h2>\r\n  );\r\n};\r\n\r\nQualitiesList.propTypes = {\r\n  data: PropTypes.array\r\n};\r\n\r\nexport default QualitiesList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport QualitiesList from '../qualities/qualitiesList';\r\n\r\nconst QualitiesCard = ({ data }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Качества</span>\r\n        </h5>\r\n        <div className=\"card-text\">\r\n          <QualitiesList data={data} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nQualitiesCard.propTypes = {\r\n  data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default QualitiesCard;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { getCurrentUserId } from '../../../store/users';\r\n\r\nconst UserCard = ({ user }) => {\r\n  const history = useHistory();\r\n  const currentUserId = useSelector(getCurrentUserId());\r\n  const handleClick = () => {\r\n    history.push(history.location.pathname + '/edit');\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        {currentUserId === user._id && (\r\n          <button\r\n            className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\r\n            style={{ zIndex: 2 }}\r\n            onClick={handleClick}>\r\n            <i className=\"bi bi-gear\"></i>\r\n          </button>\r\n        )}\r\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\r\n          <img src={user.image} className=\"rounded-circle\" width=\"150\" />\r\n          <div className=\"mt-3\">\r\n            <h4>{user.name}</h4>\r\n            <p className=\"text-secondary mb-1\">{user.profession.name}</p>\r\n            <div className=\"text-muted\">\r\n              <i className=\"bi bi-caret-down-fill text-primary\" role=\"button\"></i>\r\n              <i className=\"bi bi-caret-up text-secondary\" role=\"button\"></i>\r\n              <span className=\"ms-2\">{user.rate}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserCard.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default UserCard;\r\n","import httpService from './http.service';\r\n\r\nconst commentEndpoint = 'comment/';\r\n\r\nconst commentService = {\r\n  createComment: async (payload) => {\r\n    const { data } = await httpService.post(commentEndpoint, payload);\r\n    return data;\r\n  },\r\n  getComments: async (pageId) => {\r\n    const { data } = await httpService.get(commentEndpoint, {\r\n      params: {\r\n        orderBy: 'pageId',\r\n        equalTo: `${pageId}`\r\n      }\r\n    });\r\n    return data;\r\n  },\r\n  removeComment: async (commentId) => {\r\n    await httpService.delete(commentEndpoint + commentId);\r\n    return commentId;\r\n  }\r\n};\r\n\r\nexport default commentService;\r\n","import { createAction, createSlice } from '@reduxjs/toolkit';\r\nimport commentService from '../services/comment.service';\r\n\r\nconst commentsSlice = createSlice({\r\n  name: 'comments',\r\n  initialState: {\r\n    entities: null,\r\n    isLoading: true,\r\n    error: null\r\n  },\r\n  reducers: {\r\n    commentsRequested: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    commentsReceived: (state, action) => {\r\n      state.entities = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    commentsRequestFailed: (state, action) => {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    commentCreated: (state, action) => {\r\n      state.entities.push(action.payload);\r\n    },\r\n    commentRemoved: (state, action) => {\r\n      state.entities = state.entities.filter((comment) => comment._id !== action.payload);\r\n    }\r\n  }\r\n});\r\n\r\nconst { actions, reducer: commentsReducer } = commentsSlice;\r\nconst { commentsRequested, commentsReceived, commentsRequestFailed, commentCreated, commentRemoved } = actions;\r\n\r\nconst commentCreateRequested = createAction('comments/userCreateRequested');\r\nconst commentCreateRequestedFailed = createAction('comments/commentCreateRequestedFailed');\r\nconst commentRemoveRequested = createAction('comments/commentRemoveRequested');\r\nconst commentRemoveRequestedFailed = createAction('comments/commentRemoveRequestedFailed');\r\n\r\nexport const createComment = (payload) => async (dispatch) => {\r\n  dispatch(commentCreateRequested());\r\n  try {\r\n    const { content } = await commentService.createComment(payload);\r\n    dispatch(commentCreated(content));\r\n  } catch (error) {\r\n    dispatch(commentCreateRequestedFailed(error.message));\r\n  }\r\n};\r\n\r\nexport const removeComment = (id) => async (dispatch) => {\r\n  dispatch(commentRemoveRequested());\r\n  try {\r\n    const commentId = await commentService.removeComment(id);\r\n    dispatch(commentRemoved(commentId));\r\n  } catch (error) {\r\n    dispatch(commentRemoveRequestedFailed(error.message));\r\n  }\r\n};\r\n\r\nexport const loadCommentsList = (pageId) => async (dispatch) => {\r\n  dispatch(commentsRequested());\r\n  try {\r\n    const { content } = await commentService.getComments(pageId);\r\n    dispatch(commentsReceived(content));\r\n  } catch (error) {\r\n    dispatch(commentsRequestFailed(error.message));\r\n  }\r\n};\r\n\r\nexport const getComments = () => (state) => state.comments.entities;\r\nexport const getCommentsLoadingStatus = () => (state) => state.comments.isLoading;\r\n\r\nexport default commentsReducer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextAreaField = ({ label, name, value, onChange, error, rows }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={name} className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <textarea\r\n        className={'form-control' + (error ? ' is-invalid' : '')}\r\n        name={name}\r\n        value={value}\r\n        id={name}\r\n        rows={rows}\r\n        onChange={handleChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nTextAreaField.defaultProps = {\r\n  type: 'text',\r\n  rows: 3\r\n};\r\n\r\nTextAreaField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n  rows: PropTypes.number\r\n};\r\n\r\nexport default TextAreaField;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { validator } from '../../../utils/validator';\r\nimport TextAreaField from '../../common/form/textAreaField';\r\n\r\nconst AddCommentForm = ({ onSubmit }) => {\r\n  const [data, setData] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    content: {\r\n      isRequired: { message: 'Поле \"Сообщение\" не должно быть пустым' }\r\n    }\r\n  };\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setData({});\r\n    setErrors({});\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    onSubmit(data);\r\n    clearForm();\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-2\">\r\n      <div className=\"card-body\">\r\n        <form onSubmit={handleSubmit}>\r\n          <h2>Новый комментарий</h2>\r\n          <div className=\"mb-4\"></div>\r\n          <div className=\"mb-4\">\r\n            <TextAreaField\r\n              label=\"Сообщение\"\r\n              name=\"content\"\r\n              value={data.content || ''}\r\n              onChange={handleChange}\r\n              error={errors.content}\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <button className=\"btn btn-primary\" type=\"submit\" disabled={!isValid}>\r\n              Опубликовать\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddCommentForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCommentForm;\r\n","import declOfNum from './declOfNum';\r\n\r\nexport default function formatDate(value) {\r\n  value = new Date(value).getTime();\r\n  if (typeof value === 'string') {\r\n    value = Number(value);\r\n  }\r\n  const currentDateTime = Date.now();\r\n  const postCreatedTime = Number(value);\r\n  const diffTime = Math.abs(currentDateTime - postCreatedTime);\r\n\r\n  const year = new Date(value).getFullYear();\r\n  const month = new Date(value).getMonth();\r\n  const day = new Date(value).getDate();\r\n  const hours = new Date(value).getHours();\r\n  const min = new Date(value).getMinutes();\r\n\r\n  const months = [\r\n    'Января',\r\n    'Февраля',\r\n    'Марта',\r\n    'Апреля',\r\n    'Мая',\r\n    'Июня',\r\n    'Июля',\r\n    'Августа',\r\n    'Сентября',\r\n    'Октября',\r\n    'Ноября',\r\n    'Декабря'\r\n  ];\r\n\r\n  const checkLeapYear = (year) => {\r\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n  };\r\n\r\n  const getValidTime = (hours, min) => {\r\n    hours = hours < 10 ? `0${hours}` : hours;\r\n    min = min < 10 ? `0${min}` : min;\r\n    return `${hours}:${min}`;\r\n  };\r\n\r\n  const oneMinutesAgo = 60000;\r\n  const thirtyMinutesAgo = oneMinutesAgo * 30;\r\n  const lessOneDay = oneMinutesAgo * 60 * 24;\r\n  const lessCurrentYear = lessOneDay * (checkLeapYear(year) ? 366 : 365);\r\n\r\n  if (diffTime <= oneMinutesAgo) {\r\n    return 'только что';\r\n  } else if (diffTime <= thirtyMinutesAgo) {\r\n    const minutes = Math.floor(diffTime / 60000);\r\n    return `${minutes} ${declOfNum(minutes, ['минута', 'минуты', 'минут'])} назад`;\r\n  } else if (diffTime > thirtyMinutesAgo && diffTime <= lessOneDay) {\r\n    return `сегодня в ${getValidTime(hours, min)}`;\r\n  } else if (diffTime > lessOneDay && diffTime <= lessCurrentYear) {\r\n    return `${day} ${months[month]} в ${getValidTime(hours, min)}`;\r\n  } else if (diffTime > lessCurrentYear) {\r\n    return `${day} ${months[month]} ${year} года в ${getValidTime(hours, min)}`;\r\n  } else {\r\n    return `Этот комментарий оставило НЛО из будущего ¯\\\\_(ツ)_/¯`;\r\n  }\r\n}\r\n","export default function declOfNum(n, words) {\r\n  n = Math.abs(n) % 100;\r\n  const n1 = n % 10;\r\n  if (n > 10 && n < 20) {\r\n    return words[2];\r\n  }\r\n  if (n1 > 1 && n1 < 5) {\r\n    return words[1];\r\n  }\r\n  if (n1 === 1) {\r\n    return words[0];\r\n  }\r\n  return words[2];\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getCurrentUserId, getUserById } from '../../../store/users';\r\nimport formatDate from '../../../utils/formatDate';\r\n\r\nconst Comment = ({ content, created_at: created, _id: id, userId, onRemove }) => {\r\n  const currentUserId = useSelector(getCurrentUserId());\r\n  const user = useSelector(getUserById(userId));\r\n  return (\r\n    <div className=\"bg-light card-body  mb-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"d-flex flex-start \">\r\n            <img src={user.image} className=\"rounded-circle shadow-1-strong me-3\" alt=\"avatar\" width=\"65\" height=\"65\" />\r\n            <div className=\"flex-grow-1 flex-shrink-1\">\r\n              <div className=\"mb-4\">\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <p className=\"mb-1 \">\r\n                    {user.name} - <span className=\"small\">{formatDate(created)}</span>\r\n                  </p>\r\n                  {currentUserId === userId && (\r\n                    <button className=\"btn btn-sm text-primary d-flex align-items-center\" onClick={() => onRemove(id)}>\r\n                      <i className=\"bi bi-x-lg\"></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <p className=\"small mb-0\">{content}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.object,\r\n  onRemove: PropTypes.func,\r\n  content: PropTypes.string,\r\n  created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  _id: PropTypes.string,\r\n  userId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Comment;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Comment from './comment';\r\n\r\nconst CommentsList = ({ comments, onRemove }) => {\r\n  const sortedComments = [...comments].sort((a, b) => b.created_at - a.created_at);\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body \">\r\n        <h2>Комментарии</h2>\r\n        <hr />\r\n        {sortedComments.map((comment) => (\r\n          <Comment key={comment._id} {...comment} onRemove={onRemove} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentsList.propTypes = {\r\n  comments: PropTypes.array,\r\n  onRemove: PropTypes.func\r\n};\r\n\r\nexport default CommentsList;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  getComments,\r\n  getCommentsLoadingStatus,\r\n  loadCommentsList,\r\n  createComment,\r\n  removeComment\r\n} from '../../store/comments';\r\nimport AddCommentForm from './comments/addCommentForm';\r\nimport CommentsList from './comments/commentsList';\r\n\r\nconst Comments = () => {\r\n  const { userId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(getCommentsLoadingStatus());\r\n  const comments = useSelector(getComments());\r\n\r\n  useEffect(() => {\r\n    dispatch(loadCommentsList(userId));\r\n  }, [userId]);\r\n\r\n  const handleRemoveComment = (id) => {\r\n    dispatch(removeComment(id));\r\n  };\r\n\r\n  const handleSubmit = (data) => {\r\n    dispatch(createComment({ ...data, pageId: userId }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AddCommentForm onSubmit={handleSubmit} />\r\n      {!isLoading ? <CommentsList comments={comments} onRemove={handleRemoveComment} /> : 'loading...'}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import UserPage from './userPage';\r\nexport default UserPage;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getProfessionById, getProfessionsLoadingStatus } from '../../../store/professions';\r\nimport { getUserById } from '../../../store/users';\r\nimport MeetingsCard from '../../ui/cards/meetingsCard';\r\nimport QualitiesCard from '../../ui/cards/qualitiesCard';\r\nimport UserCard from '../../ui/cards/userCard';\r\nimport Comments from '../../ui/comments';\r\n\r\nconst UserPage = ({ userId }) => {\r\n  let user = useSelector(getUserById(userId));\r\n  const userProfession = useSelector(getProfessionById(user?.profession));\r\n  const professionsLoading = useSelector(getProfessionsLoadingStatus());\r\n\r\n  if (!professionsLoading) {\r\n    user = { ...user, profession: userProfession };\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row gutters-sm\">\r\n          <div className=\"col-md-4 mb-3\">\r\n            <UserCard user={user} />\r\n            <QualitiesCard data={user.qualities} />\r\n            <MeetingsCard value={user.completedMeetings} />\r\n          </div>\r\n\r\n          <div className=\"col-md-8\">\r\n            <Comments />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <h2>Loading...</h2>;\r\n};\r\n\r\nUserPage.propTypes = {\r\n  userId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default UserPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListGroup = ({ items, valueProperty, contentProperty, onItemSelect, selectedItem }) => {\r\n  if (!Array.isArray(items)) {\r\n    return (\r\n      <ul className=\"list-group\">\r\n        {Object.keys(items).map((item) => (\r\n          <li\r\n            key={items[item][valueProperty]}\r\n            role=\"button\"\r\n            className={'list-group-item' + (items[item] === selectedItem ? ' active' : '')}\r\n            onClick={() => onItemSelect(items[item])}>\r\n            {items[item][contentProperty]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          role=\"button\"\r\n          className={'list-group-item' + (item === selectedItem ? ' active' : '')}\r\n          onClick={() => onItemSelect(item)}>\r\n          {item[contentProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  valueProperty: '_id',\r\n  contentProperty: 'name'\r\n};\r\n\r\nListGroup.propTypes = {\r\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  valueProperty: PropTypes.string.isRequired,\r\n  contentProperty: PropTypes.string.isRequired,\r\n  onItemSelect: PropTypes.func,\r\n  selectedItem: PropTypes.object\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = ({ onPageChange, itemsCount, pageSize, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n  const pages = _.range(1, pageCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li className={'page-item ' + (page === currentPage ? 'active' : '')} key={page}>\r\n            <a className=\"page-link\" role=\"button\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nPagination.propTypes = {\r\n  onPageChange: PropTypes.func.isRequired,\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from './form/textField';\r\n\r\nconst SearchBar = ({ value, onSearch }) => {\r\n  return (\r\n    <>\r\n      <TextField\r\n        name=\"search\"\r\n        placeholder=\"Поиск...\"\r\n        type=\"search\"\r\n        value={value}\r\n        onChange={onSearch}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSearch: PropTypes.func,\r\n  value: PropTypes.string\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nconst searchStatus = ({ length }) => {\r\n  let text = `${length} человек тусанет с тобой сегодня`;\r\n  let className = 'badge bg-primary';\r\n\r\n  if (length <= 4 && length > 1) {\r\n    text = `${length} человека тусанут с тобой сегодня`;\r\n  }\r\n  if (length === 0) {\r\n    text = 'Никто с тобой не тусанет';\r\n    className = 'badge bg-danger';\r\n  }\r\n\r\n  return (\r\n    <h2>\r\n      <span className={className}>{text}</span>\r\n    </h2>\r\n  );\r\n};\r\n\r\nexport default searchStatus;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookMark = ({ status, onClick }) => {\r\n  let classes = 'bi bi-bookmark';\r\n  classes = status ? 'bi bi-bookmark-fill' : classes;\r\n\r\n  return (\r\n    <button className=\"btn btn-primary\" onClick={onClick}>\r\n      <i className={classes}></i>\r\n    </button>\r\n  );\r\n};\r\nBookMark.propTypes = {\r\n  id: PropTypes.string,\r\n  status: PropTypes.bool,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default BookMark;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n  const handleSort = (item) => {\r\n    if (selectedSort.path === item) {\r\n      onSort({ ...selectedSort, order: selectedSort.order === 'asc' ? 'desc' : 'asc' });\r\n    } else {\r\n      onSort({ path: item, order: 'asc' });\r\n    }\r\n  };\r\n\r\n  const renderSortArrow = (selectedSort, currentPath) => {\r\n    if (selectedSort.path === currentPath) {\r\n      if (selectedSort.order === 'asc') {\r\n        return <i className=\"bi bi-caret-down-fill\"></i>;\r\n      } else {\r\n        return <i className=\"bi bi-caret-up-fill\"></i>;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {Object.keys(columns).map((column) => (\r\n          <th\r\n            key={column}\r\n            onClick={columns[column].path ? () => handleSort(columns[column].path) : undefined}\r\n            {...{ role: columns[column].path && 'button' }}\r\n            scope=\"col\">\r\n            {columns[column].name}\r\n            {renderSortArrow(selectedSort, columns[column].path)}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n  const renderContent = (item, column) => {\r\n    if (columns[column].component) {\r\n      const component = columns[column].component;\r\n      if (typeof component === 'function') {\r\n        return component(item);\r\n      }\r\n      return component;\r\n    }\r\n    return _.get(item, columns[column].path);\r\n  };\r\n\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr key={item._id}>\r\n          {Object.keys(columns).map((column) => (\r\n            <td key={column}>{renderContent(item, column)}</td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nTableBody.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import Table from './table';\r\nimport TableBody from './tableBody';\r\nimport TableHeader from './tableHeader';\r\nexport default Table;\r\nexport { TableBody, TableHeader };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      {children || (\r\n        <>\r\n          <TableHeader {...{ onSort, selectedSort, columns }} />\r\n          <TableBody {...{ columns, data }} />\r\n        </>\r\n      )}\r\n    </table>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  onSort: PropTypes.func,\r\n  selectedSort: PropTypes.object,\r\n  columns: PropTypes.object,\r\n  data: PropTypes.array,\r\n  children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { getProfessionById, getProfessionsLoadingStatus } from '../../store/professions';\r\n\r\nconst Profession = ({ id }) => {\r\n  const profession = useSelector(getProfessionById(id));\r\n  const professionsIsLoading = useSelector(getProfessionsLoadingStatus());\r\n\r\n  if (!professionsIsLoading) {\r\n    return <p>{profession.name}</p>;\r\n  } else {\r\n    return <p>Loading...</p>;\r\n  }\r\n};\r\n\r\nProfession.propTypes = {\r\n  id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Profession;\r\n","import Qualities from './qualitiesList';\r\nexport default Qualities;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BookMark from '../common/bookmark';\r\nimport Table from '../common/table';\r\nimport Profession from './profession';\r\nimport Qualities from '../ui/qualities';\r\n\r\nconst UserTable = ({ users, onSort, selectedSort, onToggleBookMark }) => {\r\n  const columns = {\r\n    name: {\r\n      path: 'name',\r\n      name: 'Имя',\r\n      component: (user) => <Link to={`users/${user._id}`}>{user.name}</Link>\r\n    },\r\n    qualities: {\r\n      name: 'Качества',\r\n      component: (user) => <Qualities data={user.qualities} />\r\n    },\r\n    professions: { name: 'Профессия', component: (user) => <Profession id={user.profession} /> },\r\n    completedMeetings: { path: 'completedMeetings', name: 'Встретился, раз' },\r\n    rate: { path: 'rate', name: 'Оценка' },\r\n    bookmark: {\r\n      path: 'bookmark',\r\n      name: 'Избранное',\r\n      component: (user) => (\r\n        <BookMark onClick={() => onToggleBookMark(user._id)} status={user.bookmark} />\r\n      )\r\n    }\r\n  };\r\n\r\n  return <Table onSort={onSort} selectedSort={selectedSort} columns={columns} data={users} />;\r\n};\r\n\r\nUserTable.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  onToggleBookMark: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import UsersListPage from './usersListPage';\r\nexport default UsersListPage;\r\n","/* eslint-disable indent */\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getProfessions, getProfessionsLoadingStatus } from '../../../store/professions';\r\nimport { getCurrentUserId, getUsersList } from '../../../store/users';\r\nimport { paginate } from '../../../utils/paginate';\r\nimport searchBy from '../../../utils/search';\r\nimport ListGroup from '../../common/listGroup';\r\nimport Pagination from '../../common/pagination';\r\nimport SearchBar from '../../common/searchBar';\r\nimport SearchStatus from '../../ui/searchStatus';\r\nimport UsersTable from '../../ui/usersTable';\r\n\r\nconst UsersListPage = () => {\r\n  const users = useSelector(getUsersList());\r\n  const professions = useSelector(getProfessions());\r\n  const professionsLoading = useSelector(getProfessionsLoadingStatus());\r\n\r\n  const currentUserId = useSelector(getCurrentUserId());\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedProf, setSelectedProf] = useState();\r\n  const [sortBy, setSortBy] = useState({ path: 'name', order: 'asc' });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const pageSize = 8;\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedProf]);\r\n\r\n  const handleDelete = (userId) => {\r\n    // return setUsers(users.filter((user) => user._id !== userId));\r\n    console.log(userId);\r\n  };\r\n\r\n  const handleToggleBookMark = (userId) => {\r\n    console.log(userId);\r\n    // setUsers(\r\n    //   users.filter((user) => {\r\n    //     if (user._id === userId) {\r\n    //       user.bookmark = !user.bookmark;\r\n    //       return user;\r\n    //     }\r\n    //     return user;\r\n    //   })\r\n    // );\r\n  };\r\n\r\n  const handleProfessionSelect = (item) => {\r\n    setSearchQuery('');\r\n    setSelectedProf(item);\r\n  };\r\n\r\n  const handlePageChange = (pageIndex) => {\r\n    setCurrentPage(pageIndex);\r\n  };\r\n\r\n  const handleSort = (item) => {\r\n    setSortBy(item);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setSelectedProf();\r\n    setSearchQuery(event.value);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setSelectedProf();\r\n    setSearchQuery('');\r\n  };\r\n\r\n  if (users) {\r\n    function filterUsers(data) {\r\n      const filteredUsers = searchQuery\r\n        ? searchBy(data, searchQuery, { searchBy: 'name' })\r\n        : selectedProf\r\n        ? data.filter((user) => JSON.stringify(user.profession) === JSON.stringify(selectedProf))\r\n        : data;\r\n      return filteredUsers.filter((user) => user._id !== currentUserId);\r\n    }\r\n\r\n    const filteredUsers = filterUsers(users);\r\n\r\n    const count = filteredUsers.length;\r\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\r\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"d-flex\">\r\n        {professions && !professionsLoading && (\r\n          <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n            <ListGroup\r\n              items={professions}\r\n              onItemSelect={handleProfessionSelect}\r\n              selectedItem={selectedProf}\r\n            />\r\n            <button className=\"btn btn-secondary mt-2\" onClick={clearFilter}>\r\n              Очистить\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"d-flex flex-column\">\r\n          <SearchStatus length={count} />\r\n          <SearchBar data={users} value={searchQuery} onSearch={handleSearch} />\r\n          {count > 0 && (\r\n            <UsersTable\r\n              users={usersCrop}\r\n              onSort={handleSort}\r\n              selectedSort={sortBy}\r\n              onToggleBookMark={handleToggleBookMark}\r\n              onDelete={handleDelete}\r\n            />\r\n          )}\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Pagination\r\n              itemsCount={count}\r\n              pageSize={pageSize}\r\n              onPageChange={handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <h1 className=\"d-flex justify-content-center align-items-center\">Loading...</h1>;\r\n};\r\n\r\nUsersListPage.propTypes = {\r\n  users: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n  onToggleBookMark: PropTypes.func\r\n};\r\nexport default UsersListPage;\r\n","export default function searchBy(data, query, config = { searchBy: 'name' }) {\r\n  return data.filter((el) => el[config.searchBy].toLowerCase().includes(query.toLowerCase()));\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDataStatus, loadUsersList } from '../../../store/users';\r\nimport PropTypes from 'prop-types';\r\nconst UsersLoader = ({ children }) => {\r\n  const dataStatus = useSelector(getDataStatus());\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!dataStatus) dispatch(loadUsersList());\r\n  }, []);\r\n  if (!dataStatus) return 'Loading...';\r\n  return children;\r\n};\r\n\r\nUsersLoader.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n\r\nexport default UsersLoader;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport UserEditPage from '../components/page/userEditPage/userEditPage';\r\nimport UserPage from '../components/page/userPage';\r\nimport UsersListPage from '../components/page/usersListPage';\r\nimport UsersLoader from '../components/ui/hoc/usersLoader';\r\nimport { getCurrentUserId } from '../store/users';\r\n\r\nconst Users = () => {\r\n  const params = useParams();\r\n  const { userId, edit } = params;\r\n  const currentUserId = useSelector(getCurrentUserId());\r\n  return (\r\n    <UsersLoader>\r\n      {userId && edit ? (\r\n        currentUserId === userId ? (\r\n          <UserEditPage />\r\n        ) : (\r\n          <Redirect to={`/users/${currentUserId}/edit`} />\r\n        )\r\n      ) : userId ? (\r\n        <UserPage userId={userId} />\r\n      ) : (\r\n        <UsersListPage />\r\n      )}\r\n    </UsersLoader>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport ProtectedRoute from './components/common/protectedRoute';\r\nimport AppLoader from './components/ui/hoc/appLoader';\r\nimport NavBar from './components/ui/navBar';\r\nimport Login from './layouts/login';\r\nimport LogOut from './layouts/logOut';\r\nimport Main from './layouts/main';\r\nimport Users from './layouts/users';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <AppLoader>\r\n        <NavBar />\r\n        <Switch>\r\n          <ProtectedRoute path=\"/users/:userId?/:edit?\" component={Users} />\r\n          <Route path=\"/login/:type?\" component={Login} />\r\n          <Route path=\"/logout\" component={LogOut} />\r\n          <Route exact path=\"/\" component={Main} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </AppLoader>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import qualitiesReducer from './qualities';\r\nimport professionsReducer from './professions';\r\nimport usersReducer from './users';\r\nimport commentsReducer from './comments';\r\n\r\nconst { combineReducers, configureStore } = require('@reduxjs/toolkit');\r\n\r\nconst rootReducer = combineReducers({\r\n  qualities: qualitiesReducer,\r\n  professions: professionsReducer,\r\n  users: usersReducer,\r\n  comments: commentsReducer\r\n});\r\n\r\nexport function createStore() {\r\n  return configureStore({\r\n    reducer: rootReducer\r\n  });\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport { createStore } from './app/store/createStore';\r\nimport { Provider } from 'react-redux';\r\nimport history from './app/utils/history';\r\n\r\nconst store = createStore();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}