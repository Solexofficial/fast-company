{"version":3,"sources":["app/services/http.service.js","app/services/user.service.js","app/services/localStorage.service.js","app/hooks/useAuth.jsx","app/components/common/form/checkBoxField.jsx","app/components/common/form/textField.jsx","app/components/ui/loginForm.jsx","app/utils/validator.js","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/services/quality.service.js","app/hooks/useQuality.jsx","app/services/profession.service.js","app/hooks/useProfession.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/common/listGroup.jsx","app/components/common/pagination.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/profession.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/usersTable.jsx","app/components/common/searchBar.jsx","app/hooks/useUsers.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/search.js","app/utils/paginate.js","app/components/ui/cards/meetingsCard.jsx","app/components/ui/cards/userCard.jsx","app/components/ui/cards/qualitiesCard.jsx","app/components/common/form/textAreaField.jsx","app/components/ui/comments/addCommentForm.jsx","app/utils/formatDate.js","app/utils/declOfNum.js","app/components/ui/comments/comment.jsx","app/components/ui/comments/commentsList.jsx","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/backButton.jsx","app/components/page/userEditPage/userEditPage.jsx","app/layouts/users.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/ui/navBar.jsx","app/App.js","index.js"],"names":["http","axios","create","baseURL","configFile","apiEndPoint","interceptors","request","use","config","isFireBase","containSlash","test","url","slice","error","Promise","reject","response","res","data","content","Object","values","status","console","log","toast","httpService","get","post","put","delete","userEndpoint","userService","a","payload","_id","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","setTokens","expiresIn","idToken","refreshToken","expiresDate","Date","getTime","localStorage","setItem","httpAuth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setUser","setError","email","password","rest","URL","process","REACT_APP_FIREBASE_KEY","returnSecureToken","createUser","localId","errorCatcher","code","message","stayOn","includes","useEffect","Provider","value","signUp","signIn","CheckBoxField","name","onChange","className","type","id","checked","htmlFor","TextField","label","placeholder","showPassword","setShowPassword","target","onClick","prevState","defaultProps","initialData","LoginForm","history","useHistory","setData","errors","setErrors","validateScheme","yup","shape","required","matches","validate","then","catch","err","path","keys","length","isValid","handleChange","handleSubmit","e","preventDefault","push","onSubmit","disabled","validator","validateMethod","statusValidate","trim","fieldName","SelectField","defaultOption","options","optionsArray","Array","isArray","map","optionName","defaultValue","option","RadioField","MultiSelectField","closeMenuOnSelect","isMulti","classNamePrefix","qualityService","QualitiesContext","useQualities","QualitiesProvider","qualities","setQualitiesList","isLoading","setLoading","getQualitiesList","getQualityById","find","p","professionService","ProfessionContext","useProfessions","ProfessionProvider","professions","setProfessions","getProfessions","getProfessionById","RegisterForm","profession","sex","license","qualitiesList","q","validatorConfig","isRequired","isEmail","isCapitalSymbol","isContainDigit","min","newData","href","Login","useParams","formType","setFormType","toggleFormType","role","professionsObject","doctor","waiter","physics","engineer","actor","cook","fetchAll","resolve","window","setTimeout","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","completedMeetings","rate","bookmark","getItem","JSON","stringify","parse","getById","user","update","userIndex","findIndex","u","comments","userId","pageId","created_at","API","fetchCommentsForUser","filter","c","add","newComment","now","Math","random","toString","substr","remove","newComments","x","ListGroup","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","Pagination","onPageChange","itemsCount","pageSize","currentPage","pageCount","ceil","pages","_","range","page","searchStatus","text","BookMark","classes","TableHeader","onSort","selectedSort","columns","renderSortArrow","currentPath","order","column","undefined","scope","TableBody","renderContent","component","Table","Profession","prof","Quality","Qualities","userQualities","UserTable","onToggleBookMark","onDelete","to","SearchBar","onSearch","UserContext","UserProvider","setUsers","getUsers","UsersListPage","setCurrentPage","selectedProf","setSelectedProf","sortBy","setSortBy","searchQuery","setSearchQuery","api","filteredUsers","query","searchBy","el","toLowerCase","count","usersCrop","pageNumber","startIndex","take","paginate","orderBy","event","pageIndex","MeetingsCard","UserCard","style","zIndex","location","pathname","src","substring","width","QualitiesCard","TextAreaField","rows","AddCommentForm","formatDate","Number","currentDateTime","postCreatedTime","diffTime","abs","year","getFullYear","month","getMonth","day","getDate","hours","getHours","getMinutes","months","getValidTime","oneMinutesAgo","thirtyMinutesAgo","lessOneDay","lessCurrentYear","checkLeapYear","minutes","floor","n","words","n1","declOfNum","Comment","comment","onRemove","alt","height","CommentsList","Comments","setComments","sortedComments","sort","b","UserPage","userQualitiesList","BackHistoryButton","goBack","UserEditPage","setIsLoading","setQualities","fetchData","quality","Users","params","edit","useMockData","statusConsts","setStatus","progress","setProgress","setCount","summaryCount","reduce","acc","cur","incrementCount","newProgress","updateProgress","initialize","Main","NavBar","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b99b420.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport configFile from '../config.json';\r\n\r\nconst http = axios.create({\r\n  baseURL: configFile.apiEndPoint\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n  function (config) {\r\n    if (configFile.isFireBase) {\r\n      const containSlash = /\\/$/gi.test(config.url);\r\n      config.url = (containSlash ? config.url.slice(0, -1) : config.url) + '.json';\r\n    }\r\n    return config;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nfunction TransformData(data) {\r\n  return data ? Object.values(data) : [];\r\n}\r\n\r\nhttp.interceptors.response.use(\r\n  (res) => {\r\n    if (configFile.isFireBase) {\r\n      res.data = { content: TransformData(res.data) };\r\n    }\r\n    return res;\r\n  },\r\n  function (error) {\r\n    const expectedErrors =\r\n      error.response && error.response.status >= 400 && error.response.status < 500;\r\n    if (!expectedErrors) {\r\n      console.log(error);\r\n      toast.error('Something was wrong. Try it later');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst httpService = {\r\n  get: http.get,\r\n  post: http.post,\r\n  put: http.put,\r\n  delete: http.delete\r\n};\r\n\r\nexport default httpService;\r\n","import httpService from './http.service';\r\n\r\nconst userEndpoint = 'user/';\r\n\r\nconst userService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(userEndpoint);\r\n    return data;\r\n  },\r\n  create: async (payload) => {\r\n    const { data } = await httpService.put(userEndpoint + payload._id, payload);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default userService;\r\n","const TOKEN_KEY = 'jwt-token';\r\nconst REFRESH_KEY = 'jwt-refresh-token';\r\nconst EXPIRES_KEY = 'jwt-expires';\r\n\r\nexport function setTokens({ expiresIn = 3600, idToken, refreshToken }) {\r\n  const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n\r\n  localStorage.setItem(TOKEN_KEY, idToken);\r\n  localStorage.setItem(REFRESH_KEY, refreshToken);\r\n  localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n}\r\n\r\nexport function getAccessToken() {\r\n  return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getRefreshToken() {\r\n  return localStorage.getItem(REFRESH_KEY);\r\n}\r\n\r\nexport function getTokenExpiresDate() {\r\n  return localStorage.getItem(EXPIRES_KEY);\r\n}\r\n\r\nconst localStorageService = {\r\n  setTokens,\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  getTokenExpiresDate\r\n};\r\n\r\nexport default localStorageService;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport userService from '../services/user.service';\r\nimport { toast } from 'react-toastify';\r\nimport { setTokens } from '../services/localStorage.service';\r\n\r\nconst httpAuth = axios.create();\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setUser] = useState({});\r\n  const [error, setError] = useState({});\r\n\r\n  async function signUp({ email, password, ...rest }) {\r\n    const URL = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_FIREBASE_KEY}`;\r\n\r\n    try {\r\n      const { data } = await httpAuth.post(URL, { email, password, returnSecureToken: true });\r\n      setTokens(data);\r\n      await createUser({ _id: data.localId, email, ...rest });\r\n      console.log(data);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n      const { code, message } = error.response.data.error;\r\n      if (code === 400) {\r\n        if (message === 'EMAIL_EXISTS') {\r\n          const errorObject = { email: 'Пользователь с таким email уже существует' };\r\n          throw errorObject;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async function signIn({ email, password, stayOn }) {\r\n    const URL = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${process.env.REACT_APP_FIREBASE_KEY}`;\r\n\r\n    try {\r\n      const { data } = await httpAuth.post(URL, { email, password, returnSecureToken: true });\r\n      if (stayOn) setTokens(data);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n      const { code, message } = error.response.data.error;\r\n      console.log(message);\r\n      if (code === 400) {\r\n        if (message === 'USER_DISABLED') {\r\n          const errorObject = { email: 'Учетная запись пользователя отключена администратором.' };\r\n          throw errorObject;\r\n        }\r\n        if (message === 'EMAIL_NOT_FOUND' || message === 'INVALID_PASSWORD') {\r\n          const errorObject = { email: 'Неверный логин или пароль' };\r\n          throw errorObject;\r\n        }\r\n        if (message.includes('TOO_MANY_ATTEMPTS_TRY_LATER')) {\r\n          const errorObject = {\r\n            email: 'За последнее время мы заметили слишком много попыток входа, попробуйте позже'\r\n          };\r\n          throw errorObject;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async function createUser(data) {\r\n    try {\r\n      const { content } = await userService.create(data);\r\n\r\n      setUser(content);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast(error);\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data;\r\n    setError(message);\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ signUp, signIn, currentUser }}>{children}</AuthContext.Provider>\r\n  );\r\n};\r\n\r\nAuthProvider.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n  const handleChange = () => {\r\n    onChange({ name: name, value: !value });\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-check-input' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-check mb-4\">\r\n      <input\r\n        className={getInputClasses()}\r\n        type=\"checkbox\"\r\n        value=\"\"\r\n        id={name}\r\n        onChange={handleChange}\r\n        checked={value}\r\n      />\r\n      <label className=\"form-check-label\" htmlFor={name}>\r\n        {children}\r\n      </label>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckBoxField.propTypes = {\r\n  name: PropTypes.string,\r\n  value: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextField = ({ label, type, placeholder, name, value, onChange, error }) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className=\"input-group has-validation\">\r\n        <input\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n          type={showPassword ? 'text' : type}\r\n          className={getInputClasses()}\r\n        />\r\n        {type === 'password' && (\r\n          <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={toggleShowPassword}>\r\n            <i className={`bi bi-eye${showPassword ? '-slash' : ''}`}></i>\r\n          </button>\r\n        )}\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as yup from 'yup';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport CheckBoxField from '../common/form/checkBoxField';\r\n// import { validator } from '../../utils/validator';\r\nimport TextField from '../common/form/textField';\r\n\r\nconst initialData = { email: '', password: '', stayOn: false };\r\n\r\nconst LoginForm = () => {\r\n  const history = useHistory();\r\n  const [data, setData] = useState(initialData);\r\n  const [errors, setErrors] = useState({});\r\n  const { signIn } = useAuth();\r\n\r\n  const validateScheme = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('пароль обязателен для заполнения')\r\n      .matches(/^(?=.*[A-Z])/, 'Пароль должен содержать хотя бы одну заглавную букву')\r\n      .matches(/(?=.*[0-9])/, 'Пароль должен содержать хотя бы одно число')\r\n      // .matches(/(?=.*[!@#$%^&*])/, 'Пароль должен содержать один из специальных символов !@#$%^&* ')\r\n      .matches(/(?=.{8})/, 'Пароль должен состоять минимум из 8 символов'),\r\n    email: yup\r\n      .string()\r\n      .required('Электронная почта обязательна для заполнения')\r\n      .email('email введен некорректно')\r\n  });\r\n\r\n  const validate = () => {\r\n    // const errors = validator(data, validatorConfig);\r\n    validateScheme\r\n      .validate(data)\r\n      .then(() => setErrors({}))\r\n      .catch((err) => setErrors({ [err.path]: err.message }));\r\n    // setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  // const validatorConfig = {\r\n  //   email: {\r\n  //     isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n  //     isEmail: {\r\n  //       message: 'email введен некорректно'\r\n  //     }\r\n  //   },\r\n  //   password: {\r\n  //     isRequired: { message: 'пароль обязателен для заполнения' },\r\n  //     isCapitalSymbol: {\r\n  //       message: 'Пароль должен содержать хотя бы одну заглавную букву'\r\n  //     },\r\n  //     isContainDigit: {\r\n  //       message: 'Пароль должен содержать хотя бы одно число'\r\n  //     },\r\n  //     min: {\r\n  //       message: 'Пароль должен состоять минимум из 8 символов',\r\n  //       value: 8\r\n  //     }\r\n  //   }\r\n  // };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    try {\r\n      await signIn(data);\r\n      history.push('/');\r\n    } catch (error) {\r\n      setErrors(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"Введите ваш e-mail\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Введите пароль\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n\r\n      <CheckBoxField name=\"stayOn\" value={data.stayOn} onChange={handleChange}>\r\n        Оставаться в системе\r\n      </CheckBoxField>\r\n\r\n      <button className=\"btn btn-primary w-100 mx-auto\" type=\"submit\" disabled={!isValid}>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","export function validator(data, config) {\r\n  const errors = {};\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate;\r\n\r\n    switch (validateMethod) {\r\n      case 'isRequired': {\r\n        if (typeof data === 'boolean') {\r\n          statusValidate = !data;\r\n        } else {\r\n          statusValidate = data.trim() === '';\r\n        }\r\n        break;\r\n      }\r\n      case 'isEmail':\r\n        {\r\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n          statusValidate = !emailRegExp.test(data);\r\n        }\r\n        break;\r\n      case 'isCapitalSymbol': {\r\n        const capitalRegExp = /[A-Z]+/g;\r\n        statusValidate = !capitalRegExp.test(data);\r\n        break;\r\n      }\r\n      case 'isContainDigit': {\r\n        const digitRegExp = /\\d+/;\r\n        statusValidate = !digitRegExp.test(data);\r\n        break;\r\n      }\r\n      case 'min': {\r\n        statusValidate = data.length < config.value;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    if (statusValidate) return config.message;\r\n  }\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(validateMethod, data[fieldName], config[fieldName][validateMethod]);\r\n      if (error && !errors[fieldName]) {\r\n        errors[fieldName] = error;\r\n      }\r\n    }\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SelectField = ({ label, value, name, onChange, defaultOption, options, error }) => {\r\n  const getInputClasses = () => {\r\n    return 'form-select' + (error ? ' is-invalid' : '');\r\n  };\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          name: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options;\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <select\r\n        className={getInputClasses()}\r\n        id=\"validationCustom04\"\r\n        value={value}\r\n        name={name}\r\n        onChange={handleChange}>\r\n        <option disabled value=\"\" key={defaultOption} defaultValue={defaultOption}>\r\n          {defaultOption}\r\n        </option>\r\n        {optionsArray &&\r\n          optionsArray.map((option) => (\r\n            <option\r\n              key={option.value || option._id}\r\n              value={option.value || option._id}\r\n              name={option.name}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  defaultOption: PropTypes.string,\r\n  value: PropTypes.string,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default SelectField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label\">{label}</label>\r\n      <div>\r\n        {options.map((option) => (\r\n          <div key={option.name + '_' + option.value} className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name={name}\r\n              id={option.name + '_' + option.value}\r\n              checked={option.value === value}\r\n              value={option.value}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={option.name + '_' + option.value}>\r\n              {option.name}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadioField.propTypes = {\r\n  options: PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string\r\n};\r\n\r\nexport default RadioField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\n\r\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          label: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options;\r\n\r\n  const handleChange = (value) => {\r\n    onChange({ name: name, value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label\">{label}</label>\r\n      <Select\r\n        closeMenuOnSelect={false}\r\n        isMulti\r\n        defaultValue={defaultValue}\r\n        options={optionsArray}\r\n        className=\"basic-multi-select\"\r\n        classNamePrefix=\"select\"\r\n        onChange={handleChange}\r\n        name={name}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nMultiSelectField.propTypes = {\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChange: PropTypes.func,\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  defaultValue: PropTypes.array\r\n};\r\n\r\nexport default MultiSelectField;\r\n","import httpService from './http.service';\r\n\r\nconst qualityEndpoint = 'quality/';\r\n\r\nconst qualityService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(qualityEndpoint);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default qualityService;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport qualityService from '../services/quality.service';\r\n\r\nconst QualitiesContext = React.createContext();\r\n\r\nexport const useQualities = () => useContext(QualitiesContext);\r\n\r\nexport const QualitiesProvider = ({ children }) => {\r\n  const [qualities, setQualitiesList] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const getQualitiesList = async () => {\r\n    try {\r\n      const { content } = await qualityService.get();\r\n      setQualitiesList(content);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  };\r\n\r\n  const getQualityById = (id) => {\r\n    return qualities.find((p) => p._id === id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQualitiesList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast(error);\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data;\r\n    setError(message);\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <QualitiesContext.Provider value={{ isLoading, qualities, getQualityById }}>\r\n      {children}\r\n    </QualitiesContext.Provider>\r\n  );\r\n};\r\n\r\nQualitiesProvider.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n","import httpService from './http.service';\r\n\r\nconst professionEndpoint = 'profession/';\r\n\r\nconst professionService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(professionEndpoint);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default professionService;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport professionService from '../services/profession.service';\r\n\r\nconst ProfessionContext = React.createContext();\r\n\r\nexport const useProfessions = () => useContext(ProfessionContext);\r\n\r\nexport const ProfessionProvider = ({ children }) => {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [professions, setProfessions] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const getProfessions = async () => {\r\n    try {\r\n      const { content } = await professionService.get();\r\n      setProfessions(content);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  };\r\n\r\n  const getProfessionById = (id) => {\r\n    return professions.find((p) => p._id === id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProfessions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast(error);\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data;\r\n    setError(message);\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <ProfessionContext.Provider value={{ isLoading, professions, getProfessionById }}>\r\n      {children}\r\n    </ProfessionContext.Provider>\r\n  );\r\n};\r\n\r\nProfessionProvider.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { validator } from '../../utils/validator';\r\nimport TextField from '../common/form/textField';\r\nimport SelectField from '../common/form/selectField';\r\nimport RadioField from '../common/form/radioField';\r\nimport MultiSelectField from '../common/form/multiSelectField';\r\nimport CheckBoxField from '../common/form/checkBoxField';\r\nimport { useQualities } from '../../hooks/useQuality';\r\nimport { useProfessions } from '../../hooks/useProfession';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst RegisterForm = () => {\r\n  const history = useHistory();\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    profession: '',\r\n    sex: 'male',\r\n    qualities: [],\r\n    license: false\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { qualities } = useQualities();\r\n  const qualitiesList = qualities.map((q) => ({ label: q.name, value: q._id }));\r\n\r\n  const { professions } = useProfessions();\r\n\r\n  const { signUp } = useAuth();\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n      isEmail: {\r\n        message: 'email введен некорректно'\r\n      }\r\n    },\r\n    password: {\r\n      isRequired: { message: 'пароль обязателен для заполнения' },\r\n      isCapitalSymbol: {\r\n        message: 'Пароль должен содержать хотя бы одну заглавную букву'\r\n      },\r\n      isContainDigit: {\r\n        message: 'Пароль должен содержать хотя бы одно число'\r\n      },\r\n      min: {\r\n        message: 'Пароль должен состоять минимум из 8 символов',\r\n        value: 8\r\n      }\r\n    },\r\n    profession: {\r\n      isRequired: { message: 'Обязательно выберите вашу профессию' }\r\n    },\r\n    license: {\r\n      isRequired: {\r\n        message: 'Вы не можете использовать наш сервис без подтверждения лицензионного соглашения'\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    const newData = { ...data, qualities: data.qualities.map((q) => q.value) };\r\n    console.log(newData);\r\n    try {\r\n      await signUp(newData);\r\n      history.push('/');\r\n    } catch (error) {\r\n      setErrors(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"Введите ваш e-mail\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Введите пароль\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n      <SelectField\r\n        label=\"Выберите вашу профессию\"\r\n        name=\"profession\"\r\n        value={data.profession}\r\n        error={errors.profession}\r\n        defaultOption=\"Choose...\"\r\n        options={professions}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <RadioField\r\n        options={[\r\n          { name: 'Male', value: 'male' },\r\n          { name: 'Female', value: 'female' },\r\n          { name: 'Other', value: 'other' }\r\n        ]}\r\n        value={data.sex}\r\n        name=\"sex\"\r\n        onChange={handleChange}\r\n        label=\"Выберите ваш пол\"\r\n      />\r\n      <MultiSelectField\r\n        options={qualitiesList}\r\n        onChange={handleChange}\r\n        name=\"qualities\"\r\n        label=\"Выберите ваши качества\"\r\n        defaultValue={data.qualities}\r\n      />\r\n      <CheckBoxField\r\n        name=\"license\"\r\n        value={data.license}\r\n        onChange={handleChange}\r\n        error={errors.license}>\r\n        Подтвердить <a href=\"#\">лицензионное соглашение</a>\r\n      </CheckBoxField>\r\n\r\n      <button className=\"btn btn-primary w-100 mx-auto\" type=\"submit\" disabled={!isValid}>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport LoginForm from '../components/ui/loginForm';\r\nimport RegisterForm from '../components/ui/registerForm';\r\n\r\nconst Login = () => {\r\n  const { type } = useParams();\r\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login');\r\n\r\n  const toggleFormType = () => {\r\n    setFormType((prevState) => (prevState === 'register' ? 'login' : 'register'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          {formType === 'register' ? (\r\n            <>\r\n              <h3 className=\"mb-4\">Register</h3>\r\n              <RegisterForm />\r\n              <p>\r\n                Already have account?\r\n                <a role=\"button\" onClick={toggleFormType}>\r\n                  Sign In\r\n                </a>\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h3 className=\"mb-4\">Login</h3>\r\n              <LoginForm />\r\n              <p>\r\n                Dont have account?\r\n                <a role=\"button\" onClick={toggleFormType}>\r\n                  Sign Up\r\n                </a>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export const professionsObject = {\n  doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n};\nexport const professions = [\n  { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n];\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(professionsObject);\n    }, 2000);\n  });\n\nexport default {\n  fetchAll\n};\n","import { professionsObject as professions } from './professions.api';\nconst qualities = {\n  tedious: {\n    _id: '67rdca3eeb7f6fgeed471198',\n    name: 'Нудила',\n    color: 'primary'\n  },\n  strange: {\n    _id: '67rdca3eeb7f6fgeed471100',\n    name: 'Странный',\n    color: 'secondary'\n  },\n  buller: {\n    _id: '67rdca3eeb7f6fgeed4711012',\n    name: 'Троль',\n    color: 'success'\n  },\n  alcoholic: {\n    _id: '67rdca3eeb7f6fgeed471101',\n    name: 'Алкоголик',\n    color: 'danger'\n  },\n  handsome: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Красавчик',\n    color: 'info'\n  },\n  uncertain: {\n    _id: '67rdca3eeb7f6fgeed471103',\n    name: 'Неуверенный',\n    color: 'dark'\n  }\n};\n\nconst users = [\n  {\n    _id: '67rdca3eeb7f6fgeed471815',\n    name: 'Джон Дориан',\n    email: 'johndorian@fastcompany.ru',\n    sex: 'male',\n    profession: professions.doctor,\n    qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n    completedMeetings: 36,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471816',\n    name: 'Кокс',\n    email: 'koks@fastcompany.ru',\n    sex: 'male',\n    profession: professions.doctor,\n    qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n    completedMeetings: 15,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471817',\n    name: 'Боб Келсо',\n    email: 'bobkelso@fastcompany.ru',\n    sex: 'male',\n    profession: professions.doctor,\n    qualities: [qualities.buller],\n    completedMeetings: 247,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471818',\n    name: 'Рэйчел Грин',\n    email: 'rachelgreene@fastcompany.ru',\n    sex: 'female',\n    profession: professions.waiter,\n    qualities: [qualities.uncertain],\n    completedMeetings: 148,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471819',\n    name: 'Шелдон Купер',\n    email: 'sheldoncooper@fastcompany.ru',\n    sex: 'male',\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 37,\n    rate: 4.6,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471820',\n    name: 'Леонард Хофстедтер',\n    email: 'leonardhofstedter@fastcompany.ru',\n    sex: 'male',\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 147,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471821',\n    name: 'Говард Воловиц',\n    email: 'howardwolowitz@fastcompany.ru',\n    sex: 'male',\n    profession: professions.engineer,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 72,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471822',\n    name: 'Никола Тесла',\n    email: 'nikolatesla@fastcompany.ru',\n    sex: 'male',\n    profession: professions.engineer,\n    qualities: [qualities.handsome],\n    completedMeetings: 72,\n    rate: 5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471823',\n    name: 'Моника Геллер',\n    email: 'monicageller@fastcompany.ru',\n    sex: 'female',\n    profession: professions.cook,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471824',\n    name: 'Рататуй',\n    email: 'ratatouille@fastcompany.ru',\n    sex: 'male',\n    profession: professions.cook,\n    qualities: [qualities.handsome, qualities.buller],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed47181f',\n    name: 'Джоуи Триббиани',\n    email: 'joeytribbiani@fastcompany.ru',\n    sex: 'male',\n    profession: professions.actor,\n    qualities: [qualities.uncertain, qualities.strange],\n    completedMeetings: 434,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed47181r',\n    name: 'Брэд Питт',\n    email: 'bradpitt@fastcompany.ru',\n    sex: 'male',\n    profession: professions.actor,\n    qualities: [qualities.handsome],\n    completedMeetings: 434,\n    rate: 5,\n    bookmark: false\n  }\n];\nif (!localStorage.getItem('users')) {\n  localStorage.setItem('users', JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem('users')));\n    }, 2000);\n  });\nconst update = (id, data) =>\n  new Promise((resolve) => {\n    const users = JSON.parse(localStorage.getItem('users'));\n    const userIndex = users.findIndex((u) => u._id === id);\n    users[userIndex] = { ...users[userIndex], ...data };\n    localStorage.setItem('users', JSON.stringify(users));\n    resolve(users[userIndex]);\n  });\n\nconst getById = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem('users')).find((user) => user._id === id));\n    }, 1000);\n  });\nexport default {\n  fetchAll,\n  getById,\n  update\n};\n","const qualities = {\n  tedious: {\n    _id: '67rdca3eeb7f6fgeed471198',\n    name: 'Нудила',\n    color: 'primary'\n  },\n  strange: {\n    _id: '67rdca3eeb7f6fgeed471100',\n    name: 'Странный',\n    color: 'secondary'\n  },\n  buller: {\n    _id: '67rdca3eeb7f6fgeed4711012',\n    name: 'Троль',\n    color: 'success'\n  },\n  alcoholic: {\n    _id: '67rdca3eeb7f6fgeed471101',\n    name: 'Алкоголик',\n    color: 'danger'\n  },\n  handsome: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Красавчик',\n    color: 'info'\n  },\n  uncertain: {\n    _id: '67rdca3eeb7f6fgeed471103',\n    name: 'Неуверенный',\n    color: 'dark'\n  }\n};\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(qualities);\n    }, 2000);\n  });\n\nexport default {\n  fetchAll\n};\n","const comments = [\r\n  {\r\n    _id: '67rdca3eeb7f6fg',\r\n    userId: '67rdca3eeb7f6fgeed471815',\r\n    pageId: '67rdca3eeb7f6fgeed471815',\r\n    content: 'Lorem ipsum dolor',\r\n    created_at: '1633576399367'\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgdasd',\r\n    pageId: '67rdca3eeb7f6fgeed471815',\r\n    userId: '67rdca3eeb7f6fgeed471815',\r\n    content: 'Lorem ipsum dolor and etc',\r\n    created_at: '1633573058520'\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgdaasd',\r\n    pageId: '67rdca3eeb7f6fgeed471817',\r\n    userId: '67rdca3eeb7f6fgeed471815',\r\n    content: 'Lorem ipsum dolor and etc',\r\n    created_at: '1633573058520'\r\n  }\r\n];\r\nif (!localStorage.getItem('comments')) {\r\n  localStorage.setItem('comments', JSON.stringify(comments));\r\n}\r\nconst fetchAll = () =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(function () {\r\n      resolve(comments);\r\n    }, 200);\r\n  });\r\n\r\nconst fetchCommentsForUser = (userId) =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(function () {\r\n      resolve(JSON.parse(localStorage.getItem('comments')).filter((c) => c.pageId === userId));\r\n    }, 200);\r\n  });\r\nconst add = (data) =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(function () {\r\n      const comments = JSON.parse(localStorage.getItem('comments'));\r\n      const newComment = {\r\n        ...data,\r\n        created_at: Date.now(),\r\n        _id: Math.random().toString(36).substr(2, 9)\r\n      };\r\n      comments.push(newComment);\r\n      localStorage.setItem('comments', JSON.stringify(comments));\r\n      resolve(newComment);\r\n    }, 200);\r\n  });\r\n\r\nconst remove = (id) =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(function () {\r\n      const comments = JSON.parse(localStorage.getItem('comments'));\r\n      const newComments = comments.filter((x) => x._id !== id);\r\n      localStorage.setItem('comments', JSON.stringify(newComments));\r\n      resolve(id);\r\n    }, 200);\r\n  });\r\nexport default {\r\n  fetchAll,\r\n  fetchCommentsForUser,\r\n  add,\r\n  remove\r\n};\r\n","import users from './fake.api/user.api';\r\nimport professions from './fake.api/professions.api';\r\nimport qualities from './fake.api/qualities.api';\r\nimport comments from './fake.api/comments.api';\r\nconst API = {\r\n  users,\r\n  professions,\r\n  qualities,\r\n  comments\r\n};\r\nexport default API;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListGroup = ({ items, valueProperty, contentProperty, onItemSelect, selectedItem }) => {\r\n  if (!Array.isArray(items)) {\r\n    return (\r\n      <ul className=\"list-group\">\r\n        {Object.keys(items).map((item) => (\r\n          <li\r\n            key={items[item][valueProperty]}\r\n            role=\"button\"\r\n            className={'list-group-item' + (items[item] === selectedItem ? ' active' : '')}\r\n            onClick={() => onItemSelect(items[item])}>\r\n            {items[item][contentProperty]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          role=\"button\"\r\n          className={'list-group-item' + (item === selectedItem ? ' active' : '')}\r\n          onClick={() => onItemSelect(item)}>\r\n          {item[contentProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  valueProperty: '_id',\r\n  contentProperty: 'name'\r\n};\r\n\r\nListGroup.propTypes = {\r\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  valueProperty: PropTypes.string.isRequired,\r\n  contentProperty: PropTypes.string.isRequired,\r\n  onItemSelect: PropTypes.func,\r\n  selectedItem: PropTypes.object\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = ({ onPageChange, itemsCount, pageSize, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n  const pages = _.range(1, pageCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li className={'page-item ' + (page === currentPage ? 'active' : '')} key={page}>\r\n            <a className=\"page-link\" role=\"button\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nPagination.propTypes = {\r\n  onPageChange: PropTypes.func.isRequired,\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\n\r\nconst searchStatus = ({ length }) => {\r\n  let text = `${length} человек тусанет с тобой сегодня`;\r\n  let className = 'badge bg-primary';\r\n\r\n  if (length <= 4 && length > 1) {\r\n    text = `${length} человека тусанут с тобой сегодня`;\r\n  }\r\n  if (length === 0) {\r\n    text = 'Никто с тобой не тусанет';\r\n    className = 'badge bg-danger';\r\n  }\r\n\r\n  return (\r\n    <h2>\r\n      <span className={className}>{text}</span>\r\n    </h2>\r\n  );\r\n};\r\n\r\nexport default searchStatus;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookMark = ({ status, onClick }) => {\r\n  let classes = 'bi bi-bookmark';\r\n  classes = status ? 'bi bi-bookmark-fill' : classes;\r\n\r\n  return (\r\n    <button className=\"btn btn-primary\" onClick={onClick}>\r\n      <i className={classes}></i>\r\n    </button>\r\n  );\r\n};\r\nBookMark.propTypes = {\r\n  id: PropTypes.string,\r\n  status: PropTypes.bool,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default BookMark;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n  const handleSort = (item) => {\r\n    if (selectedSort.path === item) {\r\n      onSort({ ...selectedSort, order: selectedSort.order === 'asc' ? 'desc' : 'asc' });\r\n    } else {\r\n      onSort({ path: item, order: 'asc' });\r\n    }\r\n  };\r\n\r\n  const renderSortArrow = (selectedSort, currentPath) => {\r\n    if (selectedSort.path === currentPath) {\r\n      if (selectedSort.order === 'asc') {\r\n        return <i className=\"bi bi-caret-down-fill\"></i>;\r\n      } else {\r\n        return <i className=\"bi bi-caret-up-fill\"></i>;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {Object.keys(columns).map((column) => (\r\n          <th\r\n            key={column}\r\n            onClick={columns[column].path ? () => handleSort(columns[column].path) : undefined}\r\n            {...{ role: columns[column].path && 'button' }}\r\n            scope=\"col\">\r\n            {columns[column].name}\r\n            {renderSortArrow(selectedSort, columns[column].path)}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n  const renderContent = (item, column) => {\r\n    if (columns[column].component) {\r\n      const component = columns[column].component;\r\n      if (typeof component === 'function') {\r\n        return component(item);\r\n      }\r\n      return component;\r\n    }\r\n    return _.get(item, columns[column].path);\r\n  };\r\n\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr key={item._id}>\r\n          {Object.keys(columns).map((column) => (\r\n            <td key={column}>{renderContent(item, column)}</td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nTableBody.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import Table from './table';\r\nimport TableBody from './tableBody';\r\nimport TableHeader from './tableHeader';\r\nexport default Table;\r\nexport { TableBody, TableHeader };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      {children || (\r\n        <>\r\n          <TableHeader {...{ onSort, selectedSort, columns }} />\r\n          <TableBody {...{ columns, data }} />\r\n        </>\r\n      )}\r\n    </table>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  onSort: PropTypes.func,\r\n  selectedSort: PropTypes.object,\r\n  columns: PropTypes.object,\r\n  data: PropTypes.array,\r\n  children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { useProfessions } from '../../hooks/useProfession';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profession = ({ id }) => {\r\n  const { isLoading, getProfessionById } = useProfessions();\r\n  const prof = getProfessionById(id);\r\n\r\n  if (!isLoading) {\r\n    return <p>{prof.name}</p>;\r\n  } else {\r\n    return <p>Loading...</p>;\r\n  }\r\n};\r\n\r\nProfession.propTypes = {\r\n  id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Profession;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Quality = ({ name, color }) => {\r\n  const classes = 'badge m-1 bg-';\r\n  return <span className={classes + color}>{name}</span>;\r\n};\r\n\r\nQuality.propTypes = {\r\n  name: PropTypes.string,\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default Quality;\r\n","import Qualities from './qualitiesList';\r\nexport default Qualities;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Quality from './quality';\r\nimport { useQualities } from '../../../hooks/useQuality';\r\n\r\nconst QualitiesList = ({ data }) => {\r\n  const { qualities, isLoading } = useQualities();\r\n\r\n  const userQualities = qualities.filter((q) => data.includes(q._id));\r\n\r\n  return !isLoading ? (\r\n    <>\r\n      {userQualities.map((item) => (\r\n        <Quality key={item._id} {...item} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <p>Loading...</p>\r\n  );\r\n};\r\n\r\nQualitiesList.propTypes = {\r\n  data: PropTypes.array\r\n};\r\n\r\nexport default QualitiesList;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BookMark from '../common/bookmark';\r\nimport Table from '../common/table';\r\nimport Profession from './profession';\r\nimport Qualities from '../ui/qualities';\r\n\r\nconst UserTable = ({ users, onSort, selectedSort, onToggleBookMark, onDelete }) => {\r\n  const columns = {\r\n    name: {\r\n      path: 'name',\r\n      name: 'Имя',\r\n      component: (user) => <Link to={`users/${user._id}`}>{user.name}</Link>\r\n    },\r\n    qualities: {\r\n      name: 'Качества',\r\n      component: (user) => <Qualities data={user.qualities} />\r\n    },\r\n    professions: { name: 'Профессия', component: (user) => <Profession id={user.profession} /> },\r\n    completedMeetings: { path: 'completedMeetings', name: 'Встретился, раз' },\r\n    rate: { path: 'rate', name: 'Оценка' },\r\n    bookmark: {\r\n      path: 'bookmark',\r\n      name: 'Избранное',\r\n      component: (user) => (\r\n        <BookMark onClick={() => onToggleBookMark(user._id)} status={user.bookmark} />\r\n      )\r\n    },\r\n    delete: {\r\n      component: (user) => (\r\n        <button className=\"btn btn-danger\" onClick={() => onDelete(user._id)}>\r\n          Delete\r\n        </button>\r\n      )\r\n    }\r\n  };\r\n\r\n  return <Table onSort={onSort} selectedSort={selectedSort} columns={columns} data={users} />;\r\n};\r\n\r\nUserTable.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  onToggleBookMark: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from './form/textField';\r\n\r\nconst SearchBar = ({ value, onSearch }) => {\r\n  return (\r\n    <>\r\n      <TextField\r\n        name=\"search\"\r\n        placeholder=\"Поиск...\"\r\n        type=\"search\"\r\n        value={value}\r\n        onChange={onSearch}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSearch: PropTypes.func,\r\n  value: PropTypes.string\r\n};\r\n\r\nexport default SearchBar;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport userService from '../services/user.service';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport const useUsers = () => useContext(UserContext);\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast(error);\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const { content } = await userService.get();\r\n      setUsers(content);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  };\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data;\r\n    setError(message);\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <UserContext.Provider value={{ users }}>\r\n      {!isLoading ? children : <h1>Loading...</h1>}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nUserProvider.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n\r\nexport default UserProvider;\r\n","import UsersListPage from './usersListPage';\r\nexport default UsersListPage;\r\n","/* eslint-disable indent */\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport api from '../../../api';\r\nimport ListGroup from '../../common/listGroup';\r\nimport Pagination from '../../common/pagination';\r\nimport SearchStatus from '../../ui/searchStatus';\r\nimport UsersTable from '../../ui/usersTable';\r\nimport { paginate } from '../../../utils/paginate';\r\nimport searchBy from '../../../utils/search';\r\nimport SearchBar from '../../common/searchBar';\r\nimport { useUsers } from '../../../hooks/useUsers';\r\n\r\nconst UsersListPage = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [professions, setProfessions] = useState();\r\n  const [selectedProf, setSelectedProf] = useState();\r\n  const [sortBy, setSortBy] = useState({ path: 'name', order: 'asc' });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const pageSize = 8;\r\n\r\n  const { users } = useUsers();\r\n  console.log(users);\r\n\r\n  useEffect(() => {\r\n    if (!professions) {\r\n      api.professions.fetchAll().then((data) => setProfessions(data));\r\n    }\r\n  }, [professions]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedProf]);\r\n\r\n  const handleDelete = (userId) => {\r\n    // return setUsers(users.filter((user) => user._id !== userId));\r\n    console.log(userId);\r\n  };\r\n\r\n  const handleToggleBookMark = (userId) => {\r\n    console.log(userId);\r\n    // setUsers(\r\n    //   users.filter((user) => {\r\n    //     if (user._id === userId) {\r\n    //       user.bookmark = !user.bookmark;\r\n    //       return user;\r\n    //     }\r\n    //     return user;\r\n    //   })\r\n    // );\r\n  };\r\n\r\n  const handleProfessionSelect = (item) => {\r\n    setSearchQuery('');\r\n    setSelectedProf(item);\r\n  };\r\n\r\n  const handlePageChange = (pageIndex) => {\r\n    setCurrentPage(pageIndex);\r\n  };\r\n\r\n  const handleSort = (item) => {\r\n    setSortBy(item);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setSelectedProf();\r\n    setSearchQuery(event.value);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setSelectedProf();\r\n    setSearchQuery('');\r\n  };\r\n\r\n  if (users) {\r\n    const filteredUsers = searchQuery\r\n      ? searchBy(users, searchQuery, { searchBy: 'name' })\r\n      : selectedProf\r\n      ? users.filter((user) => JSON.stringify(user.profession) === JSON.stringify(selectedProf))\r\n      : users;\r\n\r\n    const count = filteredUsers.length;\r\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\r\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"d-flex\">\r\n        {professions && (\r\n          <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n            <ListGroup\r\n              items={professions}\r\n              onItemSelect={handleProfessionSelect}\r\n              selectedItem={selectedProf}\r\n            />\r\n            <button className=\"btn btn-secondary mt-2\" onClick={clearFilter}>\r\n              Очистить\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"d-flex flex-column\">\r\n          <SearchStatus length={count} />\r\n          <SearchBar data={users} value={searchQuery} onSearch={handleSearch} />\r\n          {count > 0 && (\r\n            <UsersTable\r\n              users={usersCrop}\r\n              onSort={handleSort}\r\n              selectedSort={sortBy}\r\n              onToggleBookMark={handleToggleBookMark}\r\n              onDelete={handleDelete}\r\n            />\r\n          )}\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Pagination\r\n              itemsCount={count}\r\n              pageSize={pageSize}\r\n              onPageChange={handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <h1 className=\"d-flex justify-content-center align-items-center\">Loading...</h1>;\r\n};\r\n\r\nUsersListPage.propTypes = {\r\n  users: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n  onToggleBookMark: PropTypes.func\r\n};\r\nexport default UsersListPage;\r\n","export default function searchBy(data, query, config = { searchBy: 'name' }) {\r\n  return data.filter((el) => el[config.searchBy].toLowerCase().includes(query.toLowerCase()));\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MeetingsCard = ({ value }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Завершенных встреч</span>\r\n        </h5>\r\n\r\n        <h1 className=\"display-1\">{value}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMeetingsCard.propTypes = {\r\n  value: PropTypes.number\r\n};\r\n\r\nexport default MeetingsCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst UserCard = ({ user }) => {\r\n  const history = useHistory();\r\n  const handleClick = () => {\r\n    history.push(history.location.pathname + '/edit');\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        <button\r\n          className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\r\n          style={{ zIndex: 2 }}\r\n          onClick={handleClick}>\r\n          <i className=\"bi bi-gear\"></i>\r\n        </button>\r\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\r\n          <img\r\n            src={`https://avatars.dicebear.com/api/avataaars/${(Math.random() + 1)\r\n              .toString(36)\r\n              .substring(7)}.svg`}\r\n            className=\"rounded-circle\"\r\n            width=\"150\"\r\n          />\r\n          <div className=\"mt-3\">\r\n            <h4>{user.name}</h4>\r\n            <p className=\"text-secondary mb-1\">{user.profession.name}</p>\r\n            <div className=\"text-muted\">\r\n              <i className=\"bi bi-caret-down-fill text-primary\" role=\"button\"></i>\r\n              <i className=\"bi bi-caret-up text-secondary\" role=\"button\"></i>\r\n              <span className=\"ms-2\">{user.rate}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserCard.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default UserCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Qualities from '../qualities';\r\n\r\nconst QualitiesCard = ({ data }) => {\r\n  console.log(data);\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Качества</span>\r\n        </h5>\r\n        <p className=\"card-text\">\r\n          <Qualities data={data} />\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nQualitiesCard.propTypes = {\r\n  data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default QualitiesCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextAreaField = ({ label, name, value, onChange, error, rows }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={name} className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <textarea\r\n        className={'form-control' + (error ? ' is-invalid' : '')}\r\n        name={name}\r\n        value={value}\r\n        id={name}\r\n        rows={rows}\r\n        onChange={handleChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nTextAreaField.defaultProps = {\r\n  type: 'text',\r\n  rows: 3\r\n};\r\n\r\nTextAreaField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n  rows: PropTypes.number\r\n};\r\n\r\nexport default TextAreaField;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport API from '../../../api';\r\nimport { validator } from '../../../utils/validator';\r\nimport SelectField from '../../common/form/selectField';\r\nimport TextAreaField from '../../common/form/textAreaField';\r\n\r\nconst initialData = { content: '', userId: '' };\r\n\r\nconst AddCommentForm = ({ onSubmit }) => {\r\n  const [data, setData] = useState(initialData);\r\n  const [users, setUsers] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    API.users.fetchAll().then((data) => setUsers(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    userId: {\r\n      isRequired: { message: 'Обязательно выберите пользователя' }\r\n    },\r\n    content: {\r\n      isRequired: { message: 'Поле \"Сообщение\" не должно быть пустым' }\r\n    }\r\n  };\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setData(initialData);\r\n    setErrors({});\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    onSubmit(data);\r\n    clearForm();\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-2\">\r\n      <div className=\"card-body\">\r\n        <form onSubmit={handleSubmit}>\r\n          <h2>Новый комментарий</h2>\r\n          <div className=\"mb-4\">\r\n            <SelectField\r\n              options={users}\r\n              name=\"userId\"\r\n              value={data.userId}\r\n              defaultOption={'Выберите пользователя'}\r\n              onChange={handleChange}\r\n              error={errors.userId}\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <TextAreaField\r\n              label=\"Сообщение\"\r\n              name=\"content\"\r\n              value={data.content}\r\n              onChange={handleChange}\r\n              error={errors.content}\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <button className=\"btn btn-primary\" type=\"submit\" disabled={!isValid}>\r\n              Опубликовать\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddCommentForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCommentForm;\r\n","import declOfNum from './declOfNum';\r\n\r\nexport default function formatDate(value) {\r\n  if (typeof value === 'string') {\r\n    value = Number(value);\r\n  }\r\n  const currentDateTime = Date.now();\r\n  const postCreatedTime = Number(value);\r\n  const diffTime = Math.abs(currentDateTime - postCreatedTime);\r\n\r\n  const year = new Date(value).getFullYear();\r\n  const month = new Date(value).getMonth();\r\n  const day = new Date(value).getDate();\r\n  const hours = new Date(value).getHours();\r\n  const min = new Date(value).getMinutes();\r\n\r\n  const months = [\r\n    'Января',\r\n    'Февраля',\r\n    'Марта',\r\n    'Апреля',\r\n    'Мая',\r\n    'Июня',\r\n    'Июля',\r\n    'Августа',\r\n    'Сентября',\r\n    'Октября',\r\n    'Ноября',\r\n    'Декабря'\r\n  ];\r\n\r\n  const checkLeapYear = (year) => {\r\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n  };\r\n\r\n  const getValidTime = (hours, min) => {\r\n    hours = hours < 10 ? `0${hours}` : hours;\r\n    min = min < 10 ? `0${min}` : min;\r\n    return `${hours}:${min}`;\r\n  };\r\n\r\n  const oneMinutesAgo = 60000;\r\n  const thirtyMinutesAgo = oneMinutesAgo * 30;\r\n  const lessOneDay = oneMinutesAgo * 60 * 24;\r\n  const lessCurrentYear = lessOneDay * (checkLeapYear(year) ? 366 : 365);\r\n\r\n  if (diffTime <= oneMinutesAgo) {\r\n    return 'только что';\r\n  } else if (diffTime <= thirtyMinutesAgo) {\r\n    const minutes = Math.floor(diffTime / 60000);\r\n    return `${minutes} ${declOfNum(minutes, ['минута', 'минуты', 'минут'])} назад`;\r\n  } else if (diffTime > thirtyMinutesAgo && diffTime <= lessOneDay) {\r\n    return `сегодня в ${getValidTime(hours, min)}`;\r\n  } else if (diffTime > lessOneDay && diffTime <= lessCurrentYear) {\r\n    return `${day} ${months[month]} в ${getValidTime(hours, min)}`;\r\n  } else if (diffTime > lessCurrentYear) {\r\n    return `${day} ${months[month]} ${year} года в ${getValidTime(hours, min)}`;\r\n  } else {\r\n    return `Этот комментарий оставило НЛО из будущего ¯\\\\_(ツ)_/¯`;\r\n  }\r\n}\r\n","export default function declOfNum(n, words) {\r\n  n = Math.abs(n) % 100;\r\n  const n1 = n % 10;\r\n  if (n > 10 && n < 20) {\r\n    return words[2];\r\n  }\r\n  if (n1 > 1 && n1 < 5) {\r\n    return words[1];\r\n  }\r\n  if (n1 === 1) {\r\n    return words[0];\r\n  }\r\n  return words[2];\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport API from '../../../api';\r\nimport formatDate from '../../../utils/formatDate';\r\n\r\nconst Comment = ({ comment, onRemove }) => {\r\n  const [user, setUser] = useState();\r\n  useEffect(() => {\r\n    API.users.getById(comment.userId).then((data) => setUser(data));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-light card-body  mb-3\">\r\n      {user ? (\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"d-flex flex-start \">\r\n              <img\r\n                src={`https://avatars.dicebear.com/api/avataaars/${(Math.random() + 1)\r\n                  .toString(36)\r\n                  .substring(7)}.svg`}\r\n                className=\"rounded-circle shadow-1-strong me-3\"\r\n                alt=\"avatar\"\r\n                width=\"65\"\r\n                height=\"65\"\r\n              />\r\n              <div className=\"flex-grow-1 flex-shrink-1\">\r\n                <div className=\"mb-4\">\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <p className=\"mb-1 \">\r\n                      {user.name} - <span className=\"small\">{formatDate(comment.created_at)}</span>\r\n                    </p>\r\n                    <button\r\n                      className=\"btn btn-sm text-primary d-flex align-items-center\"\r\n                      onClick={() => onRemove(comment._id)}>\r\n                      <i className=\"bi bi-x-lg\"></i>\r\n                    </button>\r\n                  </div>\r\n                  <p className=\"small mb-0\">{comment.content}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h2>Loading...</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.object,\r\n  onRemove: PropTypes.func\r\n};\r\n\r\nexport default Comment;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Comment from './comment';\r\n\r\nconst CommentsList = ({ comments, onRemove }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body \">\r\n        <h2>Комментарии</h2>\r\n        <hr />\r\n        {comments.map((comment) => (\r\n          <Comment key={comment._id} comment={comment} onRemove={onRemove} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentsList.propTypes = {\r\n  comments: PropTypes.array,\r\n  onRemove: PropTypes.func\r\n};\r\n\r\nexport default CommentsList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport AddCommentForm from './comments/addCommentForm';\r\nimport CommentsList from './comments/commentsList';\r\nimport API from '../../api';\r\n\r\nconst Comments = () => {\r\n  const { userId } = useParams();\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    API.comments.fetchCommentsForUser(userId).then((data) => setComments(data));\r\n  }, []);\r\n\r\n  const handleRemoveComment = (id) => {\r\n    API.comments\r\n      .remove(id)\r\n      .then((data) =>\r\n        setComments((prevState) => prevState.filter((comment) => comment._id !== data))\r\n      );\r\n  };\r\n\r\n  const handleSubmit = (data) => {\r\n    API.comments\r\n      .add({ ...data, pageId: userId })\r\n      .then((data) => setComments((prevState) => [data, ...prevState]));\r\n  };\r\n\r\n  const sortedComments = comments.sort((a, b) => b.created_at - a.created_at);\r\n  return (\r\n    <>\r\n      <AddCommentForm userId={userId} onSubmit={handleSubmit} />\r\n      {sortedComments.length > 0 && (\r\n        <CommentsList comments={sortedComments} onRemove={handleRemoveComment} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import UserPage from './userPage';\r\nexport default UserPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport API from '../../../api';\r\nimport MeetingsCard from '../../ui/cards/meetingsCard';\r\nimport UserCard from '../../ui/cards/userCard';\r\nimport QualitiesCard from '../../ui/cards/qualitiesCard';\r\nimport Comments from '../../ui/comments';\r\n\r\nconst UserPage = ({ userId }) => {\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    API.users.getById(userId).then((data) => setUser(data));\r\n  }, []);\r\n\r\n  if (user) {\r\n    const userQualitiesList = user.qualities.map((q) => q._id);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row gutters-sm\">\r\n          <div className=\"col-md-4 mb-3\">\r\n            <UserCard user={user} />\r\n            <QualitiesCard data={userQualitiesList} />\r\n            <MeetingsCard value={user.completedMeetings} />\r\n          </div>\r\n\r\n          <div className=\"col-md-8\">\r\n            <Comments />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <h2>Loading...</h2>;\r\n};\r\n\r\nUserPage.propTypes = {\r\n  userId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default UserPage;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nconst BackHistoryButton = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\r\n      <i className=\"bi bi-arrow-left-square\"></i> Назад\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BackHistoryButton;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../../../api';\r\nimport TextField from '../../common/form/textField';\r\nimport SelectField from '../../common/form/selectField';\r\nimport RadioField from '../../common/form/radioField';\r\nimport MultiSelectField from '../../common/form/multiSelectField';\r\nimport { validator } from '../../../utils/validator';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport BackHistoryButton from '../../common/backButton';\r\n\r\nconst UserEditPage = () => {\r\n  const { userId } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [user, setUser] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [qualities, setQualities] = useState({});\r\n  const [professions, setProfessions] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        await api.users.getById(userId).then((data) => setUser(data));\r\n        await api.qualities.fetchAll().then((data) => setQualities(data));\r\n        await api.professions.fetchAll().then((data) => setProfessions(data));\r\n      } catch (e) {\r\n        console.log(e);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleChange = (target) => {\r\n    setUser((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n\r\n    // valid profession for render\r\n    for (const profession in professions) {\r\n      if (professions[profession]._id === user.profession) {\r\n        user.profession = professions[profession];\r\n      }\r\n    }\r\n\r\n    // valid qualities for render\r\n    user.qualities = Object.values(qualities).filter((quality) =>\r\n      user.qualities.map((quality) => quality.value || quality._id).includes(quality._id)\r\n    );\r\n\r\n    api.users.update(userId, user).then((data) => history.push(`/users/${data._id}`));\r\n  };\r\n\r\n  const validate = () => {\r\n    const errors = validator(user, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    name: {\r\n      isRequired: { message: 'Имя обязательно для заполнения' }\r\n    },\r\n    email: {\r\n      isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n      isEmail: {\r\n        message: 'email введен некорректно'\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => validate(), [user]);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <BackHistoryButton />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          {!isLoading && Object.keys(professions).length > 0 ? (\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"Имя\"\r\n                placeholder=\"Введите Имя\"\r\n                name=\"name\"\r\n                value={user.name}\r\n                onChange={handleChange}\r\n                error={errors.name}\r\n              />\r\n              <TextField\r\n                label=\"Электронная почта\"\r\n                placeholder=\"Введите электронную почту\"\r\n                name=\"email\"\r\n                value={user.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n              />\r\n\r\n              <SelectField\r\n                label=\"Выберите вашу профессию\"\r\n                value={user.profession._id}\r\n                error={errors.professions}\r\n                name=\"profession\"\r\n                defaultOption=\"Choose...\"\r\n                options={professions}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <RadioField\r\n                options={[\r\n                  { name: 'Male', value: 'male' },\r\n                  { name: 'Female', value: 'female' },\r\n                  { name: 'Other', value: 'other' }\r\n                ]}\r\n                value={user.sex}\r\n                name=\"sex\"\r\n                onChange={handleChange}\r\n                label=\"Выберите ваш пол\"\r\n              />\r\n\r\n              <MultiSelectField\r\n                options={qualities}\r\n                onChange={handleChange}\r\n                name=\"qualities\"\r\n                label=\"Выберите ваши качества\"\r\n                defaultValue={user.qualities.map((quality) => ({\r\n                  label: quality.name,\r\n                  value: quality._id\r\n                }))}\r\n              />\r\n              <button className=\"btn btn-primary w-100 mx-auto\" type=\"submit\" disabled={!isValid}>\r\n                Обновить\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <h2>Loading...</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserEditPage.propTypes = {\r\n  userId: PropTypes.string\r\n};\r\n\r\nexport default UserEditPage;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport UsersListPage from '../components/page/usersListPage';\r\nimport UserPage from '../components/page/userPage';\r\nimport UserEditPage from '../components/page/userEditPage/userEditPage';\r\nimport UserProvider from '../hooks/useUsers';\r\nconst Users = () => {\r\n  const params = useParams();\r\n  const { userId, edit } = params;\r\n\r\n  return (\r\n    <>\r\n      <UserProvider>\r\n        {userId && edit ? (\r\n          <UserEditPage />\r\n        ) : userId ? (\r\n          <UserPage userId={userId} />\r\n        ) : (\r\n          <UsersListPage />\r\n        )}\r\n      </UserProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { useEffect, useState } from 'react';\r\nimport professions from '../mockData/professions.json';\r\nimport qualities from '../mockData/qualities.json';\r\nimport users from '../mockData/users.json';\r\nimport httpService from '../services/http.service';\r\n\r\nconst useMockData = () => {\r\n  const statusConsts = {\r\n    idle: 'Not Started',\r\n    pending: 'In Process',\r\n    success: 'Ready',\r\n    error: 'Error occurred'\r\n  };\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(statusConsts.idle);\r\n  const [progress, setProgress] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n  const summaryCount = [professions, qualities, users].reduce((acc, cur) => acc + cur.length, 0);\r\n\r\n  const incrementCount = () => {\r\n    setCount((prevState) => prevState + 1);\r\n  };\r\n\r\n  const updateProgress = () => {\r\n    if (count !== 0 && status === statusConsts.idle) {\r\n      setStatus(statusConsts.pending);\r\n    }\r\n    const newProgress = Math.floor((count / summaryCount) * 100);\r\n    if (progress < newProgress) {\r\n      setProgress(() => newProgress);\r\n    }\r\n    if (newProgress === 100) {\r\n      setStatus(statusConsts.success);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateProgress();\r\n  }, [count]);\r\n\r\n  async function initialize() {\r\n    try {\r\n      for (const prof of professions) {\r\n        await httpService.put('profession/' + prof._id, prof);\r\n        incrementCount();\r\n      }\r\n      for (const user of users) {\r\n        await httpService.put('user/' + user._id, user);\r\n        incrementCount();\r\n      }\r\n      for (const quality of qualities) {\r\n        await httpService.put('quality/' + quality._id, quality);\r\n        incrementCount();\r\n      }\r\n    } catch (error) {\r\n      setError(error);\r\n      setStatus(statusConsts.error);\r\n    }\r\n  }\r\n\r\n  return { error, initialize, progress, status };\r\n};\r\n\r\nexport default useMockData;\r\n","import React from 'react';\r\nimport useMockData from '../utils/mockData';\r\n\r\nconst Main = () => {\r\n  const { error, initialize, progress, status } = useMockData();\r\n\r\n  const handleClick = () => {\r\n    console.log('clicked');\r\n    initialize();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Main Page</h1>\r\n      <h3>Инициализация данных в FireBase</h3>\r\n      <ul>\r\n        <li>Status: {status}</li>\r\n        <li>Progress: {progress}%</li>\r\n        {error && <li>error: {error}</li>}\r\n      </ul>\r\n      <button className=\"btn btn-primary\" onClick={handleClick}>\r\n        Инициализировать\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <ul className=\"nav nav-tabs m-3\">\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/\" className=\"nav-link\">\r\n          Main\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/login\" className=\"nav-link\">\r\n          Login\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/users\" className=\"nav-link\">\r\n          Users\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport Login from './layouts/login';\r\nimport Users from './layouts/users';\r\nimport Main from './layouts/main';\r\nimport NavBar from './components/ui/navBar';\r\nimport { ProfessionProvider } from './hooks/useProfession';\r\nimport { QualitiesProvider } from './hooks/useQuality';\r\nimport AuthProvider from './hooks/useAuth';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <AuthProvider>\r\n        <NavBar />\r\n        <QualitiesProvider>\r\n          <ProfessionProvider>\r\n            <Switch>\r\n              <Route path=\"/users/:userId?/:edit?\" component={Users} />\r\n              <Route path=\"/login/:type?\" component={Login} />\r\n              <Route exact path=\"/\" component={Main} />\r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n          </ProfessionProvider>\r\n        </QualitiesProvider>\r\n      </AuthProvider>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './app/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}