{"version":3,"sources":["app/components/textField.jsx","app/layouts/login.jsx","app/utils/validator.js","app/components/tableHeader.jsx","app/components/tableBody.jsx","app/components/table.jsx","app/components/bookmark.jsx","app/components/qualitie.jsx","app/components/qualitiesList.jsx","app/components/usersTable.jsx","app/components/searchStatus.jsx","app/components/pagination.jsx","app/components/listGroup.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/index.js","app/components/searchBar.jsx","app/components/usersList.jsx","app/utils/search.js","app/utils/paginate.js","app/components/user.jsx","app/components/userPage.jsx","app/layouts/users.jsx","app/layouts/main.jsx","app/components/navBar.jsx","app/App.js","index.js"],"names":["TextField","label","type","placeholder","name","value","onChange","error","useState","showPassword","setShowPassword","className","htmlFor","id","onClick","prevState","defaultProps","Login","email","password","data","setData","errors","setErrors","validate","config","validateMethod","statusValidate","trim","test","length","message","fieldName","validator","validatorConfig","Object","keys","isValid","isRequired","isEmail","isCapitalSymbol","isContainDigit","min","useEffect","handleChange","target","onSubmit","e","preventDefault","console","log","disabled","TableHeader","onSort","selectedSort","columns","renderSortArrow","currentPath","path","order","map","column","item","undefined","role","scope","TableBody","renderContent","component","_","get","_id","Table","children","BookMark","status","classes","Qualitie","color","QualitiesList","qualities","UserTable","users","onToggleBookMark","onDelete","user","to","professions","completedMeetings","rate","bookmark","delete","searchStatus","text","Pagination","onPageChange","itemsCount","pageSize","currentPage","pageCount","Math","ceil","pages","range","page","ListGroup","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","professionsObject","doctor","waiter","physics","engineer","actor","cook","tedious","strange","buller","alcoholic","handsome","uncertain","profession","API","fetchAll","Promise","resolve","window","setTimeout","getById","find","SearchBar","onSearch","UsersList","setCurrentPage","setProfessions","selectedProf","setSelectedProf","sortBy","setSortBy","searchQuery","setSearchQuery","api","then","filteredUsers","query","searchBy","filter","el","toLowerCase","includes","JSON","stringify","count","usersCrop","pageNumber","startIndex","slice","take","paginate","orderBy","event","pageIndex","User","history","useHistory","replace","UserPage","userId","currentUser","setCurrentUser","Users","useParams","setUsers","Main","NavBar","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aaf604d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextField = ({ label, type, placeholder, name, value, onChange, error }) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className=\"input-group has-validation\">\r\n        <input\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={onChange}\r\n          type={showPassword ? 'text' : type}\r\n          className={getInputClasses()}\r\n        />\r\n        {type === 'password' && (\r\n          <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={toggleShowPassword}>\r\n            <i className={`bi bi-eye${showPassword ? '-slash' : ''}`}></i>\r\n          </button>\r\n        )}\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TextField from '../components/textField';\r\nimport { validator } from '../utils/validator';\r\n\r\nconst Login = () => {\r\n  const [data, setData] = useState({ email: '', password: '' });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n      isEmail: {\r\n        message: 'email введен некорректно'\r\n      }\r\n    },\r\n    password: {\r\n      isRequired: { message: 'пароль обязателен для заполнения' },\r\n      isCapitalSymbol: {\r\n        message: 'Пароль должен содержать хотя бы одну заглавную букву'\r\n      },\r\n      isContainDigit: {\r\n        message: 'Пароль должен содержать хотя бы одно число'\r\n      },\r\n      min: {\r\n        message: 'Пароль должен состоять минимум из 8 символов',\r\n        value: 8\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          <h3 className=\"mb-4\">Login</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              label=\"email\"\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Введите ваш e-mail\"\r\n              value={data.email}\r\n              onChange={handleChange}\r\n              error={errors.email}\r\n            />\r\n            <TextField\r\n              label=\"password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Введите пароль\"\r\n              value={data.password}\r\n              onChange={handleChange}\r\n              error={errors.password}\r\n            />\r\n\r\n            <button\r\n              className=\"btn btn-primary w-100 mx-auto\"\r\n              type=\"submit\"\r\n              disabled={!isValid}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export function validator(data, config) {\r\n  const errors = {};\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate;\r\n\r\n    switch (validateMethod) {\r\n      case 'isRequired':\r\n        statusValidate = data.trim() === '';\r\n        break;\r\n      case 'isEmail':\r\n        {\r\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n          statusValidate = !emailRegExp.test(data);\r\n        }\r\n        break;\r\n      case 'isCapitalSymbol': {\r\n        const capitalRegExp = /[A-Z]+/g;\r\n        statusValidate = !capitalRegExp.test(data);\r\n        break;\r\n      }\r\n      case 'isContainDigit': {\r\n        const digitRegExp = /\\d+/;\r\n        statusValidate = !digitRegExp.test(data);\r\n        break;\r\n      }\r\n      case 'min': {\r\n        statusValidate = data.length < config.value;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    if (statusValidate) return config.message;\r\n  }\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(\r\n        validateMethod,\r\n        data[fieldName],\r\n        config[fieldName][validateMethod]\r\n      );\r\n      if (error && !errors[fieldName]) {\r\n        errors[fieldName] = error;\r\n      }\r\n    }\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n  const handleSort = (item) => {\r\n    if (selectedSort.path === item) {\r\n      onSort({ ...selectedSort, order: selectedSort.order === 'asc' ? 'desc' : 'asc' });\r\n    } else {\r\n      onSort({ path: item, order: 'asc' });\r\n    }\r\n  };\r\n\r\n  const renderSortArrow = (selectedSort, currentPath) => {\r\n    if (selectedSort.path === currentPath) {\r\n      if (selectedSort.order === 'asc') {\r\n        return <i className=\"bi bi-caret-down-fill\"></i>;\r\n      } else {\r\n        return <i className=\"bi bi-caret-up-fill\"></i>;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {Object.keys(columns).map((column) => (\r\n          <th\r\n            key={column}\r\n            onClick={columns[column].path ? () => handleSort(columns[column].path) : undefined}\r\n            {...{ role: columns[column].path && 'button' }}\r\n            scope=\"col\">\r\n            {columns[column].name}\r\n            {renderSortArrow(selectedSort, columns[column].path)}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n  const renderContent = (item, column) => {\r\n    if (columns[column].component) {\r\n      const component = columns[column].component;\r\n      if (typeof component === 'function') {\r\n        return component(item);\r\n      }\r\n      return component;\r\n    }\r\n    return _.get(item, columns[column].path);\r\n  };\r\n\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr key={item._id}>\r\n          {Object.keys(columns).map((column) => (\r\n            <td key={column}>{renderContent(item, column)}</td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nTableBody.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      {children || (\r\n        <>\r\n          <TableHeader {...{ onSort, selectedSort, columns }} />\r\n          <TableBody {...{ columns, data }} />\r\n        </>\r\n      )}\r\n    </table>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  onSort: PropTypes.func,\r\n  selectedSort: PropTypes.object,\r\n  columns: PropTypes.object,\r\n  data: PropTypes.array,\r\n  children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookMark = ({ status, onClick }) => {\r\n  let classes = 'bi bi-bookmark';\r\n  classes = status ? 'bi bi-bookmark-fill' : classes;\r\n\r\n  return (\r\n    <button className=\"btn btn-primary\" onClick={onClick}>\r\n      <i className={classes}></i>\r\n    </button>\r\n  );\r\n};\r\nBookMark.propTypes = {\r\n  id: PropTypes.string,\r\n  status: PropTypes.bool,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default BookMark;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Qualitie = ({ name, color }) => {\r\n  const classes = 'badge m-1 bg-';\r\n  return <span className={classes + color}>{name}</span>;\r\n};\r\n\r\nQualitie.propTypes = {\r\n  name: PropTypes.string,\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default Qualitie;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Qualitie from './qualitie';\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n  return (\r\n    <>\r\n      {qualities.map((item) => (\r\n        <Qualitie key={item._id} {...item} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nQualitiesList.propTypes = {\r\n  qualities: PropTypes.array.isRequired\r\n};\r\n\r\nexport default QualitiesList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from './table';\r\nimport BookMark from './bookmark';\r\nimport QualitiesList from './qualitiesList';\r\n\r\nconst UserTable = ({ users, onSort, selectedSort, onToggleBookMark, onDelete }) => {\r\n  const columns = {\r\n    name: {\r\n      path: 'name',\r\n      name: 'Имя',\r\n      component: (user) => <Link to={`users/${user._id}`}>{user.name}</Link>\r\n    },\r\n    qualities: { name: 'Качества', component: (user) => <QualitiesList qualities={user.qualities} /> },\r\n    professions: { path: 'profession.name', name: 'Профессия' },\r\n    completedMeetings: { path: 'completedMeetings', name: 'Встретился, раз' },\r\n    rate: { path: 'rate', name: 'Оценка' },\r\n    bookmark: {\r\n      path: 'bookmark',\r\n      name: 'Избранное',\r\n      component: (user) => <BookMark onClick={() => onToggleBookMark(user._id)} status={user.bookmark} />\r\n    },\r\n    delete: {\r\n      component: (user) => (\r\n        <button className=\"btn btn-danger\" onClick={() => onDelete(user._id)}>\r\n          Delete\r\n        </button>\r\n      )\r\n    }\r\n  };\r\n\r\n  return <Table onSort={onSort} selectedSort={selectedSort} columns={columns} data={users} />;\r\n};\r\n\r\nUserTable.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  onToggleBookMark: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import React from 'react';\r\n\r\nconst searchStatus = ({ length }) => {\r\n  let text = `${length} человек тусанет с тобой сегодня`;\r\n  let className = 'badge bg-primary';\r\n\r\n  if (length <= 4 && length > 1) {\r\n    text = `${length} человека тусанут с тобой сегодня`;\r\n  }\r\n  if (length === 0) {\r\n    text = 'Никто с тобой не тусанет';\r\n    className = 'badge bg-danger';\r\n  }\r\n\r\n  return (\r\n    <h2>\r\n      <span className={className}>{text}</span>\r\n    </h2>\r\n  );\r\n};\r\n\r\nexport default searchStatus;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = ({ onPageChange, itemsCount, pageSize, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n  const pages = _.range(1, pageCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li className={'page-item ' + (page === currentPage ? 'active' : '')} key={page}>\r\n            <a className=\"page-link\" role=\"button\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nPagination.propTypes = {\r\n  onPageChange: PropTypes.func.isRequired,\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListGroup = ({ items, valueProperty, contentProperty, onItemSelect, selectedItem }) => {\r\n  if (!Array.isArray(items)) {\r\n    return (\r\n      <ul className=\"list-group\">\r\n        {Object.keys(items).map((item) => (\r\n          <li\r\n            key={items[item][valueProperty]}\r\n            role=\"button\"\r\n            className={'list-group-item' + (items[item] === selectedItem ? ' active' : '')}\r\n            onClick={() => onItemSelect(items[item])}>\r\n            {items[item][contentProperty]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          role=\"button\"\r\n          className={'list-group-item' + (item === selectedItem ? ' active' : '')}\r\n          onClick={() => onItemSelect(item)}>\r\n          {item[contentProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  valueProperty: '_id',\r\n  contentProperty: 'name'\r\n};\r\n\r\nListGroup.propTypes = {\r\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  valueProperty: PropTypes.string.isRequired,\r\n  contentProperty: PropTypes.string.isRequired,\r\n  onItemSelect: PropTypes.func,\r\n  selectedItem: PropTypes.object\r\n};\r\n\r\nexport default ListGroup;\r\n","export const professionsObject = {\r\n  doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\r\n  waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\r\n  physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\r\n  engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\r\n  actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\r\n  cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\r\n};\r\nexport const professions = [\r\n  { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\r\n  { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\r\n  { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\r\n  { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\r\n  { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\r\n  { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\r\n];\r\nconst fetchAll = () =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(() => {\r\n      resolve(professions);\r\n    }, 2000);\r\n  });\r\n\r\nexport default {\r\n  fetchAll\r\n};\r\n","import { professionsObject as professions } from './professions.api';\r\nconst qualities = {\r\n  tedious: {\r\n    _id: '67rdca3eeb7f6fgeed471198',\r\n    name: 'Нудила',\r\n    color: 'primary'\r\n  },\r\n  strange: {\r\n    _id: '67rdca3eeb7f6fgeed471100',\r\n    name: 'Странный',\r\n    color: 'secondary'\r\n  },\r\n  buller: {\r\n    _id: '67rdca3eeb7f6fgeed4711012',\r\n    name: 'Троль',\r\n    color: 'success'\r\n  },\r\n  alcoholic: {\r\n    _id: '67rdca3eeb7f6fgeed471101',\r\n    name: 'Алкоголик',\r\n    color: 'danger'\r\n  },\r\n  handsome: {\r\n    _id: '67rdca3eeb7f6fgeed471102',\r\n    name: 'Красавчик',\r\n    color: 'info'\r\n  },\r\n  uncertain: {\r\n    _id: '67rdca3eeb7f6fgeed471102',\r\n    name: 'Неуверенный',\r\n    color: 'dark'\r\n  }\r\n};\r\n\r\nconst users = [\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471815',\r\n    name: 'Джон Дориан',\r\n    profession: professions.doctor,\r\n    qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\r\n    completedMeetings: 36,\r\n    rate: 2.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471816',\r\n    name: 'Кокс',\r\n    profession: professions.doctor,\r\n    qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\r\n    completedMeetings: 15,\r\n    rate: 2.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471817',\r\n    name: 'Боб Келсо',\r\n    profession: professions.doctor,\r\n    qualities: [qualities.buller],\r\n    completedMeetings: 247,\r\n    rate: 3.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471818',\r\n    name: 'Рэйчел Грин',\r\n    profession: professions.waiter,\r\n    qualities: [qualities.uncertain],\r\n    completedMeetings: 148,\r\n    rate: 3.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471819',\r\n    name: 'Шелдон Купер',\r\n    profession: professions.physics,\r\n    qualities: [qualities.strange, qualities.tedious],\r\n    completedMeetings: 37,\r\n    rate: 4.6,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471820',\r\n    name: 'Леонард Хофстедтер',\r\n    profession: professions.physics,\r\n    qualities: [qualities.strange, qualities.uncertain],\r\n    completedMeetings: 147,\r\n    rate: 3.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471821',\r\n    name: 'Говард Воловиц',\r\n    profession: professions.engineer,\r\n    qualities: [qualities.strange, qualities.tedious],\r\n    completedMeetings: 72,\r\n    rate: 3.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471822',\r\n    name: 'Никола Тесла',\r\n    profession: professions.engineer,\r\n    qualities: [qualities.handsome],\r\n    completedMeetings: 72,\r\n    rate: 5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471823',\r\n    name: 'Моника Геллер',\r\n    profession: professions.cook,\r\n    qualities: [qualities.strange, qualities.uncertain],\r\n    completedMeetings: 17,\r\n    rate: 4.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471824',\r\n    name: 'Рататуй',\r\n    profession: professions.cook,\r\n    qualities: [qualities.handsome, qualities.buller],\r\n    completedMeetings: 17,\r\n    rate: 4.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed47181f',\r\n    name: 'Джоуи Триббиани',\r\n    profession: professions.actor,\r\n    qualities: [qualities.uncertain, qualities.strange],\r\n    completedMeetings: 434,\r\n    rate: 3.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed47181r',\r\n    name: 'Брэд Питт',\r\n    profession: professions.actor,\r\n    qualities: [qualities.handsome],\r\n    completedMeetings: 434,\r\n    rate: 5,\r\n    bookmark: false\r\n  }\r\n];\r\n\r\nconst fetchAll = () =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(() => {\r\n      resolve(users);\r\n    }, 2000);\r\n  });\r\n\r\nconst getById = (id) =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(() => {\r\n      resolve(users.find((user) => user._id === id));\r\n    }, 2000);\r\n  });\r\n\r\nexport default {\r\n  fetchAll,\r\n  getById\r\n};\r\n","import users from './fake.api/user.api';\r\nimport professions from './fake.api/professions.api';\r\nconst API = {\r\n  users,\r\n  professions\r\n};\r\nexport default API;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from './textField';\r\n\r\nconst SearchBar = ({ value, onSearch }) => {\r\n  return (\r\n    <>\r\n      <TextField\r\n        name=\"search\"\r\n        placeholder=\"Поиск...\"\r\n        type=\"search\"\r\n        value={value}\r\n        onChange={onSearch}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSearch: PropTypes.func,\r\n  value: PropTypes.string\r\n};\r\n\r\nexport default SearchBar;\r\n","/* eslint-disable indent */\r\nimport React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { paginate } from '../utils/paginate';\r\nimport UsersTable from '../components/usersTable';\r\nimport SearchStatus from '../components/searchStatus';\r\nimport Pagination from '../components/pagination';\r\nimport ListGroup from '../components/listGroup';\r\nimport api from '../api';\r\nimport _ from 'lodash';\r\nimport SearchBar from './searchBar';\r\nimport searchBy from '../utils/search';\r\n\r\nconst UsersList = ({ users, onDelete, onToggleBookMark }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [professions, setProfessions] = useState();\r\n  const [selectedProf, setSelectedProf] = useState();\r\n  const [sortBy, setSortBy] = useState({ path: 'name', order: 'asc' });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const pageSize = 8;\r\n  useEffect(() => {\r\n    if (!professions) {\r\n      api.professions.fetchAll().then((data) => setProfessions(data));\r\n    }\r\n  }, [professions]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedProf]);\r\n\r\n  const handleProfessionSelect = (item) => {\r\n    setSearchQuery('');\r\n    setSelectedProf(item);\r\n  };\r\n\r\n  const handlePageChange = (pageIndex) => {\r\n    setCurrentPage(pageIndex);\r\n  };\r\n\r\n  const handleSort = (item) => {\r\n    setSortBy(item);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setSelectedProf();\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setSelectedProf();\r\n    setSearchQuery('');\r\n  };\r\n\r\n  if (users) {\r\n    const filteredUsers = searchQuery\r\n      ? searchBy(users, searchQuery, { searchBy: 'name' })\r\n      : selectedProf\r\n      ? users.filter((user) => JSON.stringify(user.profession) === JSON.stringify(selectedProf))\r\n      : users;\r\n\r\n    const count = filteredUsers.length;\r\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\r\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"d-flex\">\r\n        {professions && (\r\n          <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n            <ListGroup\r\n              items={professions}\r\n              onItemSelect={handleProfessionSelect}\r\n              selectedItem={selectedProf}\r\n            />\r\n            <button className=\"btn btn-secondary mt-2\" onClick={clearFilter}>\r\n              Очистить\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"d-flex flex-column\">\r\n          <SearchStatus length={count} />\r\n          <SearchBar data={users} value={searchQuery} onSearch={handleSearch} />\r\n          {count > 0 && (\r\n            <UsersTable\r\n              users={usersCrop}\r\n              onSort={handleSort}\r\n              selectedSort={sortBy}\r\n              onToggleBookMark={onToggleBookMark}\r\n              onDelete={onDelete}\r\n            />\r\n          )}\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Pagination\r\n              itemsCount={count}\r\n              pageSize={pageSize}\r\n              onPageChange={handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <h1 className=\"d-flex justify-content-center align-items-center\">Loading...</h1>;\r\n};\r\n\r\nUsersList.propTypes = {\r\n  users: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n  onToggleBookMark: PropTypes.func\r\n};\r\nexport default UsersList;\r\n","export default function searchBy(data, query, config = { searchBy: 'name' }) {\r\n  return data.filter((el) => el[config.searchBy].toLowerCase().includes(query.toLowerCase()));\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport QualitiesList from './qualitiesList';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst User = ({ name, qualities, profession, completedMeetings, rate }) => {\r\n  const history = useHistory();\r\n\r\n  const handleSave = () => {\r\n    history.replace('/users');\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column m-3\">\r\n      <h1 className=\"mb-3\">{name}</h1>\r\n      <h2>{`Профессия: ${profession.name}`}</h2>\r\n      <ul>\r\n        <QualitiesList qualities={qualities} />\r\n      </ul>\r\n      <span>{`completedMeetings: ${completedMeetings}`}</span>\r\n      <h3 className=\"my-3\">{`Rate: ${rate}/5`}</h3>\r\n      <div>\r\n        <button className=\"btn btn-success\" onClick={() => handleSave()}>\r\n          Все пользователи\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUser.propTypes = {\r\n  name: PropTypes.string,\r\n  qualities: PropTypes.array,\r\n  profession: PropTypes.object,\r\n  completedMeetings: PropTypes.number,\r\n  rate: PropTypes.number,\r\n  _id: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n  onToggleBookMark: PropTypes.func,\r\n  status: PropTypes.bool\r\n};\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport API from '../api';\r\nimport User from '../components/user';\r\n\r\nconst UserPage = ({ userId }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  useEffect(() => {\r\n    if (!currentUser) {\r\n      API.users.getById(userId).then((data) => setCurrentUser(data));\r\n    }\r\n  }, [currentUser]);\r\n\r\n  if (currentUser) {\r\n    return <User {...currentUser} />;\r\n  }\r\n  return <h2>Loading...</h2>;\r\n};\r\n\r\nUserPage.propTypes = {\r\n  userId: PropTypes.string\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport UsersList from '../components/usersList';\r\nimport UserPage from '../components/userPage';\r\nimport api from '../api';\r\n\r\nconst Users = () => {\r\n  const params = useParams();\r\n  const { userId } = params;\r\n\r\n  const [users, setUsers] = useState();\r\n  useEffect(() => {\r\n    api.users.fetchAll().then((data) => setUsers(data));\r\n  }, []);\r\n\r\n  const handleDelete = (userId) => {\r\n    return setUsers(users.filter((user) => user._id !== userId));\r\n  };\r\n\r\n  const handleToggleBookMark = (userId) => {\r\n    setUsers(\r\n      users.filter((user) => {\r\n        if (user._id === userId) {\r\n          user.bookmark = !user.bookmark;\r\n          return user;\r\n        }\r\n        return user;\r\n      })\r\n    );\r\n  };\r\n  // eslint-disable-next-line multiline-ternary\r\n  return userId ? (\r\n    <UserPage userId={userId} />\r\n  ) : (\r\n    <UsersList users={users} onDelete={handleDelete} onToggleBookMark={handleToggleBookMark} />\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\n\r\nconst Main = () => {\r\n  return <h1>Main Page</h1>;\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <ul className=\"nav nav-tabs m-3\">\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/\" className=\"nav-link\">\r\n          Main\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/login\" className=\"nav-link\">\r\n          Login\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/users\" className=\"nav-link\">\r\n          Users\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\n\r\nimport Login from './layouts/login';\r\nimport Users from './layouts/users';\r\nimport Main from './layouts/main';\r\nimport NavBar from './components/navBar';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/users/:userId?\" component={Users} />\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n      ;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './app/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}