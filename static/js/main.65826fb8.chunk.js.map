{"version":3,"sources":["app/components/common/form/textField.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/utils/validator.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/components/common/listGroup.jsx","app/components/common/pagination.jsx","app/components/ui/searchStatus.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/common/bookmark.jsx","app/components/ui/qualities/qualitiy.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/usersTable.jsx","app/components/common/searchBar.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/search.js","app/utils/paginate.js","app/components/ui/cards/meetingsCard.jsx","app/components/ui/cards/userCard.jsx","app/components/ui/cards/qualitiesCard.jsx","app/components/common/form/textAreaField.jsx","app/components/ui/commentForm.jsx","app/utils/formatDate.js","app/utils/declOfNum.js","app/components/ui/comments/comment.jsx","app/components/ui/comments/commentsList.jsx","app/components/ui/userCommentsContainer.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/page/userEditPage/userEditPage.jsx","app/layouts/users.jsx","app/layouts/main.jsx","app/components/ui/navBar.jsx","app/App.js","index.js"],"names":["TextField","label","type","placeholder","name","value","onChange","error","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","CheckBoxField","children","checked","LoginForm","email","password","stayOn","data","setData","errors","setErrors","validateScheme","yup","shape","required","matches","validate","then","catch","err","path","message","Object","keys","length","isValid","useEffect","handleChange","onSubmit","e","preventDefault","console","log","disabled","validator","config","validateMethod","statusValidate","trim","test","fieldName","professionsObject","doctor","_id","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","find","user","update","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","SelectField","defaultOption","options","optionsArray","Array","isArray","map","optionName","defaultValue","option","RadioField","MultiSelectField","closeMenuOnSelect","isMulti","classNamePrefix","RegisterForm","license","setProfessions","setQualities","api","validatorConfig","isRequired","isEmail","isCapitalSymbol","isContainDigit","min","href","Login","useParams","formType","setFormType","toggleFormType","role","ListGroup","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","Pagination","onPageChange","itemsCount","pageSize","currentPage","pageCount","ceil","pages","_","range","page","searchStatus","text","TableHeader","onSort","selectedSort","columns","renderSortArrow","currentPath","order","column","undefined","scope","TableBody","renderContent","component","get","Table","BookMark","status","classes","Quality","Qualities","UserTable","onToggleBookMark","onDelete","to","delete","SearchBar","onSearch","UsersListPage","setUsers","setCurrentPage","selectedProf","setSelectedProf","sortBy","setSortBy","searchQuery","setSearchQuery","filteredUsers","query","searchBy","el","toLowerCase","includes","count","usersCrop","pageNumber","startIndex","slice","take","paginate","orderBy","event","pageIndex","MeetingsCard","UserCard","style","zIndex","src","substring","width","QualitiesCard","TextAreaField","rows","CommentForm","onAdd","initialState","formatDate","Number","currentDateTime","postCreatedTime","diffTime","abs","year","getFullYear","month","getMonth","day","getDate","hours","getHours","getMinutes","months","getValidTime","oneMinutesAgo","thirtyMinutesAgo","lessOneDay","lessCurrentYear","checkLeapYear","minutes","floor","n","words","n1","declOfNum","Comment","comment","setUser","alt","height","CommentsList","UserCommentsContainer","setComments","sort","a","b","UserPage","history","useHistory","UserEditPage","handleGoBack","goBack","values","quality","Users","params","edit","Main","NavBar","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65826fb8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextField = ({ label, type, placeholder, name, value, onChange, error }) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className=\"input-group has-validation\">\r\n        <input\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n          type={showPassword ? 'text' : type}\r\n          className={getInputClasses()}\r\n        />\r\n        {type === 'password' && (\r\n          <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={toggleShowPassword}>\r\n            <i className={`bi bi-eye${showPassword ? '-slash' : ''}`}></i>\r\n          </button>\r\n        )}\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n  const handleChange = () => {\r\n    onChange({ name: name, value: !value });\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-check-input' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-check mb-4\">\r\n      <input\r\n        className={getInputClasses()}\r\n        type=\"checkbox\"\r\n        value=\"\"\r\n        id={name}\r\n        onChange={handleChange}\r\n        checked={value}\r\n      />\r\n      <label className=\"form-check-label\" htmlFor={name}>\r\n        {children}\r\n      </label>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckBoxField.propTypes = {\r\n  name: PropTypes.string,\r\n  value: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useState, useEffect } from 'react';\r\n// import { validator } from '../../utils/validator';\r\nimport TextField from '../common/form/textField';\r\nimport CheckBoxField from '../common/form/checkBoxField';\r\nimport * as yup from 'yup';\r\n\r\nconst LoginForm = () => {\r\n  const [data, setData] = useState({ email: '', password: '', stayOn: false });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateScheme = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('пароль обязателен для заполнения')\r\n      .matches(/^(?=.*[A-Z])/, 'Пароль должен содержать хотя бы одну заглавную букву')\r\n      .matches(/(?=.*[0-9])/, 'Пароль должен содержать хотя бы одно число')\r\n      .matches(/(?=.*[!@#$%^&*])/, 'Пароль должен содержать один из специальных символов !@#$%^&* ')\r\n      .matches(/(?=.{8})/, 'Пароль должен состоять минимум из 8 символов'),\r\n    email: yup\r\n      .string()\r\n      .required('Электронная почта обязательна для заполнения')\r\n      .email('email введен некорректно')\r\n  });\r\n\r\n  const validate = () => {\r\n    // const errors = validator(data, validatorConfig);\r\n    validateScheme\r\n      .validate(data)\r\n      .then(() => setErrors({}))\r\n      .catch((err) => setErrors({ [err.path]: err.message }));\r\n    // setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  // const validatorConfig = {\r\n  //   email: {\r\n  //     isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n  //     isEmail: {\r\n  //       message: 'email введен некорректно'\r\n  //     }\r\n  //   },\r\n  //   password: {\r\n  //     isRequired: { message: 'пароль обязателен для заполнения' },\r\n  //     isCapitalSymbol: {\r\n  //       message: 'Пароль должен содержать хотя бы одну заглавную букву'\r\n  //     },\r\n  //     isContainDigit: {\r\n  //       message: 'Пароль должен содержать хотя бы одно число'\r\n  //     },\r\n  //     min: {\r\n  //       message: 'Пароль должен состоять минимум из 8 символов',\r\n  //       value: 8\r\n  //     }\r\n  //   }\r\n  // };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"Введите ваш e-mail\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Введите пароль\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n\r\n      <CheckBoxField name=\"stayOn\" value={data.stayOn} onChange={handleChange}>\r\n        Оставаться в системе\r\n      </CheckBoxField>\r\n\r\n      <button className=\"btn btn-primary w-100 mx-auto\" type=\"submit\" disabled={!isValid}>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","export function validator(data, config) {\r\n  const errors = {};\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate;\r\n\r\n    switch (validateMethod) {\r\n      case 'isRequired': {\r\n        if (typeof data === 'boolean') {\r\n          statusValidate = !data;\r\n        } else {\r\n          statusValidate = data.trim() === '';\r\n        }\r\n        break;\r\n      }\r\n      case 'isEmail':\r\n        {\r\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n          statusValidate = !emailRegExp.test(data);\r\n        }\r\n        break;\r\n      case 'isCapitalSymbol': {\r\n        const capitalRegExp = /[A-Z]+/g;\r\n        statusValidate = !capitalRegExp.test(data);\r\n        break;\r\n      }\r\n      case 'isContainDigit': {\r\n        const digitRegExp = /\\d+/;\r\n        statusValidate = !digitRegExp.test(data);\r\n        break;\r\n      }\r\n      case 'min': {\r\n        statusValidate = data.length < config.value;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    if (statusValidate) return config.message;\r\n  }\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(validateMethod, data[fieldName], config[fieldName][validateMethod]);\r\n      if (error && !errors[fieldName]) {\r\n        errors[fieldName] = error;\r\n      }\r\n    }\r\n  }\r\n  return errors;\r\n}\r\n","export const professionsObject = {\n  doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n};\nexport const professions = [\n  { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n];\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(professionsObject);\n    }, 2000);\n  });\n\nexport default {\n  fetchAll\n};\n","import { professionsObject as professions } from './professions.api';\nconst qualities = {\n  tedious: {\n    _id: '67rdca3eeb7f6fgeed471198',\n    name: 'Нудила',\n    color: 'primary'\n  },\n  strange: {\n    _id: '67rdca3eeb7f6fgeed471100',\n    name: 'Странный',\n    color: 'secondary'\n  },\n  buller: {\n    _id: '67rdca3eeb7f6fgeed4711012',\n    name: 'Троль',\n    color: 'success'\n  },\n  alcoholic: {\n    _id: '67rdca3eeb7f6fgeed471101',\n    name: 'Алкоголик',\n    color: 'danger'\n  },\n  handsome: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Красавчик',\n    color: 'info'\n  },\n  uncertain: {\n    _id: '67rdca3eeb7f6fgeed471103',\n    name: 'Неуверенный',\n    color: 'dark'\n  }\n};\n\nconst users = [\n  {\n    _id: '67rdca3eeb7f6fgeed471815',\n    name: 'Джон Дориан',\n    email: 'johndorian@fastcompany.ru',\n    sex: 'male',\n    profession: professions.doctor,\n    qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n    completedMeetings: 36,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471816',\n    name: 'Кокс',\n    email: 'koks@fastcompany.ru',\n    sex: 'male',\n    profession: professions.doctor,\n    qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n    completedMeetings: 15,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471817',\n    name: 'Боб Келсо',\n    email: 'bobkelso@fastcompany.ru',\n    sex: 'male',\n    profession: professions.doctor,\n    qualities: [qualities.buller],\n    completedMeetings: 247,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471818',\n    name: 'Рэйчел Грин',\n    email: 'rachelgreene@fastcompany.ru',\n    sex: 'female',\n    profession: professions.waiter,\n    qualities: [qualities.uncertain],\n    completedMeetings: 148,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471819',\n    name: 'Шелдон Купер',\n    email: 'sheldoncooper@fastcompany.ru',\n    sex: 'male',\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 37,\n    rate: 4.6,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471820',\n    name: 'Леонард Хофстедтер',\n    email: 'leonardhofstedter@fastcompany.ru',\n    sex: 'male',\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 147,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471821',\n    name: 'Говард Воловиц',\n    email: 'howardwolowitz@fastcompany.ru',\n    sex: 'male',\n    profession: professions.engineer,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 72,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471822',\n    name: 'Никола Тесла',\n    email: 'nikolatesla@fastcompany.ru',\n    sex: 'male',\n    profession: professions.engineer,\n    qualities: [qualities.handsome],\n    completedMeetings: 72,\n    rate: 5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471823',\n    name: 'Моника Геллер',\n    email: 'monicageller@fastcompany.ru',\n    sex: 'female',\n    profession: professions.cook,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471824',\n    name: 'Рататуй',\n    email: 'ratatouille@fastcompany.ru',\n    sex: 'male',\n    profession: professions.cook,\n    qualities: [qualities.handsome, qualities.buller],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed47181f',\n    name: 'Джоуи Триббиани',\n    email: 'joeytribbiani@fastcompany.ru',\n    sex: 'male',\n    profession: professions.actor,\n    qualities: [qualities.uncertain, qualities.strange],\n    completedMeetings: 434,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed47181r',\n    name: 'Брэд Питт',\n    email: 'bradpitt@fastcompany.ru',\n    sex: 'male',\n    profession: professions.actor,\n    qualities: [qualities.handsome],\n    completedMeetings: 434,\n    rate: 5,\n    bookmark: false\n  }\n];\nif (!localStorage.getItem('users')) {\n  localStorage.setItem('users', JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem('users')));\n    }, 2000);\n  });\nconst update = (id, data) =>\n  new Promise((resolve) => {\n    const users = JSON.parse(localStorage.getItem('users'));\n    const userIndex = users.findIndex((u) => u._id === id);\n    users[userIndex] = { ...users[userIndex], ...data };\n    localStorage.setItem('users', JSON.stringify(users));\n    resolve(users[userIndex]);\n  });\n\nconst getById = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem('users')).find((user) => user._id === id));\n    }, 1000);\n  });\nexport default {\n  fetchAll,\n  getById,\n  update\n};\n","const qualities = {\n  tedious: {\n    _id: '67rdca3eeb7f6fgeed471198',\n    name: 'Нудила',\n    color: 'primary'\n  },\n  strange: {\n    _id: '67rdca3eeb7f6fgeed471100',\n    name: 'Странный',\n    color: 'secondary'\n  },\n  buller: {\n    _id: '67rdca3eeb7f6fgeed4711012',\n    name: 'Троль',\n    color: 'success'\n  },\n  alcoholic: {\n    _id: '67rdca3eeb7f6fgeed471101',\n    name: 'Алкоголик',\n    color: 'danger'\n  },\n  handsome: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Красавчик',\n    color: 'info'\n  },\n  uncertain: {\n    _id: '67rdca3eeb7f6fgeed471103',\n    name: 'Неуверенный',\n    color: 'dark'\n  }\n};\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(qualities);\n    }, 2000);\n  });\n\nexport default {\n  fetchAll\n};\n","const comments = [\n  {\n    _id: '67rdca3eeb7f6fg',\n    userId: '67rdca3eeb7f6fgeed471815',\n    pageId: '67rdca3eeb7f6fgeed471815',\n    content: 'Lorem ipsum dolor',\n    created_at: '1633576399367'\n  },\n  {\n    _id: '67rdca3eeb7f6fgdasd',\n    pageId: '67rdca3eeb7f6fgeed471815',\n    userId: '67rdca3eeb7f6fgeed471815',\n    content: 'Lorem ipsum dolor and etc',\n    created_at: '1633573058520'\n  },\n  {\n    _id: '67rdca3eeb7f6fgdaasd',\n    pageId: '67rdca3eeb7f6fgeed471817',\n    userId: '67rdca3eeb7f6fgeed471815',\n    content: 'Lorem ipsum dolor and etc',\n    created_at: '1633573058520'\n  }\n];\nif (!localStorage.getItem('comments')) {\n  localStorage.setItem('comments', JSON.stringify(comments));\n}\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(comments);\n    }, 200);\n  });\n\nconst fetchCommentsForUser = (userId) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem('comments')).filter((c) => c.pageId === userId));\n    }, 200);\n  });\nconst add = (data) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      const comments = JSON.parse(localStorage.getItem('comments'));\n      const newComment = {\n        ...data,\n        created_at: Date.now(),\n        _id: Math.random().toString(36).substr(2, 9)\n      };\n      comments.push(newComment);\n      localStorage.setItem('comments', JSON.stringify(comments));\n      resolve(newComment);\n    }, 200);\n  });\n\nconst remove = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      const comments = JSON.parse(localStorage.getItem('comments'));\n      const newComments = comments.filter((x) => x._id !== id);\n      localStorage.setItem('comments', JSON.stringify(newComments));\n      resolve(id);\n    }, 200);\n  });\nexport default {\n  fetchAll,\n  fetchCommentsForUser,\n  add,\n  remove\n};\n","import users from './fake.api/user.api';\nimport professions from './fake.api/professions.api';\nimport qualities from './fake.api/qualities.api';\nimport comments from './fake.api/comments.api';\nconst API = {\n  users,\n  professions,\n  qualities,\n  comments\n};\nexport default API;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SelectField = ({ label, value, name, onChange, defaultOption, options, error }) => {\r\n  const getInputClasses = () => {\r\n    return 'form-select' + (error ? ' is-invalid' : '');\r\n  };\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          name: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options;\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <select\r\n        className={getInputClasses()}\r\n        id=\"validationCustom04\"\r\n        value={value}\r\n        name={name}\r\n        onChange={handleChange}>\r\n        <option disabled value=\"\" key={defaultOption} defaultValue={defaultOption}>\r\n          {defaultOption}\r\n        </option>\r\n        {optionsArray &&\r\n          optionsArray.map((option) => (\r\n            <option\r\n              key={option.value || option._id}\r\n              value={option.value || option._id}\r\n              name={option.name}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  defaultOption: PropTypes.string,\r\n  value: PropTypes.string,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default SelectField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label\">{label}</label>\r\n      <div>\r\n        {options.map((option) => (\r\n          <div key={option.name + '_' + option.value} className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name={name}\r\n              id={option.name + '_' + option.value}\r\n              checked={option.value === value}\r\n              value={option.value}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={option.name + '_' + option.value}>\r\n              {option.name}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadioField.propTypes = {\r\n  options: PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string\r\n};\r\n\r\nexport default RadioField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\n\r\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          label: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options;\r\n\r\n  const handleChange = (value) => {\r\n    onChange({ name: name, value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label\">{label}</label>\r\n      <Select\r\n        closeMenuOnSelect={false}\r\n        isMulti\r\n        defaultValue={defaultValue}\r\n        options={optionsArray}\r\n        className=\"basic-multi-select\"\r\n        classNamePrefix=\"select\"\r\n        onChange={handleChange}\r\n        name={name}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nMultiSelectField.propTypes = {\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChange: PropTypes.func,\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  defaultValue: PropTypes.array\r\n};\r\n\r\nexport default MultiSelectField;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { validator } from '../../utils/validator';\r\nimport TextField from '../common/form/textField';\r\nimport api from '../../api';\r\nimport SelectField from '../common/form/selectField';\r\nimport RadioField from '../common/form/radioField';\r\nimport MultiSelectField from '../common/form/multiSelectField';\r\nimport CheckBoxField from '../common/form/checkBoxField';\r\n\r\nconst RegisterForm = () => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    profession: '',\r\n    sex: 'male',\r\n    qualities: [],\r\n    license: false\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [professions, setProfessions] = useState([]);\r\n  const [qualities, setQualities] = useState({});\r\n\r\n  useEffect(() => {\r\n    api.professions.fetchAll().then((data) => setProfessions(data));\r\n    api.qualities.fetchAll().then((data) => setQualities(data));\r\n  }, []);\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n      isEmail: {\r\n        message: 'email введен некорректно'\r\n      }\r\n    },\r\n    password: {\r\n      isRequired: { message: 'пароль обязателен для заполнения' },\r\n      isCapitalSymbol: {\r\n        message: 'Пароль должен содержать хотя бы одну заглавную букву'\r\n      },\r\n      isContainDigit: {\r\n        message: 'Пароль должен содержать хотя бы одно число'\r\n      },\r\n      min: {\r\n        message: 'Пароль должен состоять минимум из 8 символов',\r\n        value: 8\r\n      }\r\n    },\r\n    profession: {\r\n      isRequired: { message: 'Обязательно выберите вашу профессию' }\r\n    },\r\n    license: {\r\n      isRequired: {\r\n        message: 'Вы не можете использовать наш сервис без подтверждения лицензионного соглашения'\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"Введите ваш e-mail\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Введите пароль\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n      <SelectField\r\n        label=\"Выберите вашу профессию\"\r\n        name=\"profession\"\r\n        value={data.profession}\r\n        error={errors.profession}\r\n        defaultOption=\"Choose...\"\r\n        options={professions}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <RadioField\r\n        options={[\r\n          { name: 'Male', value: 'male' },\r\n          { name: 'Female', value: 'female' },\r\n          { name: 'Other', value: 'other' }\r\n        ]}\r\n        value={data.sex}\r\n        name=\"sex\"\r\n        onChange={handleChange}\r\n        label=\"Выберите ваш пол\"\r\n      />\r\n      <MultiSelectField\r\n        options={qualities}\r\n        onChange={handleChange}\r\n        name=\"qualities\"\r\n        label=\"Выберите ваши качества\"\r\n        defaultValue={data.qualities}\r\n      />\r\n      <CheckBoxField\r\n        name=\"license\"\r\n        value={data.license}\r\n        onChange={handleChange}\r\n        error={errors.license}>\r\n        Подтвердить <a href=\"#\">лицензионное соглашение</a>\r\n      </CheckBoxField>\r\n\r\n      <button className=\"btn btn-primary w-100 mx-auto\" type=\"submit\" disabled={!isValid}>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport LoginForm from '../components/ui/loginForm';\r\nimport RegisterForm from '../components/ui/registerForm';\r\n\r\nconst Login = () => {\r\n  const { type } = useParams();\r\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login');\r\n\r\n  const toggleFormType = () => {\r\n    setFormType((prevState) => (prevState === 'register' ? 'login' : 'register'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          {formType === 'register' ? (\r\n            <>\r\n              <h3 className=\"mb-4\">Register</h3>\r\n              <RegisterForm />\r\n              <p>\r\n                Already have account?\r\n                <a role=\"button\" onClick={toggleFormType}>\r\n                  Sign In\r\n                </a>\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h3 className=\"mb-4\">Login</h3>\r\n              <LoginForm />\r\n              <p>\r\n                Dont have account?\r\n                <a role=\"button\" onClick={toggleFormType}>\r\n                  Sign Up\r\n                </a>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListGroup = ({ items, valueProperty, contentProperty, onItemSelect, selectedItem }) => {\r\n  if (!Array.isArray(items)) {\r\n    return (\r\n      <ul className=\"list-group\">\r\n        {Object.keys(items).map((item) => (\r\n          <li\r\n            key={items[item][valueProperty]}\r\n            role=\"button\"\r\n            className={'list-group-item' + (items[item] === selectedItem ? ' active' : '')}\r\n            onClick={() => onItemSelect(items[item])}>\r\n            {items[item][contentProperty]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          role=\"button\"\r\n          className={'list-group-item' + (item === selectedItem ? ' active' : '')}\r\n          onClick={() => onItemSelect(item)}>\r\n          {item[contentProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  valueProperty: '_id',\r\n  contentProperty: 'name'\r\n};\r\n\r\nListGroup.propTypes = {\r\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  valueProperty: PropTypes.string.isRequired,\r\n  contentProperty: PropTypes.string.isRequired,\r\n  onItemSelect: PropTypes.func,\r\n  selectedItem: PropTypes.object\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = ({ onPageChange, itemsCount, pageSize, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n  const pages = _.range(1, pageCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li className={'page-item ' + (page === currentPage ? 'active' : '')} key={page}>\r\n            <a className=\"page-link\" role=\"button\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nPagination.propTypes = {\r\n  onPageChange: PropTypes.func.isRequired,\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\n\r\nconst searchStatus = ({ length }) => {\r\n  let text = `${length} человек тусанет с тобой сегодня`;\r\n  let className = 'badge bg-primary';\r\n\r\n  if (length <= 4 && length > 1) {\r\n    text = `${length} человека тусанут с тобой сегодня`;\r\n  }\r\n  if (length === 0) {\r\n    text = 'Никто с тобой не тусанет';\r\n    className = 'badge bg-danger';\r\n  }\r\n\r\n  return (\r\n    <h2>\r\n      <span className={className}>{text}</span>\r\n    </h2>\r\n  );\r\n};\r\n\r\nexport default searchStatus;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n  const handleSort = (item) => {\r\n    if (selectedSort.path === item) {\r\n      onSort({ ...selectedSort, order: selectedSort.order === 'asc' ? 'desc' : 'asc' });\r\n    } else {\r\n      onSort({ path: item, order: 'asc' });\r\n    }\r\n  };\r\n\r\n  const renderSortArrow = (selectedSort, currentPath) => {\r\n    if (selectedSort.path === currentPath) {\r\n      if (selectedSort.order === 'asc') {\r\n        return <i className=\"bi bi-caret-down-fill\"></i>;\r\n      } else {\r\n        return <i className=\"bi bi-caret-up-fill\"></i>;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {Object.keys(columns).map((column) => (\r\n          <th\r\n            key={column}\r\n            onClick={columns[column].path ? () => handleSort(columns[column].path) : undefined}\r\n            {...{ role: columns[column].path && 'button' }}\r\n            scope=\"col\">\r\n            {columns[column].name}\r\n            {renderSortArrow(selectedSort, columns[column].path)}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n  const renderContent = (item, column) => {\r\n    if (columns[column].component) {\r\n      const component = columns[column].component;\r\n      if (typeof component === 'function') {\r\n        return component(item);\r\n      }\r\n      return component;\r\n    }\r\n    return _.get(item, columns[column].path);\r\n  };\r\n\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr key={item._id}>\r\n          {Object.keys(columns).map((column) => (\r\n            <td key={column}>{renderContent(item, column)}</td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nTableBody.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import Table from './table';\r\nimport TableBody from './tableBody';\r\nimport TableHeader from './tableHeader';\r\nexport default Table;\r\nexport { TableBody, TableHeader };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      {children || (\r\n        <>\r\n          <TableHeader {...{ onSort, selectedSort, columns }} />\r\n          <TableBody {...{ columns, data }} />\r\n        </>\r\n      )}\r\n    </table>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  onSort: PropTypes.func,\r\n  selectedSort: PropTypes.object,\r\n  columns: PropTypes.object,\r\n  data: PropTypes.array,\r\n  children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookMark = ({ status, onClick }) => {\r\n  let classes = 'bi bi-bookmark';\r\n  classes = status ? 'bi bi-bookmark-fill' : classes;\r\n\r\n  return (\r\n    <button className=\"btn btn-primary\" onClick={onClick}>\r\n      <i className={classes}></i>\r\n    </button>\r\n  );\r\n};\r\nBookMark.propTypes = {\r\n  id: PropTypes.string,\r\n  status: PropTypes.bool,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default BookMark;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Quality = ({ name, color }) => {\r\n  const classes = 'badge m-1 bg-';\r\n  return <span className={classes + color}>{name}</span>;\r\n};\r\n\r\nQuality.propTypes = {\r\n  name: PropTypes.string,\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default Quality;\r\n","import Qualities from './qualitiesList';\r\nexport default Qualities;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Quality from './qualitiy';\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n  return (\r\n    <>\r\n      {qualities.map((item) => (\r\n        <Quality key={item._id} {...item} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nQualitiesList.propTypes = {\r\n  qualities: PropTypes.array.isRequired\r\n};\r\n\r\nexport default QualitiesList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from '../common/table';\r\nimport BookMark from '../common/bookmark';\r\nimport Qualities from './qualities';\r\n\r\nconst UserTable = ({ users, onSort, selectedSort, onToggleBookMark, onDelete }) => {\r\n  const columns = {\r\n    name: {\r\n      path: 'name',\r\n      name: 'Имя',\r\n      component: (user) => <Link to={`users/${user._id}`}>{user.name}</Link>\r\n    },\r\n    qualities: {\r\n      name: 'Качества',\r\n      component: (user) => <Qualities qualities={user.qualities} />\r\n    },\r\n    professions: { path: 'profession.name', name: 'Профессия' },\r\n    completedMeetings: { path: 'completedMeetings', name: 'Встретился, раз' },\r\n    rate: { path: 'rate', name: 'Оценка' },\r\n    bookmark: {\r\n      path: 'bookmark',\r\n      name: 'Избранное',\r\n      component: (user) => (\r\n        <BookMark onClick={() => onToggleBookMark(user._id)} status={user.bookmark} />\r\n      )\r\n    },\r\n    delete: {\r\n      component: (user) => (\r\n        <button className=\"btn btn-danger\" onClick={() => onDelete(user._id)}>\r\n          Delete\r\n        </button>\r\n      )\r\n    }\r\n  };\r\n\r\n  return <Table onSort={onSort} selectedSort={selectedSort} columns={columns} data={users} />;\r\n};\r\n\r\nUserTable.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  onToggleBookMark: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from './form/textField';\r\n\r\nconst SearchBar = ({ value, onSearch }) => {\r\n  return (\r\n    <>\r\n      <TextField\r\n        name=\"search\"\r\n        placeholder=\"Поиск...\"\r\n        type=\"search\"\r\n        value={value}\r\n        onChange={onSearch}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSearch: PropTypes.func,\r\n  value: PropTypes.string\r\n};\r\n\r\nexport default SearchBar;\r\n","import UsersListPage from './usersListPage';\r\nexport default UsersListPage;\r\n","/* eslint-disable indent */\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport api from '../../../api';\r\nimport ListGroup from '../../common/listGroup';\r\nimport Pagination from '../../common/pagination';\r\nimport SearchStatus from '../../ui/searchStatus';\r\nimport UsersTable from '../../ui/usersTable';\r\nimport { paginate } from '../../../utils/paginate';\r\nimport searchBy from '../../../utils/search';\r\nimport SearchBar from '../../common/searchBar';\r\n\r\nconst UsersListPage = () => {\r\n  const [users, setUsers] = useState();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [professions, setProfessions] = useState();\r\n  const [selectedProf, setSelectedProf] = useState();\r\n  const [sortBy, setSortBy] = useState({ path: 'name', order: 'asc' });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const pageSize = 8;\r\n\r\n  useEffect(() => {\r\n    api.users.fetchAll().then((data) => setUsers(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!professions) {\r\n      api.professions.fetchAll().then((data) => setProfessions(data));\r\n    }\r\n  }, [professions]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedProf]);\r\n\r\n  const handleDelete = (userId) => {\r\n    return setUsers(users.filter((user) => user._id !== userId));\r\n  };\r\n\r\n  const handleToggleBookMark = (userId) => {\r\n    setUsers(\r\n      users.filter((user) => {\r\n        if (user._id === userId) {\r\n          user.bookmark = !user.bookmark;\r\n          return user;\r\n        }\r\n        return user;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleProfessionSelect = (item) => {\r\n    setSearchQuery('');\r\n    setSelectedProf(item);\r\n  };\r\n\r\n  const handlePageChange = (pageIndex) => {\r\n    setCurrentPage(pageIndex);\r\n  };\r\n\r\n  const handleSort = (item) => {\r\n    setSortBy(item);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setSelectedProf();\r\n    setSearchQuery(event.value);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setSelectedProf();\r\n    setSearchQuery('');\r\n  };\r\n\r\n  if (users) {\r\n    const filteredUsers = searchQuery\r\n      ? searchBy(users, searchQuery, { searchBy: 'name' })\r\n      : selectedProf\r\n      ? users.filter((user) => JSON.stringify(user.profession) === JSON.stringify(selectedProf))\r\n      : users;\r\n\r\n    const count = filteredUsers.length;\r\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\r\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"d-flex\">\r\n        {professions && (\r\n          <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n            <ListGroup\r\n              items={professions}\r\n              onItemSelect={handleProfessionSelect}\r\n              selectedItem={selectedProf}\r\n            />\r\n            <button className=\"btn btn-secondary mt-2\" onClick={clearFilter}>\r\n              Очистить\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"d-flex flex-column\">\r\n          <SearchStatus length={count} />\r\n          <SearchBar data={users} value={searchQuery} onSearch={handleSearch} />\r\n          {count > 0 && (\r\n            <UsersTable\r\n              users={usersCrop}\r\n              onSort={handleSort}\r\n              selectedSort={sortBy}\r\n              onToggleBookMark={handleToggleBookMark}\r\n              onDelete={handleDelete}\r\n            />\r\n          )}\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Pagination\r\n              itemsCount={count}\r\n              pageSize={pageSize}\r\n              onPageChange={handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <h1 className=\"d-flex justify-content-center align-items-center\">Loading...</h1>;\r\n};\r\n\r\nUsersListPage.propTypes = {\r\n  users: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n  onToggleBookMark: PropTypes.func\r\n};\r\nexport default UsersListPage;\r\n","export default function searchBy(data, query, config = { searchBy: 'name' }) {\r\n  return data.filter((el) => el[config.searchBy].toLowerCase().includes(query.toLowerCase()));\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MeetingsCard = ({ completedMeetings }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Завершенных встреч</span>\r\n        </h5>\r\n\r\n        <h1 className=\"display-1\">{completedMeetings}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMeetingsCard.propTypes = {\r\n  completedMeetings: PropTypes.number\r\n};\r\n\r\nexport default MeetingsCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserCard = ({ name, profession, rate, onClick }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        <button\r\n          className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\r\n          style={{ zIndex: 2 }}\r\n          onClick={onClick}>\r\n          <i className=\"bi bi-gear\"></i>\r\n        </button>\r\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\r\n          <img\r\n            src={`https://avatars.dicebear.com/api/avataaars/${(Math.random() + 1)\r\n              .toString(36)\r\n              .substring(7)}.svg`}\r\n            className=\"rounded-circle\"\r\n            width=\"150\"\r\n          />\r\n          <div className=\"mt-3\">\r\n            <h4>{name}</h4>\r\n            <p className=\"text-secondary mb-1\">{profession.name}</p>\r\n            <div className=\"text-muted\">\r\n              <i className=\"bi bi-caret-down-fill text-primary\" role=\"button\"></i>\r\n              <i className=\"bi bi-caret-up text-secondary\" role=\"button\"></i>\r\n              <span className=\"ms-2\">{rate}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserCard.propTypes = {\r\n  name: PropTypes.string,\r\n  profession: PropTypes.object,\r\n  rate: PropTypes.number,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default UserCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Qualities from '../qualities';\r\n\r\nconst QualitiesCard = ({ qualities }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Качества</span>\r\n        </h5>\r\n        <p className=\"card-text\">\r\n          <Qualities qualities={qualities} />\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nQualitiesCard.propTypes = {\r\n  qualities: PropTypes.array.isRequired\r\n};\r\n\r\nexport default QualitiesCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextAreaField = ({ label, name, value, onChange, error, rows }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={name} className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <textarea\r\n        className={'form-control' + (error ? ' is-invalid' : '')}\r\n        name={name}\r\n        value={value}\r\n        id={name}\r\n        rows={rows}\r\n        onChange={handleChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nTextAreaField.defaultProps = {\r\n  rows: 3\r\n};\r\n\r\nTextAreaField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n  rows: PropTypes.number\r\n};\r\n\r\nexport default TextAreaField;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SelectField from '../common/form/selectField';\r\nimport API from '../../api';\r\nimport TextAreaField from '../common/form/textAreaField';\r\nimport { validator } from '../../utils/validator';\r\n\r\nconst CommentForm = ({ userId, onAdd }) => {\r\n  const initialState = { content: '', pageId: userId, userId: '' };\r\n  const [data, setData] = useState(initialState);\r\n  const [users, setUsers] = useState();\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    API.users.fetchAll().then((data) => setUsers(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    userId: {\r\n      isRequired: { message: 'Обязательно выберите пользователя' }\r\n    },\r\n    content: {\r\n      isRequired: { message: 'Поле \"Сообщение\" не должно быть пустым' }\r\n    }\r\n  };\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onAdd(data);\r\n    setData(initialState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-2\">\r\n      <div className=\"card-body\">\r\n        <form onSubmit={handleSubmit}>\r\n          <h2>Новый комментарий</h2>\r\n          <div className=\"mb-4\">\r\n            <SelectField\r\n              options={users}\r\n              name=\"userId\"\r\n              value={data.userId}\r\n              defaultOption={'Выберите пользователя'}\r\n              onChange={handleChange}\r\n              error={errors.userId}\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <TextAreaField\r\n              label=\"Сообщение\"\r\n              name=\"content\"\r\n              value={data.content}\r\n              onChange={handleChange}\r\n              error={errors.content}\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <button className=\"btn btn-primary\" type=\"submit\" disabled={!isValid}>\r\n              Опубликовать\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  userId: PropTypes.string.isRequired,\r\n  onAdd: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CommentForm;\r\n","import declOfNum from './declOfNum';\r\n\r\nexport default function formatDate(value) {\r\n  if (typeof value === 'string') {\r\n    value = Number(value);\r\n  }\r\n  const currentDateTime = Date.now();\r\n  const postCreatedTime = Number(value);\r\n  const diffTime = Math.abs(currentDateTime - postCreatedTime);\r\n\r\n  const year = new Date(value).getFullYear();\r\n  const month = new Date(value).getMonth();\r\n  const day = new Date(value).getDate();\r\n  const hours = new Date(value).getHours();\r\n  const min = new Date(value).getMinutes();\r\n\r\n  const months = [\r\n    'Января',\r\n    'Февраля',\r\n    'Марта',\r\n    'Апреля',\r\n    'Мая',\r\n    'Июня',\r\n    'Июля',\r\n    'Августа',\r\n    'Сентября',\r\n    'Октября',\r\n    'Ноября',\r\n    'Декабря'\r\n  ];\r\n\r\n  const checkLeapYear = (year) => {\r\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n  };\r\n\r\n  const getValidTime = (hours, min) => {\r\n    hours = hours < 10 ? `0${hours}` : hours;\r\n    min = min < 10 ? `0${min}` : min;\r\n    return `${hours}:${min}`;\r\n  };\r\n\r\n  const oneMinutesAgo = 60000;\r\n  const thirtyMinutesAgo = oneMinutesAgo * 30;\r\n  const lessOneDay = oneMinutesAgo * 60 * 24;\r\n  const lessCurrentYear = lessOneDay * (checkLeapYear(year) ? 366 : 365);\r\n\r\n  if (diffTime <= oneMinutesAgo) {\r\n    return 'только что';\r\n  } else if (diffTime <= thirtyMinutesAgo) {\r\n    const minutes = Math.floor(diffTime / 60000);\r\n    return `${minutes} ${declOfNum(minutes, ['минута', 'минуты', 'минут'])} назад`;\r\n  } else if (diffTime > thirtyMinutesAgo && diffTime <= lessOneDay) {\r\n    return `сегодня в ${getValidTime(hours, min)}`;\r\n  } else if (diffTime > lessOneDay && diffTime <= lessCurrentYear) {\r\n    return `${day} ${months[month]} в ${getValidTime(hours, min)}`;\r\n  } else if (diffTime > lessCurrentYear) {\r\n    return `${day} ${months[month]} ${year} года в ${getValidTime(hours, min)}`;\r\n  } else {\r\n    return `Этот комментарий оставило НЛО из будущего ¯\\\\_(ツ)_/¯`;\r\n  }\r\n}\r\n","export default function declOfNum(n, words) {\r\n  n = Math.abs(n) % 100;\r\n  const n1 = n % 10;\r\n  if (n > 10 && n < 20) {\r\n    return words[2];\r\n  }\r\n  if (n1 > 1 && n1 < 5) {\r\n    return words[1];\r\n  }\r\n  if (n1 === 1) {\r\n    return words[0];\r\n  }\r\n  return words[2];\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport API from '../../../api';\r\nimport formatDate from '../../../utils/formatDate';\r\n\r\nconst Comment = ({ comment, onDelete }) => {\r\n  const [user, setUser] = useState();\r\n  useEffect(() => {\r\n    API.users.getById(comment.userId).then((data) => setUser(data));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-light card-body  mb-3\">\r\n      {user ? (\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"d-flex flex-start \">\r\n              <img\r\n                src={`https://avatars.dicebear.com/api/avataaars/${(Math.random() + 1)\r\n                  .toString(36)\r\n                  .substring(7)}.svg`}\r\n                className=\"rounded-circle shadow-1-strong me-3\"\r\n                alt=\"avatar\"\r\n                width=\"65\"\r\n                height=\"65\"\r\n              />\r\n              <div className=\"flex-grow-1 flex-shrink-1\">\r\n                <div className=\"mb-4\">\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <p className=\"mb-1 \">\r\n                      {user.name} - <span className=\"small\">{formatDate(comment.created_at)}</span>\r\n                    </p>\r\n                    <button\r\n                      className=\"btn btn-sm text-primary d-flex align-items-center\"\r\n                      onClick={() => onDelete(comment._id)}>\r\n                      <i className=\"bi bi-x-lg\"></i>\r\n                    </button>\r\n                  </div>\r\n                  <p className=\"small mb-0\">{comment.content}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h2>Loading...</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.object,\r\n  onDelete: PropTypes.func\r\n};\r\n\r\nexport default Comment;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Comment from './comment';\r\n\r\nconst CommentsList = ({ comments, onDelete }) => {\r\n  return (\r\n    comments.length > 0 && (\r\n      <>\r\n        <div className=\"card mb-3\">\r\n          <div className=\"card-body \">\r\n            <h2>Комментарии</h2>\r\n            <hr />\r\n            {comments.map((comment) => (\r\n              <Comment key={comment._id} comment={comment} onDelete={onDelete} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nCommentsList.propTypes = {\r\n  comments: PropTypes.array,\r\n  onDelete: PropTypes.func\r\n};\r\n\r\nexport default CommentsList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CommentForm from './commentForm';\r\nimport CommentsList from './comments/commentsList';\r\nimport API from '../../api';\r\n\r\nconst UserCommentsContainer = ({ userId }) => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    API.comments\r\n      .fetchCommentsForUser(userId)\r\n      .then((data) => setComments(data.sort((a, b) => a.created_at - b.created_at)));\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    API.comments\r\n      .remove(id)\r\n      .then((data) =>\r\n        setComments((prevState) => prevState.filter((comment) => comment._id !== data))\r\n      );\r\n  };\r\n\r\n  const handleAddComment = (data) => {\r\n    API.comments.add(data).then((data) => setComments((prevState) => [data, ...prevState]));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CommentForm userId={userId} onAdd={handleAddComment} />\r\n      <CommentsList comments={comments} onDelete={handleDelete} />\r\n    </>\r\n  );\r\n};\r\n\r\nUserCommentsContainer.propTypes = {\r\n  userId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default UserCommentsContainer;\r\n","import UserPage from './userPage';\r\nexport default UserPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport API from '../../../api';\r\nimport { useHistory } from 'react-router';\r\nimport MeetingsCard from '../../ui/cards/meetingsCard';\r\nimport UserCard from '../../ui/cards/userCard';\r\nimport QualitiesCard from '../../ui/cards/qualitiesCard';\r\nimport UserCommentsContainer from '../../ui/userCommentsContainer';\r\n\r\nconst UserPage = ({ userId }) => {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    API.users.getById(userId).then((data) => setUser(data));\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    history.push(`/users/${userId}/edit`);\r\n  };\r\n\r\n  if (user) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row gutters-sm\">\r\n          <div className=\"col-md-4 mb-3\">\r\n            <UserCard\r\n              name={user.name}\r\n              profession={user.profession}\r\n              rate={user.rate}\r\n              onClick={handleClick}\r\n            />\r\n            <QualitiesCard qualities={user.qualities} />\r\n            <MeetingsCard completedMeetings={user.completedMeetings} />\r\n          </div>\r\n\r\n          <div className=\"col-md-8\">\r\n            <UserCommentsContainer userId={userId} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <h2>Loading...</h2>;\r\n};\r\n\r\nUserPage.propTypes = {\r\n  userId: PropTypes.string\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../../../api';\r\nimport TextField from '../../common/form/textField';\r\nimport SelectField from '../../common/form/selectField';\r\nimport RadioField from '../../common/form/radioField';\r\nimport MultiSelectField from '../../common/form/multiSelectField';\r\nimport { validator } from '../../../utils/validator';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst UserEditPage = ({ userId }) => {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState();\r\n  const [qualities, setQualities] = useState({});\r\n  const [professions, setProfessions] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    api.qualities.fetchAll().then((data) => setQualities(data));\r\n    api.professions.fetchAll().then((data) => setProfessions(data));\r\n    api.users.getById(userId).then((data) => setUser(data));\r\n  }, []);\r\n\r\n  const handleChange = (target) => {\r\n    setUser((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // valid profession for render\r\n    for (const profession in professions) {\r\n      if (professions[profession]._id === user.profession) {\r\n        user.profession = professions[profession];\r\n      }\r\n    }\r\n\r\n    // valid qualities for render\r\n    user.qualities = Object.values(qualities).filter((quality) =>\r\n      user.qualities.map((quality) => quality.value || quality._id).includes(quality._id)\r\n    );\r\n\r\n    api.users.update(userId, user);\r\n    handleGoBack();\r\n  };\r\n\r\n  const validate = () => {\r\n    const errors = validator(user, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    name: {\r\n      isRequired: { message: 'Имя обязательно для заполнения' }\r\n    },\r\n    email: {\r\n      isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n      isEmail: {\r\n        message: 'email введен некорректно'\r\n      }\r\n    },\r\n    professions: {\r\n      isRequired: { message: 'Обязательно выберите вашу профессию' }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div>\r\n          <button className=\"btn btn-primary\" onClick={handleGoBack}>\r\n            <i className=\"bi bi-arrow-left-square\"></i> Назад\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          {user ? (\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"Имя\"\r\n                placeholder=\"Введите Имя\"\r\n                name=\"name\"\r\n                value={user.name}\r\n                onChange={handleChange}\r\n                error={errors.name}\r\n              />\r\n              <TextField\r\n                label=\"Электронная почта\"\r\n                placeholder=\"Введите электронную почту\"\r\n                name=\"email\"\r\n                value={user.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n              />\r\n\r\n              <SelectField\r\n                label=\"Выберите вашу профессию\"\r\n                value={user.profession._id}\r\n                error={errors.professions}\r\n                name=\"profession\"\r\n                defaultOption=\"Choose...\"\r\n                options={professions}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <RadioField\r\n                options={[\r\n                  { name: 'Male', value: 'male' },\r\n                  { name: 'Female', value: 'female' },\r\n                  { name: 'Other', value: 'other' }\r\n                ]}\r\n                value={user.sex}\r\n                name=\"sex\"\r\n                onChange={handleChange}\r\n                label=\"Выберите ваш пол\"\r\n              />\r\n\r\n              <MultiSelectField\r\n                options={qualities}\r\n                onChange={handleChange}\r\n                name=\"qualities\"\r\n                label=\"Выберите ваши качества\"\r\n                defaultValue={user.qualities.map((quality) => ({\r\n                  label: quality.name,\r\n                  value: quality._id\r\n                }))}\r\n              />\r\n              <button className=\"btn btn-primary w-100 mx-auto\" type=\"submit\" disabled={!isValid}>\r\n                Обновить\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <h2>Loading...</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserEditPage.propTypes = {\r\n  userId: PropTypes.string\r\n};\r\n\r\nexport default UserEditPage;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport UsersListPage from '../components/page/usersListPage';\r\nimport UserPage from '../components/page/userPage';\r\nimport UserEditPage from '../components/page/userEditPage/userEditPage';\r\n\r\nconst Users = () => {\r\n  const params = useParams();\r\n  const { userId, edit } = params;\r\n\r\n  return userId && edit ? (\r\n    <UserEditPage userId={userId} />\r\n  ) : userId ? (\r\n    <UserPage userId={userId} />\r\n  ) : (\r\n    <UsersListPage />\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\n\r\nconst Main = () => {\r\n  return <h1>Main Page</h1>;\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <ul className=\"nav nav-tabs m-3\">\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/\" className=\"nav-link\">\r\n          Main\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/login\" className=\"nav-link\">\r\n          Login\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/users\" className=\"nav-link\">\r\n          Users\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\n\r\nimport Login from './layouts/login';\r\nimport Users from './layouts/users';\r\nimport Main from './layouts/main';\r\nimport NavBar from './components/ui/navBar';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route path=\"/users/:userId?/:edit?\" component={Users} />\r\n        <Route path=\"/login/:type?\" component={Login} />\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './app/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}