{"version":3,"sources":["app/components/common/form/textField.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/utils/validator.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/index.js","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/components/common/listGroup.jsx","app/components/common/pagination.jsx","app/components/ui/searchStatus.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/common/bookmark.jsx","app/components/ui/qualities/qualitiy.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/usersTable.jsx","app/components/common/searchBar.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/search.js","app/utils/paginate.js","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/page/userEditPage/userEditPage.jsx","app/layouts/users.jsx","app/layouts/main.jsx","app/components/ui/navBar.jsx","app/App.js","index.js"],"names":["TextField","label","type","placeholder","name","value","onChange","error","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","CheckBoxField","children","checked","LoginForm","email","password","stayOn","data","setData","errors","setErrors","validateScheme","yup","shape","required","matches","validate","then","catch","err","path","message","Object","keys","length","isValid","useEffect","handleChange","onSubmit","e","preventDefault","console","log","disabled","validator","config","validateMethod","statusValidate","trim","test","fieldName","professionsObject","doctor","_id","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","API","parse","getById","find","user","update","userIndex","findIndex","u","SelectField","defaultOption","options","optionsArray","Array","isArray","map","optionName","option","RadioField","MultiSelectField","defaultValue","closeMenuOnSelect","isMulti","classNamePrefix","RegisterForm","license","setProfessions","setQualities","api","validatorConfig","isRequired","isEmail","isCapitalSymbol","isContainDigit","min","href","Login","useParams","formType","setFormType","toggleFormType","role","ListGroup","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","Pagination","onPageChange","itemsCount","pageSize","currentPage","pageCount","Math","ceil","pages","_","range","page","searchStatus","text","TableHeader","onSort","selectedSort","columns","renderSortArrow","currentPath","order","column","undefined","scope","TableBody","renderContent","component","get","Table","BookMark","status","classes","Quality","Qualities","UserTable","onToggleBookMark","onDelete","to","delete","SearchBar","onSearch","UsersListPage","setUsers","setCurrentPage","selectedProf","setSelectedProf","sortBy","setSortBy","searchQuery","setSearchQuery","filteredUsers","query","searchBy","filter","el","toLowerCase","includes","count","usersCrop","pageNumber","startIndex","slice","take","paginate","orderBy","event","userId","pageIndex","UserPage","history","useHistory","setUser","push","UserEditPage","values","quality","replace","Users","params","edit","Main","NavBar","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4cef5cc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextField = ({ label, type, placeholder, name, value, onChange, error }) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className=\"input-group has-validation\">\r\n        <input\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n          type={showPassword ? 'text' : type}\r\n          className={getInputClasses()}\r\n        />\r\n        {type === 'password' && (\r\n          <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={toggleShowPassword}>\r\n            <i className={`bi bi-eye${showPassword ? '-slash' : ''}`}></i>\r\n          </button>\r\n        )}\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n  const handleChange = () => {\r\n    onChange({ name: name, value: !value });\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-check-input' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-check mb-4\">\r\n      <input\r\n        className={getInputClasses()}\r\n        type=\"checkbox\"\r\n        value=\"\"\r\n        id={name}\r\n        onChange={handleChange}\r\n        checked={value}\r\n      />\r\n      <label className=\"form-check-label\" htmlFor={name}>\r\n        {children}\r\n      </label>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckBoxField.propTypes = {\r\n  name: PropTypes.string,\r\n  value: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useState, useEffect } from 'react';\r\n// import { validator } from '../../utils/validator';\r\nimport TextField from '../common/form/textField';\r\nimport CheckBoxField from '../common/form/checkBoxField';\r\nimport * as yup from 'yup';\r\n\r\nconst LoginForm = () => {\r\n  const [data, setData] = useState({ email: '', password: '', stayOn: false });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateScheme = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('пароль обязателен для заполнения')\r\n      .matches(/^(?=.*[A-Z])/, 'Пароль должен содержать хотя бы одну заглавную букву')\r\n      .matches(/(?=.*[0-9])/, 'Пароль должен содержать хотя бы одно число')\r\n      .matches(/(?=.*[!@#$%^&*])/, 'Пароль должен содержать один из специальных символов !@#$%^&* ')\r\n      .matches(/(?=.{8})/, 'Пароль должен состоять минимум из 8 символов'),\r\n    email: yup\r\n      .string()\r\n      .required('Электронная почта обязательна для заполнения')\r\n      .email('email введен некорректно')\r\n  });\r\n\r\n  const validate = () => {\r\n    // const errors = validator(data, validatorConfig);\r\n    validateScheme\r\n      .validate(data)\r\n      .then(() => setErrors({}))\r\n      .catch((err) => setErrors({ [err.path]: err.message }));\r\n    // setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  // const validatorConfig = {\r\n  //   email: {\r\n  //     isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n  //     isEmail: {\r\n  //       message: 'email введен некорректно'\r\n  //     }\r\n  //   },\r\n  //   password: {\r\n  //     isRequired: { message: 'пароль обязателен для заполнения' },\r\n  //     isCapitalSymbol: {\r\n  //       message: 'Пароль должен содержать хотя бы одну заглавную букву'\r\n  //     },\r\n  //     isContainDigit: {\r\n  //       message: 'Пароль должен содержать хотя бы одно число'\r\n  //     },\r\n  //     min: {\r\n  //       message: 'Пароль должен состоять минимум из 8 символов',\r\n  //       value: 8\r\n  //     }\r\n  //   }\r\n  // };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"Введите ваш e-mail\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Введите пароль\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n\r\n      <CheckBoxField name=\"stayOn\" value={data.stayOn} onChange={handleChange}>\r\n        Оставаться в системе\r\n      </CheckBoxField>\r\n\r\n      <button className=\"btn btn-primary w-100 mx-auto\" type=\"submit\" disabled={!isValid}>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","export function validator(data, config) {\r\n  const errors = {};\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate;\r\n\r\n    switch (validateMethod) {\r\n      case 'isRequired': {\r\n        if (typeof data === 'boolean') {\r\n          statusValidate = !data;\r\n        } else {\r\n          statusValidate = data.trim() === '';\r\n        }\r\n        break;\r\n      }\r\n      case 'isEmail':\r\n        {\r\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n          statusValidate = !emailRegExp.test(data);\r\n        }\r\n        break;\r\n      case 'isCapitalSymbol': {\r\n        const capitalRegExp = /[A-Z]+/g;\r\n        statusValidate = !capitalRegExp.test(data);\r\n        break;\r\n      }\r\n      case 'isContainDigit': {\r\n        const digitRegExp = /\\d+/;\r\n        statusValidate = !digitRegExp.test(data);\r\n        break;\r\n      }\r\n      case 'min': {\r\n        statusValidate = data.length < config.value;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    if (statusValidate) return config.message;\r\n  }\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(validateMethod, data[fieldName], config[fieldName][validateMethod]);\r\n      if (error && !errors[fieldName]) {\r\n        errors[fieldName] = error;\r\n      }\r\n    }\r\n  }\r\n  return errors;\r\n}\r\n","export const professionsObject = {\n  doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n};\nexport const professions = [\n  { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n];\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(professionsObject);\n    }, 2000);\n  });\n\nexport default {\n  fetchAll\n};\n","import { professionsObject as professions } from './professions.api';\r\nconst qualities = {\r\n  tedious: {\r\n    _id: '67rdca3eeb7f6fgeed471198',\r\n    name: 'Нудила',\r\n    color: 'primary'\r\n  },\r\n  strange: {\r\n    _id: '67rdca3eeb7f6fgeed471100',\r\n    name: 'Странный',\r\n    color: 'secondary'\r\n  },\r\n  buller: {\r\n    _id: '67rdca3eeb7f6fgeed4711012',\r\n    name: 'Троль',\r\n    color: 'success'\r\n  },\r\n  alcoholic: {\r\n    _id: '67rdca3eeb7f6fgeed471101',\r\n    name: 'Алкоголик',\r\n    color: 'danger'\r\n  },\r\n  handsome: {\r\n    _id: '67rdca3eeb7f6fgeed471102',\r\n    name: 'Красавчик',\r\n    color: 'info'\r\n  },\r\n  uncertain: {\r\n    _id: '67rdca3eeb7f6fgeed471103',\r\n    name: 'Неуверенный',\r\n    color: 'dark'\r\n  }\r\n};\r\n\r\nconst users = [\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471815',\r\n    name: 'Джон Дориан',\r\n    email: 'johndorian@fastcompany.ru',\r\n    sex: 'male',\r\n    profession: professions.doctor,\r\n    qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\r\n    completedMeetings: 36,\r\n    rate: 2.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471816',\r\n    name: 'Кокс',\r\n    email: 'koks@fastcompany.ru',\r\n    sex: 'male',\r\n    profession: professions.doctor,\r\n    qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\r\n    completedMeetings: 15,\r\n    rate: 2.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471817',\r\n    name: 'Боб Келсо',\r\n    email: 'bobkelso@fastcompany.ru',\r\n    sex: 'male',\r\n    profession: professions.doctor,\r\n    qualities: [qualities.buller],\r\n    completedMeetings: 247,\r\n    rate: 3.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471818',\r\n    name: 'Рэйчел Грин',\r\n    email: 'rachelgreene@fastcompany.ru',\r\n    sex: 'female',\r\n    profession: professions.waiter,\r\n    qualities: [qualities.uncertain],\r\n    completedMeetings: 148,\r\n    rate: 3.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471819',\r\n    name: 'Шелдон Купер',\r\n    email: 'sheldoncooper@fastcompany.ru',\r\n    sex: 'male',\r\n    profession: professions.physics,\r\n    qualities: [qualities.strange, qualities.tedious],\r\n    completedMeetings: 37,\r\n    rate: 4.6,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471820',\r\n    name: 'Леонард Хофстедтер',\r\n    email: 'leonardhofstedter@fastcompany.ru',\r\n    sex: 'male',\r\n    profession: professions.physics,\r\n    qualities: [qualities.strange, qualities.uncertain],\r\n    completedMeetings: 147,\r\n    rate: 3.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471821',\r\n    name: 'Говард Воловиц',\r\n    email: 'howardwolowitz@fastcompany.ru',\r\n    sex: 'male',\r\n    profession: professions.engineer,\r\n    qualities: [qualities.strange, qualities.tedious],\r\n    completedMeetings: 72,\r\n    rate: 3.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471822',\r\n    name: 'Никола Тесла',\r\n    email: 'nikolatesla@fastcompany.ru',\r\n    sex: 'male',\r\n    profession: professions.engineer,\r\n    qualities: [qualities.handsome],\r\n    completedMeetings: 72,\r\n    rate: 5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471823',\r\n    name: 'Моника Геллер',\r\n    email: 'monicageller@fastcompany.ru',\r\n    sex: 'female',\r\n    profession: professions.cook,\r\n    qualities: [qualities.strange, qualities.uncertain],\r\n    completedMeetings: 17,\r\n    rate: 4.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471824',\r\n    name: 'Рататуй',\r\n    email: 'ratatouille@fastcompany.ru',\r\n    sex: 'male',\r\n    profession: professions.cook,\r\n    qualities: [qualities.handsome, qualities.buller],\r\n    completedMeetings: 17,\r\n    rate: 4.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed47181f',\r\n    name: 'Джоуи Триббиани',\r\n    email: 'joeytribbiani@fastcompany.ru',\r\n    sex: 'male',\r\n    profession: professions.actor,\r\n    qualities: [qualities.uncertain, qualities.strange],\r\n    completedMeetings: 434,\r\n    rate: 3.5,\r\n    bookmark: false\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed47181r',\r\n    name: 'Брэд Питт',\r\n    email: 'bradpitt@fastcompany.ru',\r\n    sex: 'male',\r\n    profession: professions.actor,\r\n    qualities: [qualities.handsome],\r\n    completedMeetings: 434,\r\n    rate: 5,\r\n    bookmark: false\r\n  }\r\n];\r\nif (!localStorage.getItem('users')) {\r\n  localStorage.setItem('users', JSON.stringify(users));\r\n}\r\n\r\nconst fetchAll = () =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(function () {\r\n      resolve(JSON.parse(localStorage.getItem('users')));\r\n    }, 2000);\r\n  });\r\nconst update = (id, data) =>\r\n  new Promise((resolve) => {\r\n    const users = JSON.parse(localStorage.getItem('users'));\r\n    const userIndex = users.findIndex((u) => u._id === id);\r\n    users[userIndex] = { ...users[userIndex], ...data };\r\n    localStorage.setItem('users', JSON.stringify(users));\r\n    resolve(users[userIndex]);\r\n  });\r\n\r\nconst getById = (id) =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(function () {\r\n      resolve(JSON.parse(localStorage.getItem('users')).find((user) => user._id === id));\r\n    }, 1000);\r\n  });\r\nexport default {\r\n  fetchAll,\r\n  getById,\r\n  update\r\n};\r\n","const qualities = {\n  tedious: {\n    _id: '67rdca3eeb7f6fgeed471198',\n    name: 'Нудила',\n    color: 'primary'\n  },\n  strange: {\n    _id: '67rdca3eeb7f6fgeed471100',\n    name: 'Странный',\n    color: 'secondary'\n  },\n  buller: {\n    _id: '67rdca3eeb7f6fgeed4711012',\n    name: 'Троль',\n    color: 'success'\n  },\n  alcoholic: {\n    _id: '67rdca3eeb7f6fgeed471101',\n    name: 'Алкоголик',\n    color: 'danger'\n  },\n  handsome: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Красавчик',\n    color: 'info'\n  },\n  uncertain: {\n    _id: '67rdca3eeb7f6fgeed471103',\n    name: 'Неуверенный',\n    color: 'dark'\n  }\n};\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(qualities);\n    }, 2000);\n  });\n\nexport default {\n  fetchAll\n};\n","import users from './fake.api/user.api';\nimport professions from './fake.api/professions.api';\nimport qualities from './fake.api/qualities.api';\nconst API = {\n  users,\n  professions,\n  qualities\n};\nexport default API;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SelectField = ({ label, value, onChange, defaultOption, options, error }) => {\r\n  const getInputClasses = () => {\r\n    return 'form-select' + (error ? ' is-invalid' : '');\r\n  };\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          name: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options;\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <select\r\n        className={getInputClasses()}\r\n        id=\"validationCustom04\"\r\n        value={value}\r\n        name=\"profession\"\r\n        onChange={handleChange}>\r\n        <option disabled value=\"\">\r\n          {defaultOption}\r\n        </option>\r\n        {optionsArray &&\r\n          optionsArray.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectField.propTypes = {\r\n  label: PropTypes.string,\r\n  defaultOption: PropTypes.string,\r\n  value: PropTypes.string,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default SelectField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label\">{label}</label>\r\n      <div>\r\n        {options.map((option) => (\r\n          <div key={option.name + '_' + option.value} className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name={name}\r\n              id={option.name + '_' + option.value}\r\n              checked={option.value === value}\r\n              value={option.value}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={option.name + '_' + option.value}>\r\n              {option.name}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadioField.propTypes = {\r\n  options: PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string\r\n};\r\n\r\nexport default RadioField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\n\r\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          label: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options;\r\n\r\n  const handleChange = (value) => {\r\n    onChange({ name: name, value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label\">{label}</label>\r\n      <Select\r\n        closeMenuOnSelect={false}\r\n        isMulti\r\n        defaultValue={defaultValue}\r\n        options={optionsArray}\r\n        className=\"basic-multi-select\"\r\n        classNamePrefix=\"select\"\r\n        onChange={handleChange}\r\n        name={name}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nMultiSelectField.propTypes = {\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChange: PropTypes.func,\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  defaultValue: PropTypes.array\r\n};\r\n\r\nexport default MultiSelectField;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { validator } from '../../utils/validator';\r\nimport TextField from '../common/form/textField';\r\nimport api from '../../api';\r\nimport SelectField from '../common/form/selectField';\r\nimport RadioField from '../common/form/radioField';\r\nimport MultiSelectField from '../common/form/multiSelectField';\r\nimport CheckBoxField from '../common/form/checkBoxField';\r\n\r\nconst RegisterForm = () => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    profession: '',\r\n    sex: 'male',\r\n    qualities: [],\r\n    license: false\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [professions, setProfessions] = useState([]);\r\n  const [qualities, setQualities] = useState({});\r\n\r\n  useEffect(() => {\r\n    api.professions.fetchAll().then((data) => setProfessions(data));\r\n    api.qualities.fetchAll().then((data) => setQualities(data));\r\n  }, []);\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n      isEmail: {\r\n        message: 'email введен некорректно'\r\n      }\r\n    },\r\n    password: {\r\n      isRequired: { message: 'пароль обязателен для заполнения' },\r\n      isCapitalSymbol: {\r\n        message: 'Пароль должен содержать хотя бы одну заглавную букву'\r\n      },\r\n      isContainDigit: {\r\n        message: 'Пароль должен содержать хотя бы одно число'\r\n      },\r\n      min: {\r\n        message: 'Пароль должен состоять минимум из 8 символов',\r\n        value: 8\r\n      }\r\n    },\r\n    profession: {\r\n      isRequired: { message: 'Обязательно выберите вашу профессию' }\r\n    },\r\n    license: {\r\n      isRequired: {\r\n        message: 'Вы не можете использовать наш сервис без подтверждения лицензионного соглашения'\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"Введите ваш e-mail\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Введите пароль\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n      <SelectField\r\n        label=\"Выберите вашу профессию\"\r\n        value={data.profession}\r\n        error={errors.profession}\r\n        defaultOption=\"Choose...\"\r\n        options={professions}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <RadioField\r\n        options={[\r\n          { name: 'Male', value: 'male' },\r\n          { name: 'Female', value: 'female' },\r\n          { name: 'Other', value: 'other' }\r\n        ]}\r\n        value={data.sex}\r\n        name=\"sex\"\r\n        onChange={handleChange}\r\n        label=\"Выберите ваш пол\"\r\n      />\r\n      <MultiSelectField\r\n        options={qualities}\r\n        onChange={handleChange}\r\n        name=\"qualities\"\r\n        label=\"Выберите ваши качества\"\r\n        defaultValue={data.qualities}\r\n      />\r\n      <CheckBoxField\r\n        name=\"license\"\r\n        value={data.license}\r\n        onChange={handleChange}\r\n        error={errors.license}>\r\n        Подтвердить <a href=\"#\">лицензионное соглашение</a>\r\n      </CheckBoxField>\r\n\r\n      <button className=\"btn btn-primary w-100 mx-auto\" type=\"submit\" disabled={!isValid}>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport LoginForm from '../components/ui/loginForm';\r\nimport RegisterForm from '../components/ui/registerForm';\r\n\r\nconst Login = () => {\r\n  const { type } = useParams();\r\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login');\r\n\r\n  const toggleFormType = () => {\r\n    setFormType((prevState) => (prevState === 'register' ? 'login' : 'register'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          {formType === 'register' ? (\r\n            <>\r\n              <h3 className=\"mb-4\">Register</h3>\r\n              <RegisterForm />\r\n              <p>\r\n                Already have account?\r\n                <a role=\"button\" onClick={toggleFormType}>\r\n                  Sign In\r\n                </a>\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h3 className=\"mb-4\">Login</h3>\r\n              <LoginForm />\r\n              <p>\r\n                Dont have account?\r\n                <a role=\"button\" onClick={toggleFormType}>\r\n                  Sign Up\r\n                </a>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListGroup = ({ items, valueProperty, contentProperty, onItemSelect, selectedItem }) => {\r\n  if (!Array.isArray(items)) {\r\n    return (\r\n      <ul className=\"list-group\">\r\n        {Object.keys(items).map((item) => (\r\n          <li\r\n            key={items[item][valueProperty]}\r\n            role=\"button\"\r\n            className={'list-group-item' + (items[item] === selectedItem ? ' active' : '')}\r\n            onClick={() => onItemSelect(items[item])}>\r\n            {items[item][contentProperty]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          role=\"button\"\r\n          className={'list-group-item' + (item === selectedItem ? ' active' : '')}\r\n          onClick={() => onItemSelect(item)}>\r\n          {item[contentProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  valueProperty: '_id',\r\n  contentProperty: 'name'\r\n};\r\n\r\nListGroup.propTypes = {\r\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  valueProperty: PropTypes.string.isRequired,\r\n  contentProperty: PropTypes.string.isRequired,\r\n  onItemSelect: PropTypes.func,\r\n  selectedItem: PropTypes.object\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = ({ onPageChange, itemsCount, pageSize, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n  const pages = _.range(1, pageCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li className={'page-item ' + (page === currentPage ? 'active' : '')} key={page}>\r\n            <a className=\"page-link\" role=\"button\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nPagination.propTypes = {\r\n  onPageChange: PropTypes.func.isRequired,\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\n\r\nconst searchStatus = ({ length }) => {\r\n  let text = `${length} человек тусанет с тобой сегодня`;\r\n  let className = 'badge bg-primary';\r\n\r\n  if (length <= 4 && length > 1) {\r\n    text = `${length} человека тусанут с тобой сегодня`;\r\n  }\r\n  if (length === 0) {\r\n    text = 'Никто с тобой не тусанет';\r\n    className = 'badge bg-danger';\r\n  }\r\n\r\n  return (\r\n    <h2>\r\n      <span className={className}>{text}</span>\r\n    </h2>\r\n  );\r\n};\r\n\r\nexport default searchStatus;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n  const handleSort = (item) => {\r\n    if (selectedSort.path === item) {\r\n      onSort({ ...selectedSort, order: selectedSort.order === 'asc' ? 'desc' : 'asc' });\r\n    } else {\r\n      onSort({ path: item, order: 'asc' });\r\n    }\r\n  };\r\n\r\n  const renderSortArrow = (selectedSort, currentPath) => {\r\n    if (selectedSort.path === currentPath) {\r\n      if (selectedSort.order === 'asc') {\r\n        return <i className=\"bi bi-caret-down-fill\"></i>;\r\n      } else {\r\n        return <i className=\"bi bi-caret-up-fill\"></i>;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {Object.keys(columns).map((column) => (\r\n          <th\r\n            key={column}\r\n            onClick={columns[column].path ? () => handleSort(columns[column].path) : undefined}\r\n            {...{ role: columns[column].path && 'button' }}\r\n            scope=\"col\">\r\n            {columns[column].name}\r\n            {renderSortArrow(selectedSort, columns[column].path)}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n  const renderContent = (item, column) => {\r\n    if (columns[column].component) {\r\n      const component = columns[column].component;\r\n      if (typeof component === 'function') {\r\n        return component(item);\r\n      }\r\n      return component;\r\n    }\r\n    return _.get(item, columns[column].path);\r\n  };\r\n\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr key={item._id}>\r\n          {Object.keys(columns).map((column) => (\r\n            <td key={column}>{renderContent(item, column)}</td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nTableBody.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import Table from './table';\r\nimport TableBody from './tableBody';\r\nimport TableHeader from './tableHeader';\r\nexport default Table;\r\nexport { TableBody, TableHeader };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      {children || (\r\n        <>\r\n          <TableHeader {...{ onSort, selectedSort, columns }} />\r\n          <TableBody {...{ columns, data }} />\r\n        </>\r\n      )}\r\n    </table>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  onSort: PropTypes.func,\r\n  selectedSort: PropTypes.object,\r\n  columns: PropTypes.object,\r\n  data: PropTypes.array,\r\n  children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookMark = ({ status, onClick }) => {\r\n  let classes = 'bi bi-bookmark';\r\n  classes = status ? 'bi bi-bookmark-fill' : classes;\r\n\r\n  return (\r\n    <button className=\"btn btn-primary\" onClick={onClick}>\r\n      <i className={classes}></i>\r\n    </button>\r\n  );\r\n};\r\nBookMark.propTypes = {\r\n  id: PropTypes.string,\r\n  status: PropTypes.bool,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default BookMark;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Quality = ({ name, color }) => {\r\n  const classes = 'badge m-1 bg-';\r\n  return <span className={classes + color}>{name}</span>;\r\n};\r\n\r\nQuality.propTypes = {\r\n  name: PropTypes.string,\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default Quality;\r\n","import Qualities from './qualitiesList';\r\nexport default Qualities;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Quality from './qualitiy';\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n  return (\r\n    <>\r\n      {qualities.map((item) => (\r\n        <Quality key={item._id} {...item} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nQualitiesList.propTypes = {\r\n  qualities: PropTypes.array.isRequired\r\n};\r\n\r\nexport default QualitiesList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from '../common/table';\r\nimport BookMark from '../common/bookmark';\r\nimport Qualities from './qualities';\r\n\r\nconst UserTable = ({ users, onSort, selectedSort, onToggleBookMark, onDelete }) => {\r\n  const columns = {\r\n    name: {\r\n      path: 'name',\r\n      name: 'Имя',\r\n      component: (user) => <Link to={`users/${user._id}`}>{user.name}</Link>\r\n    },\r\n    qualities: {\r\n      name: 'Качества',\r\n      component: (user) => <Qualities qualities={user.qualities} />\r\n    },\r\n    professions: { path: 'profession.name', name: 'Профессия' },\r\n    completedMeetings: { path: 'completedMeetings', name: 'Встретился, раз' },\r\n    rate: { path: 'rate', name: 'Оценка' },\r\n    bookmark: {\r\n      path: 'bookmark',\r\n      name: 'Избранное',\r\n      component: (user) => (\r\n        <BookMark onClick={() => onToggleBookMark(user._id)} status={user.bookmark} />\r\n      )\r\n    },\r\n    delete: {\r\n      component: (user) => (\r\n        <button className=\"btn btn-danger\" onClick={() => onDelete(user._id)}>\r\n          Delete\r\n        </button>\r\n      )\r\n    }\r\n  };\r\n\r\n  return <Table onSort={onSort} selectedSort={selectedSort} columns={columns} data={users} />;\r\n};\r\n\r\nUserTable.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  onToggleBookMark: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from './form/textField';\r\n\r\nconst SearchBar = ({ value, onSearch }) => {\r\n  return (\r\n    <>\r\n      <TextField\r\n        name=\"search\"\r\n        placeholder=\"Поиск...\"\r\n        type=\"search\"\r\n        value={value}\r\n        onChange={onSearch}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSearch: PropTypes.func,\r\n  value: PropTypes.string\r\n};\r\n\r\nexport default SearchBar;\r\n","import UsersListPage from './usersListPage';\r\nexport default UsersListPage;\r\n","/* eslint-disable indent */\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport api from '../../../api';\r\nimport ListGroup from '../../common/listGroup';\r\nimport Pagination from '../../common/pagination';\r\nimport SearchStatus from '../../ui/searchStatus';\r\nimport UsersTable from '../../ui/usersTable';\r\nimport { paginate } from '../../../utils/paginate';\r\nimport searchBy from '../../../utils/search';\r\nimport SearchBar from '../../common/searchBar';\r\n\r\nconst UsersListPage = () => {\r\n  const [users, setUsers] = useState();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [professions, setProfessions] = useState();\r\n  const [selectedProf, setSelectedProf] = useState();\r\n  const [sortBy, setSortBy] = useState({ path: 'name', order: 'asc' });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const pageSize = 8;\r\n\r\n  useEffect(() => {\r\n    api.users.fetchAll().then((data) => setUsers(data));\r\n  }, []);\r\n\r\n  console.log('users', users);\r\n  useEffect(() => {\r\n    if (!professions) {\r\n      api.professions.fetchAll().then((data) => setProfessions(data));\r\n    }\r\n  }, [professions]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedProf]);\r\n\r\n  const handleDelete = (userId) => {\r\n    return setUsers(users.filter((user) => user._id !== userId));\r\n  };\r\n\r\n  const handleToggleBookMark = (userId) => {\r\n    setUsers(\r\n      users.filter((user) => {\r\n        if (user._id === userId) {\r\n          user.bookmark = !user.bookmark;\r\n          return user;\r\n        }\r\n        return user;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleProfessionSelect = (item) => {\r\n    setSearchQuery('');\r\n    setSelectedProf(item);\r\n  };\r\n\r\n  const handlePageChange = (pageIndex) => {\r\n    setCurrentPage(pageIndex);\r\n  };\r\n\r\n  const handleSort = (item) => {\r\n    setSortBy(item);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setSelectedProf();\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setSelectedProf();\r\n    setSearchQuery('');\r\n  };\r\n\r\n  if (users) {\r\n    const filteredUsers = searchQuery\r\n      ? searchBy(users, searchQuery, { searchBy: 'name' })\r\n      : selectedProf\r\n      ? users.filter((user) => JSON.stringify(user.profession) === JSON.stringify(selectedProf))\r\n      : users;\r\n\r\n    const count = filteredUsers.length;\r\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\r\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"d-flex\">\r\n        {professions && (\r\n          <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n            <ListGroup\r\n              items={professions}\r\n              onItemSelect={handleProfessionSelect}\r\n              selectedItem={selectedProf}\r\n            />\r\n            <button className=\"btn btn-secondary mt-2\" onClick={clearFilter}>\r\n              Очистить\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"d-flex flex-column\">\r\n          <SearchStatus length={count} />\r\n          <SearchBar data={users} value={searchQuery} onSearch={handleSearch} />\r\n          {count > 0 && (\r\n            <UsersTable\r\n              users={usersCrop}\r\n              onSort={handleSort}\r\n              selectedSort={sortBy}\r\n              onToggleBookMark={handleToggleBookMark}\r\n              onDelete={handleDelete}\r\n            />\r\n          )}\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Pagination\r\n              itemsCount={count}\r\n              pageSize={pageSize}\r\n              onPageChange={handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <h1 className=\"d-flex justify-content-center align-items-center\">Loading...</h1>;\r\n};\r\n\r\nUsersListPage.propTypes = {\r\n  users: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n  onToggleBookMark: PropTypes.func\r\n};\r\nexport default UsersListPage;\r\n","export default function searchBy(data, query, config = { searchBy: 'name' }) {\r\n  return data.filter((el) => el[config.searchBy].toLowerCase().includes(query.toLowerCase()));\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import UserPage from './userPage';\r\nexport default UserPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport API from '../../../api';\r\nimport Qualities from '../../ui/qualities';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst UserPage = ({ userId }) => {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState();\r\n\r\n  const handleClick = () => {\r\n    history.push(`/users/${userId}/edit`);\r\n  };\r\n  useEffect(() => {\r\n    API.users.getById(userId).then((data) => setUser(data));\r\n  }, []);\r\n\r\n  if (user) {\r\n    return (\r\n      <div className=\"d-flex flex-column m-3\">\r\n        <h1 className=\"mb-3\">{user.name}</h1>\r\n        <h2>{`Профессия: ${user.profession.name}`}</h2>\r\n        <ul>\r\n          <Qualities qualities={user.qualities} />\r\n        </ul>\r\n        <span>{`completedMeetings: ${user.completedMeetings}`}</span>\r\n        <h3 className=\"my-3\">{`Rate: ${user.rate}/5`}</h3>\r\n        <div>\r\n          <button className=\"btn btn-success\" onClick={handleClick}>\r\n            Изменить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <h2>Loading...</h2>;\r\n};\r\n\r\nUserPage.propTypes = {\r\n  userId: PropTypes.string\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../../../api';\r\nimport TextField from '../../common/form/textField';\r\nimport SelectField from '../../common/form/selectField';\r\nimport RadioField from '../../common/form/radioField';\r\nimport MultiSelectField from '../../common/form/multiSelectField';\r\nimport { validator } from '../../../utils/validator';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst UserEditPage = ({ userId }) => {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState();\r\n  const [qualities, setQualities] = useState({});\r\n  const [professions, setProfessions] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = (target) => {\r\n    setUser((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // valid profession for render\r\n    for (const profession in professions) {\r\n      if (professions[profession]._id === user.profession) {\r\n        user.profession = professions[profession];\r\n      }\r\n    }\r\n\r\n    // valid qualities for render\r\n    user.qualities = Object.values(qualities).filter((quality) =>\r\n      user.qualities.map((quality) => quality.value).includes(quality._id)\r\n    );\r\n\r\n    api.users.update(userId, user);\r\n    history.replace('/users');\r\n  };\r\n\r\n  useEffect(() => {\r\n    api.users.getById(userId).then((data) => setUser(data));\r\n    api.qualities.fetchAll().then((data) => setQualities(data));\r\n    api.professions.fetchAll().then((data) => setProfessions(data));\r\n  }, []);\r\n\r\n  const validate = () => {\r\n    const errors = validator(user, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    name: {\r\n      isRequired: { message: 'Имя обязательно для заполнения' }\r\n    },\r\n    email: {\r\n      isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n      isEmail: {\r\n        message: 'email введен некорректно'\r\n      }\r\n    },\r\n    professions: {\r\n      isRequired: { message: 'Обязательно выберите вашу профессию' }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          {user ? (\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"Имя\"\r\n                placeholder=\"Введите Имя\"\r\n                name=\"name\"\r\n                value={user.name}\r\n                onChange={handleChange}\r\n                error={errors.name}\r\n              />\r\n              <TextField\r\n                label=\"Электронная почта\"\r\n                placeholder=\"Введите электронную почту\"\r\n                name=\"email\"\r\n                value={user.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n              />\r\n\r\n              <SelectField\r\n                label=\"Выберите вашу профессию\"\r\n                value={user.profession._id}\r\n                error={errors.professions}\r\n                defaultOption=\"Choose...\"\r\n                options={professions}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <RadioField\r\n                options={[\r\n                  { name: 'Male', value: 'male' },\r\n                  { name: 'Female', value: 'female' },\r\n                  { name: 'Other', value: 'other' }\r\n                ]}\r\n                value={user.sex}\r\n                name=\"sex\"\r\n                onChange={handleChange}\r\n                label=\"Выберите ваш пол\"\r\n              />\r\n\r\n              <MultiSelectField\r\n                options={qualities}\r\n                onChange={handleChange}\r\n                name=\"qualities\"\r\n                label=\"Выберите ваши качества\"\r\n                defaultValue={user.qualities.map((quality) => ({\r\n                  label: quality.name,\r\n                  value: quality._id\r\n                }))}\r\n              />\r\n              <button className=\"btn btn-primary w-100 mx-auto\" type=\"submit\" disabled={!isValid}>\r\n                Обновить\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <h2>Loading...</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserEditPage.propTypes = {\r\n  userId: PropTypes.string\r\n};\r\n\r\nexport default UserEditPage;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport UsersListPage from '../components/page/usersListPage';\r\nimport UserPage from '../components/page/userPage';\r\nimport UserEditPage from '../components/page/userEditPage/userEditPage';\r\n\r\nconst Users = () => {\r\n  const params = useParams();\r\n  const { userId, edit } = params;\r\n\r\n  return userId && edit ? (\r\n    <UserEditPage userId={userId} />\r\n  ) : userId ? (\r\n    <UserPage userId={userId} />\r\n  ) : (\r\n    <UsersListPage />\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\n\r\nconst Main = () => {\r\n  return <h1>Main Page</h1>;\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <ul className=\"nav nav-tabs m-3\">\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/\" className=\"nav-link\">\r\n          Main\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/login\" className=\"nav-link\">\r\n          Login\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/users\" className=\"nav-link\">\r\n          Users\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\n\r\nimport Login from './layouts/login';\r\nimport Users from './layouts/users';\r\nimport Main from './layouts/main';\r\nimport NavBar from './components/ui/navBar';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route path=\"/users/:userId?/:edit?\" component={Users} />\r\n        <Route path=\"/login/:type?\" component={Login} />\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './app/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}